<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1128px" preserveAspectRatio="none" style="width:3890px;height:1128px;" version="1.1" viewBox="0 0 3890 1128" width="3890px" zoomAndPan="magnify"><defs><filter height="300%" id="f1ih5raffj7i4o" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[041e745b51d1bd870567d4f38869c776]
class LaxFriedrichsFlux--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="86.4141" id="LaxFriedrichsFlux" style="stroke: #A80036; stroke-width: 1.5;" width="529" x="1727.5" y="1012.5"/><ellipse cx="1935.25" cy="1028.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1938.2188,1034.1406 Q1937.6406,1034.4375 1937,1034.5781 Q1936.3594,1034.7344 1935.6563,1034.7344 Q1933.1563,1034.7344 1931.8281,1033.0938 Q1930.5156,1031.4375 1930.5156,1028.3125 Q1930.5156,1025.1875 1931.8281,1023.5313 Q1933.1563,1021.875 1935.6563,1021.875 Q1936.3594,1021.875 1937,1022.0313 Q1937.6563,1022.1875 1938.2188,1022.4844 L1938.2188,1025.2031 Q1937.5938,1024.625 1937,1024.3594 Q1936.4063,1024.0781 1935.7813,1024.0781 Q1934.4375,1024.0781 1933.75,1025.1563 Q1933.0625,1026.2188 1933.0625,1028.3125 Q1933.0625,1030.4063 1933.75,1031.4844 Q1934.4375,1032.5469 1935.7813,1032.5469 Q1936.4063,1032.5469 1937,1032.2813 Q1937.5938,1032 1938.2188,1031.4219 L1938.2188,1034.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="1955.75" y="1032.6543">LaxFriedrichsFlux</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1728.5" x2="2255.5" y1="1044.5" y2="1044.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1735.5" y="1052.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="1747.5" y="1058.7104">_dt : double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1728.5" x2="2255.5" y1="1065.3047" y2="1065.3047"/><ellipse cx="1738.5" cy="1076.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1747.5" y="1079.5151">LaxFriedrichsFlux(Settings* settings)</text><ellipse cx="1738.5" cy="1089.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="1747.5" y="1092.3198">Flux(const Vector&amp; Omega, double psiL, double psiR, const Vector&amp; n) : double {query}</text><!--MD5=[49b4333bed3a745cc53311fcf54bbfcc]
class Mesh--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="470.5547" id="Mesh" style="stroke: #A80036; stroke-width: 1.5;" width="934" x="6" y="8"/><ellipse cx="452.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M455.2188,29.6406 Q454.6406,29.9375 454,30.0781 Q453.3594,30.2344 452.6563,30.2344 Q450.1563,30.2344 448.8281,28.5938 Q447.5156,26.9375 447.5156,23.8125 Q447.5156,20.6875 448.8281,19.0313 Q450.1563,17.375 452.6563,17.375 Q453.3594,17.375 454,17.5313 Q454.6563,17.6875 455.2188,17.9844 L455.2188,20.7031 Q454.5938,20.125 454,19.8594 Q453.4063,19.5781 452.7813,19.5781 Q451.4375,19.5781 450.75,20.6563 Q450.0625,21.7188 450.0625,23.8125 Q450.0625,25.9063 450.75,26.9844 Q451.4375,28.0469 452.7813,28.0469 Q453.4063,28.0469 454,27.7813 Q454.5938,27.5 455.2188,26.9219 L455.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="33" x="472.75" y="28.1543">Mesh</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="939" y1="40" y2="40"/><polygon fill="none" points="17,46,21,50,17,54,13,50" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="26" y="54.2104">_nodeNeighbors : blaze::CompressedMatrix&lt;bool&gt;</text><polygon fill="none" points="17,58.8047,21,62.8047,17,66.8047,13,62.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="26" y="67.0151">_dim : const unsigned</text><polygon fill="none" points="17,71.6094,21,75.6094,17,79.6094,13,75.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="26" y="79.8198">_ghostCellID : const unsigned</text><polygon fill="none" points="17,84.4141,21,88.4141,17,92.4141,13,88.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="26" y="92.6245">_numBoundaries : const unsigned</text><polygon fill="none" points="17,97.2188,21,101.2188,17,105.2188,13,101.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="26" y="105.4292">_numCells : const unsigned</text><polygon fill="none" points="17,110.0234,21,114.0234,17,118.0234,13,114.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="26" y="118.2339">_numNodes : const unsigned</text><polygon fill="none" points="17,122.8281,21,126.8281,17,130.8281,13,126.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="26" y="131.0386">_numNodesPerCell : const unsigned</text><polygon fill="none" points="17,135.6328,21,139.6328,17,143.6328,13,139.6328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="26" y="143.8433">_log : std::shared_ptr&lt;spdlog::logger&gt;</text><polygon fill="none" points="17,148.4375,21,152.4375,17,156.4375,13,152.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="156.6479">_nodes : std::vector&lt;Vector&gt;</text><polygon fill="none" points="17,161.2422,21,165.2422,17,169.2422,13,165.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="26" y="169.4526">_isBoundaryCell : std::vector&lt;bool&gt;</text><polygon fill="none" points="17,174.0469,21,178.0469,17,182.0469,13,178.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="26" y="182.2573">_cellAreas : std::vector&lt;double&gt;</text><polygon fill="none" points="17,186.8516,21,190.8516,17,194.8516,13,190.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="470" x="26" y="195.062">_boundaries : std::vector&lt;std::pair&lt;BOUNDARY_TYPE, std::vector&lt;unsigned&gt; &gt; &gt;</text><polygon fill="none" points="17,199.6563,21,203.6563,17,207.6563,13,203.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="26" y="207.8667">_cellNormals : std::vector&lt;std::vector&lt;Vector&gt; &gt;</text><polygon fill="none" points="17,212.4609,21,216.4609,17,220.4609,13,216.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="26" y="220.6714">_cellNeighbors : std::vector&lt;std::vector&lt;unsigned&gt; &gt;</text><polygon fill="none" points="17,225.2656,21,229.2656,17,233.2656,13,229.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="26" y="233.4761">_cells : std::vector&lt;std::vector&lt;unsigned&gt; &gt;</text><polygon fill="none" points="17,238.0703,21,242.0703,17,246.0703,13,242.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="26" y="246.2808">_colors : std::vector&lt;unsigned&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="939" y1="252.875" y2="252.875"/><ellipse cx="17" cy="263.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="26" y="267.0854">Mesh()</text><ellipse cx="17" cy="276.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="908" x="26" y="279.8901">Mesh(std::vector&lt;Vector&gt; nodes, std::vector&lt;std::vector&lt;unsigned&gt; &gt; cells, std::vector&lt;std::pair&lt;BOUNDARY_TYPE, std::vector&lt;unsigned&gt; &gt; &gt; boundaries)</text><ellipse cx="17" cy="289.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="26" y="292.6948">~Mesh()</text><polygon fill="#FFFF44" points="17,297.2891,21,301.2891,17,305.2891,13,301.2891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="631" x="26" y="305.4995">ComputeOutwardFacingNormal(const Vector&amp; nodeA, const Vector&amp; nodeB, const Vector&amp; cellCenter) : Vector</text><ellipse cx="17" cy="315.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="26" y="318.3042">GetNodes() : std::vector&lt;Vector&gt;&amp; {query}</text><ellipse cx="17" cy="327.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="26" y="331.1089">GetCellAreas() : std::vector&lt;double&gt;&amp; {query}</text><ellipse cx="17" cy="340.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="26" y="343.9136">GetCells() : std::vector&lt;std::vector&lt;unsigned&gt; &gt;&amp; {query}</text><ellipse cx="17" cy="353.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="26" y="356.7183">GetPartitionIDs() : std::vector&lt;unsigned&gt;&amp; {query}</text><ellipse cx="17" cy="366.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="26" y="369.5229">GetDim() : unsigned {query}</text><ellipse cx="17" cy="379.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="26" y="382.3276">GetNumCells() : unsigned {query}</text><ellipse cx="17" cy="391.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="26" y="395.1323">GetNumNodes() : unsigned {query}</text><ellipse cx="17" cy="404.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="26" y="407.937">GetNumNodesPerCell() : unsigned {query}</text><polygon fill="#FFFF44" points="17,412.5313,21,416.5313,17,420.5313,13,416.5313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="26" y="420.7417">ComputeCellAreas() : void</text><polygon fill="#FFFF44" points="17,425.3359,21,429.3359,17,433.3359,13,429.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="26" y="433.5464">ComputeConnectivity() : void</text><polygon fill="#FFFF44" points="17,438.1406,21,442.1406,17,446.1406,13,442.1406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="26" y="446.3511">ComputeNormals() : void</text><polygon fill="#FFFF44" points="17,450.9453,21,454.9453,17,458.9453,13,454.9453" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="26" y="459.1558">ComputePartitioning() : void</text><ellipse cx="17" cy="468.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="675" x="26" y="471.9604">ComputeSlopes(unsigned nq, VectorVector&amp; psiDerX, VectorVector&amp; psiDerY, const VectorVector&amp; psi) : void {query}</text><!--MD5=[63c6af204b72495afb767f03716ed6bb]
class NumericalFlux--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="86.4141" id="NumericalFlux" style="stroke: #A80036; stroke-width: 1.5;" width="528" x="2010" y="693"/><ellipse cx="2226.25" cy="709" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2226.3594,704.3438 L2225.2031,709.4219 L2227.5313,709.4219 L2226.3594,704.3438 Z M2224.875,702.1094 L2227.8594,702.1094 L2231.2188,714.5 L2228.7656,714.5 L2228,711.4375 L2224.7188,711.4375 L2223.9688,714.5 L2221.5313,714.5 L2224.875,702.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="87" x="2246.75" y="713.1543">NumericalFlux</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2011" x2="2537" y1="725" y2="725"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2011" x2="2537" y1="733" y2="733"/><ellipse cx="2021" cy="744" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2030" y="747.2104">NumericalFlux(Settings* settings)</text><ellipse cx="2021" cy="756.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="246" x="2030" y="760.0151">Create(Settings* settings) : NumericalFlux*</text><ellipse cx="2021" cy="769.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="502" x="2030" y="772.8198">Flux(const Vector&amp; Omega, double psiL, double psiR, const Vector&amp; n) : double {query}</text><!--MD5=[b78e42fe1f33f5c4bf0e37a39b0075a9]
class Physics--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="150.4375" id="Physics" style="stroke: #A80036; stroke-width: 1.5;" width="729" x="975.5" y="168.5"/><ellipse cx="1312.75" cy="184.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1315.7188,190.1406 Q1315.1406,190.4375 1314.5,190.5781 Q1313.8594,190.7344 1313.1563,190.7344 Q1310.6563,190.7344 1309.3281,189.0938 Q1308.0156,187.4375 1308.0156,184.3125 Q1308.0156,181.1875 1309.3281,179.5313 Q1310.6563,177.875 1313.1563,177.875 Q1313.8594,177.875 1314.5,178.0313 Q1315.1563,178.1875 1315.7188,178.4844 L1315.7188,181.2031 Q1315.0938,180.625 1314.5,180.3594 Q1313.9063,180.0781 1313.2813,180.0781 Q1311.9375,180.0781 1311.25,181.1563 Q1310.5625,182.2188 1310.5625,184.3125 Q1310.5625,186.4063 1311.25,187.4844 Q1311.9375,188.5469 1313.2813,188.5469 Q1313.9063,188.5469 1314.5,188.2813 Q1315.0938,188 1315.7188,187.4219 L1315.7188,190.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="46" x="1333.25" y="188.6543">Physics</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="976.5" x2="1703.5" y1="200.5" y2="200.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="983.5" y="208.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="995.5" y="214.7104">_totalxsH2O : Matrix</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="983.5" y="221.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="995.5" y="227.5151">_xsH2O : Matrix</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="976.5" x2="1703.5" y1="234.1094" y2="234.1094"/><ellipse cx="986.5" cy="245.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="995.5" y="248.3198">Physics(Settings* settings)</text><ellipse cx="986.5" cy="257.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="210" x="995.5" y="261.1245">Create(Settings* settings) : Physics*</text><ellipse cx="986.5" cy="270.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="703" x="995.5" y="273.9292">GetScatteringXS(std::vector&lt;double&gt; energies, std::vector&lt;double&gt; density, std::vector&lt;double&gt; Omegas) : VectorVector</text><ellipse cx="986.5" cy="283.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="528" x="995.5" y="286.7339">GetStoppingPower(std::vector&lt;double&gt; energies, std::vector&lt;double&gt; sH2O) : VectorVector</text><ellipse cx="986.5" cy="296.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="496" x="995.5" y="299.5386">GetTotalXS(std::vector&lt;double&gt; energies, std::vector&lt;double&gt; density) : VectorVector</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="983.5" y="306.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="995.5" y="312.3433">LoadXSH2O(std::string fileName1, std::string fileName2) : void</text><!--MD5=[296293fbdb23d0a6b21645666f72f612]
class QDummy--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="124.8281" id="QDummy" style="stroke: #A80036; stroke-width: 1.5;" width="188" x="2798" y="673.5"/><ellipse cx="2860.75" cy="689.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2863.7188,695.1406 Q2863.1406,695.4375 2862.5,695.5781 Q2861.8594,695.7344 2861.1563,695.7344 Q2858.6563,695.7344 2857.3281,694.0938 Q2856.0156,692.4375 2856.0156,689.3125 Q2856.0156,686.1875 2857.3281,684.5313 Q2858.6563,682.875 2861.1563,682.875 Q2861.8594,682.875 2862.5,683.0313 Q2863.1563,683.1875 2863.7188,683.4844 L2863.7188,686.2031 Q2863.0938,685.625 2862.5,685.3594 Q2861.9063,685.0781 2861.2813,685.0781 Q2859.9375,685.0781 2859.25,686.1563 Q2858.5625,687.2188 2858.5625,689.3125 Q2858.5625,691.4063 2859.25,692.4844 Q2859.9375,693.5469 2861.2813,693.5469 Q2861.9063,693.5469 2862.5,693.2813 Q2863.0938,693 2863.7188,692.4219 L2863.7188,695.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="2881.25" y="693.6543">QDummy</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2799" x2="2985" y1="705.5" y2="705.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2799" x2="2985" y1="713.5" y2="713.5"/><ellipse cx="2809" cy="724.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="2818" y="727.7104">QDummy(unsigned order)</text><ellipse cx="2809" cy="737.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="2818" y="740.5151">~QDummy()</text><ellipse cx="2809" cy="750.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2818" y="753.3198">SetConnectivity() : void</text><ellipse cx="2809" cy="762.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2818" y="766.1245">SetName() : void</text><ellipse cx="2809" cy="775.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="2818" y="778.9292">SetNq() : void</text><ellipse cx="2809" cy="788.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="2818" y="791.7339">SetPointsAndWeights() : void</text><!--MD5=[43fb1c5f2053cc224ff05d9a3a1d1cbc]
class QGaussLegendreTensorized--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="124.8281" id="QGaussLegendreTensorized" style="stroke: #A80036; stroke-width: 1.5;" width="282" x="3021" y="673.5"/><ellipse cx="3070.75" cy="689.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3073.7188,695.1406 Q3073.1406,695.4375 3072.5,695.5781 Q3071.8594,695.7344 3071.1563,695.7344 Q3068.6563,695.7344 3067.3281,694.0938 Q3066.0156,692.4375 3066.0156,689.3125 Q3066.0156,686.1875 3067.3281,684.5313 Q3068.6563,682.875 3071.1563,682.875 Q3071.8594,682.875 3072.5,683.0313 Q3073.1563,683.1875 3073.7188,683.4844 L3073.7188,686.2031 Q3073.0938,685.625 3072.5,685.3594 Q3071.9063,685.0781 3071.2813,685.0781 Q3069.9375,685.0781 3069.25,686.1563 Q3068.5625,687.2188 3068.5625,689.3125 Q3068.5625,691.4063 3069.25,692.4844 Q3069.9375,693.5469 3071.2813,693.5469 Q3071.9063,693.5469 3072.5,693.2813 Q3073.0938,693 3073.7188,692.4219 L3073.7188,695.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="174" x="3091.25" y="693.6543">QGaussLegendreTensorized</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3022" x2="3302" y1="705.5" y2="705.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3022" x2="3302" y1="713.5" y2="713.5"/><ellipse cx="3032" cy="724.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="3041" y="727.7104">QGaussLegendreTensorized(unsigned order)</text><ellipse cx="3032" cy="737.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="3041" y="740.5151">~QGaussLegendreTensorized()</text><ellipse cx="3032" cy="750.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3041" y="753.3198">SetConnectivity() : void</text><ellipse cx="3032" cy="762.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3041" y="766.1245">SetName() : void</text><ellipse cx="3032" cy="775.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="3041" y="778.9292">SetNq() : void</text><ellipse cx="3032" cy="788.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="3041" y="791.7339">SetPointsAndWeights() : void</text><!--MD5=[ac9a63b98acee02cdcc7ea962cb05a73]
class QLDFESA--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="124.8281" id="QLDFESA" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="3198" y="993"/><ellipse cx="3252.25" cy="1009" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3255.2188,1014.6406 Q3254.6406,1014.9375 3254,1015.0781 Q3253.3594,1015.2344 3252.6563,1015.2344 Q3250.1563,1015.2344 3248.8281,1013.5938 Q3247.5156,1011.9375 3247.5156,1008.8125 Q3247.5156,1005.6875 3248.8281,1004.0313 Q3250.1563,1002.375 3252.6563,1002.375 Q3253.3594,1002.375 3254,1002.5313 Q3254.6563,1002.6875 3255.2188,1002.9844 L3255.2188,1005.7031 Q3254.5938,1005.125 3254,1004.8594 Q3253.4063,1004.5781 3252.7813,1004.5781 Q3251.4375,1004.5781 3250.75,1005.6563 Q3250.0625,1006.7188 3250.0625,1008.8125 Q3250.0625,1010.9063 3250.75,1011.9844 Q3251.4375,1013.0469 3252.7813,1013.0469 Q3253.4063,1013.0469 3254,1012.7813 Q3254.5938,1012.5 3255.2188,1011.9219 L3255.2188,1014.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="3272.75" y="1013.1543">QLDFESA</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3199" x2="3369" y1="1025" y2="1025"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3199" x2="3369" y1="1033" y2="1033"/><ellipse cx="3209" cy="1044" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3218" y="1047.2104">QLDFESA(unsigned order)</text><ellipse cx="3209" cy="1056.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="3218" y="1060.0151">~QLDFESA()</text><ellipse cx="3209" cy="1069.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="3218" y="1072.8198">SetAvailOrders() : void</text><ellipse cx="3209" cy="1082.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3218" y="1085.6245">SetConnectivity() : void</text><ellipse cx="3209" cy="1095.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3218" y="1098.4292">SetDataInfo() : void</text><ellipse cx="3209" cy="1108.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3218" y="1111.2339">SetName() : void</text><!--MD5=[dc3edd32582cc9c24358ef5ad5d35bc3]
class QLebedev--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="124.8281" id="QLebedev" style="stroke: #A80036; stroke-width: 1.5;" width="177" x="3405.5" y="993"/><ellipse cx="3459.25" cy="1009" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3462.2188,1014.6406 Q3461.6406,1014.9375 3461,1015.0781 Q3460.3594,1015.2344 3459.6563,1015.2344 Q3457.1563,1015.2344 3455.8281,1013.5938 Q3454.5156,1011.9375 3454.5156,1008.8125 Q3454.5156,1005.6875 3455.8281,1004.0313 Q3457.1563,1002.375 3459.6563,1002.375 Q3460.3594,1002.375 3461,1002.5313 Q3461.6563,1002.6875 3462.2188,1002.9844 L3462.2188,1005.7031 Q3461.5938,1005.125 3461,1004.8594 Q3460.4063,1004.5781 3459.7813,1004.5781 Q3458.4375,1004.5781 3457.75,1005.6563 Q3457.0625,1006.7188 3457.0625,1008.8125 Q3457.0625,1010.9063 3457.75,1011.9844 Q3458.4375,1013.0469 3459.7813,1013.0469 Q3460.4063,1013.0469 3461,1012.7813 Q3461.5938,1012.5 3462.2188,1011.9219 L3462.2188,1014.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="3479.75" y="1013.1543">QLebedev</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3406.5" x2="3581.5" y1="1025" y2="1025"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3406.5" x2="3581.5" y1="1033" y2="1033"/><ellipse cx="3416.5" cy="1044" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3425.5" y="1047.2104">QLebedev(unsigned order)</text><ellipse cx="3416.5" cy="1056.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="3425.5" y="1060.0151">~QLebedev()</text><ellipse cx="3416.5" cy="1069.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="3425.5" y="1072.8198">SetAvailOrders() : void</text><ellipse cx="3416.5" cy="1082.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3425.5" y="1085.6245">SetConnectivity() : void</text><ellipse cx="3416.5" cy="1095.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3425.5" y="1098.4292">SetDataInfo() : void</text><ellipse cx="3416.5" cy="1108.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3425.5" y="1111.2339">SetName() : void</text><!--MD5=[32917a1120b013c593a0f5a6a5c75a15]
class QLevelSymmetric--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="124.8281" id="QLevelSymmetric" style="stroke: #A80036; stroke-width: 1.5;" width="220" x="3618" y="993"/><ellipse cx="3671.75" cy="1009" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3674.7188,1014.6406 Q3674.1406,1014.9375 3673.5,1015.0781 Q3672.8594,1015.2344 3672.1563,1015.2344 Q3669.6563,1015.2344 3668.3281,1013.5938 Q3667.0156,1011.9375 3667.0156,1008.8125 Q3667.0156,1005.6875 3668.3281,1004.0313 Q3669.6563,1002.375 3672.1563,1002.375 Q3672.8594,1002.375 3673.5,1002.5313 Q3674.1563,1002.6875 3674.7188,1002.9844 L3674.7188,1005.7031 Q3674.0938,1005.125 3673.5,1004.8594 Q3672.9063,1004.5781 3672.2813,1004.5781 Q3670.9375,1004.5781 3670.25,1005.6563 Q3669.5625,1006.7188 3669.5625,1008.8125 Q3669.5625,1010.9063 3670.25,1011.9844 Q3670.9375,1013.0469 3672.2813,1013.0469 Q3672.9063,1013.0469 3673.5,1012.7813 Q3674.0938,1012.5 3674.7188,1011.9219 L3674.7188,1014.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="3692.25" y="1013.1543">QLevelSymmetric</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3619" x2="3837" y1="1025" y2="1025"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3619" x2="3837" y1="1033" y2="1033"/><ellipse cx="3629" cy="1044" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="3638" y="1047.2104">QLevelSymmetric(unsigned order)</text><ellipse cx="3629" cy="1056.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3638" y="1060.0151">~QLevelSymmetric()</text><ellipse cx="3629" cy="1069.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="3638" y="1072.8198">SetAvailOrders() : void</text><ellipse cx="3629" cy="1082.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3638" y="1085.6245">SetConnectivity() : void</text><ellipse cx="3629" cy="1095.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3638" y="1098.4292">SetDataInfo() : void</text><ellipse cx="3629" cy="1108.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3638" y="1111.2339">SetName() : void</text><!--MD5=[da3a73dd60c7a6cd3bfc963f796656da]
class QLookupQuadrature--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="201.6563" id="QLookupQuadrature" style="stroke: #A80036; stroke-width: 1.5;" width="311" x="3338.5" y="635"/><ellipse cx="3427.25" cy="651" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3427.3594,646.3438 L3426.2031,651.4219 L3428.5313,651.4219 L3427.3594,646.3438 Z M3425.875,644.1094 L3428.8594,644.1094 L3432.2188,656.5 L3429.7656,656.5 L3429,653.4375 L3425.7188,653.4375 L3424.9688,656.5 L3422.5313,656.5 L3425.875,644.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="125" x="3447.75" y="655.1543">QLookupQuadrature</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3339.5" x2="3648.5" y1="667" y2="667"/><polygon fill="none" points="3349.5,673,3353.5,677,3349.5,681,3345.5,677" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="3358.5" y="681.2104">_dataFileSuffix : std::string</text><polygon fill="none" points="3349.5,685.8047,3353.5,689.8047,3349.5,693.8047,3345.5,689.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="3358.5" y="694.0151">_dataFiles : std::string</text><polygon fill="none" points="3349.5,698.6094,3353.5,702.6094,3349.5,706.6094,3345.5,702.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="3358.5" y="706.8198">_availableOrders : std::vector&lt;unsigned&gt;</text><polygon fill="none" points="3349.5,711.4141,3353.5,715.4141,3349.5,719.4141,3345.5,715.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="3358.5" y="719.6245">_nqByOrder : std::vector&lt;unsigned&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3339.5" x2="3648.5" y1="726.2188" y2="726.2188"/><ellipse cx="3349.5" cy="737.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="3358.5" y="740.4292">QLookupQuadrature(unsigned order)</text><ellipse cx="3349.5" cy="750.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="3358.5" y="753.2339">~QLookupQuadrature()</text><polygon fill="#FFFF44" points="3349.5,757.8281,3353.5,761.8281,3349.5,765.8281,3345.5,761.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="3358.5" y="766.0386">CheckOrder() : bool</text><ellipse cx="3349.5" cy="775.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="3358.5" y="778.8433">getAvailOrders() : std::vector&lt;unsigned&gt; {query}</text><polygon fill="#FFFF44" points="3349.5,783.4375,3353.5,787.4375,3349.5,791.4375,3345.5,787.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="129" x="3358.5" y="791.6479">SetAvailOrders() : void</text><polygon fill="#FFFF44" points="3349.5,796.2422,3353.5,800.2422,3349.5,804.2422,3345.5,800.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="109" x="3358.5" y="804.4526">SetDataInfo() : void</text><polygon fill="#FFFF44" points="3349.5,809.0469,3353.5,813.0469,3349.5,817.0469,3345.5,813.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="3358.5" y="817.2573">SetNq() : void</text><polygon fill="#FFFF44" points="3349.5,821.8516,3353.5,825.8516,3349.5,829.8516,3345.5,825.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="3358.5" y="830.062">SetPointsAndWeights() : void</text><!--MD5=[7cd9cfd355b807b7d67babb7c40cfbb5]
class QMonteCarlo--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="124.8281" id="QMonteCarlo" style="stroke: #A80036; stroke-width: 1.5;" width="194" x="3685" y="673.5"/><ellipse cx="3737.75" cy="689.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3740.7188,695.1406 Q3740.1406,695.4375 3739.5,695.5781 Q3738.8594,695.7344 3738.1563,695.7344 Q3735.6563,695.7344 3734.3281,694.0938 Q3733.0156,692.4375 3733.0156,689.3125 Q3733.0156,686.1875 3734.3281,684.5313 Q3735.6563,682.875 3738.1563,682.875 Q3738.8594,682.875 3739.5,683.0313 Q3740.1563,683.1875 3740.7188,683.4844 L3740.7188,686.2031 Q3740.0938,685.625 3739.5,685.3594 Q3738.9063,685.0781 3738.2813,685.0781 Q3736.9375,685.0781 3736.25,686.1563 Q3735.5625,687.2188 3735.5625,689.3125 Q3735.5625,691.4063 3736.25,692.4844 Q3736.9375,693.5469 3738.2813,693.5469 Q3738.9063,693.5469 3739.5,693.2813 Q3740.0938,693 3740.7188,692.4219 L3740.7188,695.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="3758.25" y="693.6543">QMonteCarlo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3686" x2="3878" y1="705.5" y2="705.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3686" x2="3878" y1="713.5" y2="713.5"/><ellipse cx="3696" cy="724.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="3705" y="727.7104">QMonteCarlo(unsigned order)</text><ellipse cx="3696" cy="737.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3705" y="740.5151">~QMonteCarlo()</text><ellipse cx="3696" cy="750.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3705" y="753.3198">SetConnectivity() : void</text><ellipse cx="3696" cy="762.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3705" y="766.1245">SetName() : void</text><ellipse cx="3696" cy="775.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="3705" y="778.9292">SetNq() : void</text><ellipse cx="3696" cy="788.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="3705" y="791.7339">SetPointsAndWeights() : void</text><!--MD5=[2df2a4f4ecfceb71851799cbde3860f2]
class Quadrature--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="368.1172" id="Quadrature" style="stroke: #A80036; stroke-width: 1.5;" width="420" x="3118" y="59.5"/><ellipse cx="3288.25" cy="75.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3288.3594,70.8438 L3287.2031,75.9219 L3289.5313,75.9219 L3288.3594,70.8438 Z M3286.875,68.6094 L3289.8594,68.6094 L3293.2188,81 L3290.7656,81 L3290,77.9375 L3286.7188,77.9375 L3285.9688,81 L3283.5313,81 L3286.875,68.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="3308.75" y="79.6543">Quadrature</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3119" x2="3537" y1="91.5" y2="91.5"/><polygon fill="none" points="3129,97.5,3133,101.5,3129,105.5,3125,101.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3138" y="105.7104">_weights : Vector</text><polygon fill="none" points="3129,110.3047,3133,114.3047,3129,118.3047,3125,114.3047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="3138" y="118.5151">_points : VectorVector</text><polygon fill="none" points="3129,123.1094,3133,127.1094,3129,131.1094,3125,127.1094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="3138" y="131.3198">_connectivity : VectorVectorU</text><polygon fill="none" points="3129,135.9141,3133,139.9141,3129,143.9141,3125,139.9141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3138" y="144.1245">_name : std::string</text><polygon fill="none" points="3129,148.7188,3133,152.7188,3129,156.7188,3125,152.7188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="3138" y="156.9292">_nq : unsigned</text><polygon fill="none" points="3129,161.5234,3133,165.5234,3129,169.5234,3125,165.5234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="3138" y="169.7339">_order : unsigned</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3119" x2="3537" y1="176.3281" y2="176.3281"/><ellipse cx="3129" cy="187.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3138" y="190.5386">Quadrature(unsigned order)</text><ellipse cx="3129" cy="200.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="3138" y="203.3433">~Quadrature()</text><ellipse cx="3129" cy="212.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="394" x="3138" y="216.1479">CreateQuadrature(QUAD_NAME name, unsigned order) : Quadrature*</text><ellipse cx="3129" cy="225.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="3138" y="228.9526">GetWeights() : Vector {query}</text><ellipse cx="3129" cy="238.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3138" y="241.7573">GetPoints() : VectorVector {query}</text><ellipse cx="3129" cy="251.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="3138" y="254.562">GetConnectivity() : VectorVectorU {query}</text><ellipse cx="3129" cy="264.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="3138" y="267.3667">Integrate(double(f)(doublex0,doublex1,doublex2)) : double</text><ellipse cx="3129" cy="276.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="3138" y="280.1714">SumUpWeights() : double</text><ellipse cx="3129" cy="289.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="3138" y="292.9761">GetName() : std::string {query}</text><ellipse cx="3129" cy="302.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="3138" y="305.7808">GetNq() : unsigned {query}</text><ellipse cx="3129" cy="315.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="3138" y="318.5854">GetOrder() : unsigned {query}</text><ellipse cx="3129" cy="328.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3138" y="331.3901">PrintPoints() : void</text><ellipse cx="3129" cy="340.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="3138" y="344.1948">PrintPointsAndWeights() : void</text><ellipse cx="3129" cy="353.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="3138" y="356.9995">PrintWeights() : void</text><polygon fill="#FFFF44" points="3129,361.5938,3133,365.5938,3129,369.5938,3125,365.5938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="132" x="3138" y="369.8042">SetConnectivity() : void</text><polygon fill="#FFFF44" points="3129,374.3984,3133,378.3984,3129,382.3984,3125,378.3984" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="95" x="3138" y="382.6089">SetName() : void</text><polygon fill="#FFFF44" points="3129,387.2031,3133,391.2031,3129,395.2031,3125,391.2031" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="3138" y="395.4136">SetNq() : void</text><polygon fill="#FFFF44" points="3129,400.0078,3133,404.0078,3129,408.0078,3125,404.0078" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="3138" y="408.2183">SetOrder(unsigned order) : void</text><polygon fill="#FFFF44" points="3129,412.8125,3133,416.8125,3129,420.8125,3125,416.8125" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="163" x="3138" y="421.0229">SetPointsAndWeights() : void</text><!--MD5=[168618c52cf8b01b81c881510cd68189]
class Reconstructor--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="73.6094" id="Reconstructor" style="stroke: #A80036; stroke-width: 1.5;" width="539" x="1739.5" y="206.5"/><ellipse cx="1960.25" cy="222.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1963.2188,228.1406 Q1962.6406,228.4375 1962,228.5781 Q1961.3594,228.7344 1960.6563,228.7344 Q1958.1563,228.7344 1956.8281,227.0938 Q1955.5156,225.4375 1955.5156,222.3125 Q1955.5156,219.1875 1956.8281,217.5313 Q1958.1563,215.875 1960.6563,215.875 Q1961.3594,215.875 1962,216.0313 Q1962.6563,216.1875 1963.2188,216.4844 L1963.2188,219.2031 Q1962.5938,218.625 1962,218.3594 Q1961.4063,218.0781 1960.7813,218.0781 Q1959.4375,218.0781 1958.75,219.1563 Q1958.0625,220.2188 1958.0625,222.3125 Q1958.0625,224.4063 1958.75,225.4844 Q1959.4375,226.5469 1960.7813,226.5469 Q1961.4063,226.5469 1962,226.2813 Q1962.5938,226 1963.2188,225.4219 L1963.2188,228.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="1980.75" y="226.6543">Reconstructor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1740.5" x2="2277.5" y1="238.5" y2="238.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1740.5" x2="2277.5" y1="246.5" y2="246.5"/><ellipse cx="1750.5" cy="257.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1759.5" y="260.7104">Reconstructor(Settings* settings)</text><ellipse cx="1750.5" cy="270.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="513" x="1759.5" y="273.5151">Slope(const Vector&amp; Omega, double psiL, double psiR, const Vector&amp; n) : double {query}</text><!--MD5=[0b503fe5c24e14c3c70681465d2d6a28]
class SNSolver--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="86.4141" id="SNSolver" style="stroke: #A80036; stroke-width: 1.5;" width="189" x="2573.5" y="693"/><ellipse cx="2636.25" cy="709" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2639.2188,714.6406 Q2638.6406,714.9375 2638,715.0781 Q2637.3594,715.2344 2636.6563,715.2344 Q2634.1563,715.2344 2632.8281,713.5938 Q2631.5156,711.9375 2631.5156,708.8125 Q2631.5156,705.6875 2632.8281,704.0313 Q2634.1563,702.375 2636.6563,702.375 Q2637.3594,702.375 2638,702.5313 Q2638.6563,702.6875 2639.2188,702.9844 L2639.2188,705.7031 Q2638.5938,705.125 2638,704.8594 Q2637.4063,704.5781 2636.7813,704.5781 Q2635.4375,704.5781 2634.75,705.6563 Q2634.0625,706.7188 2634.0625,708.8125 Q2634.0625,710.9063 2634.75,711.9844 Q2635.4375,713.0469 2636.7813,713.0469 Q2637.4063,713.0469 2638,712.7813 Q2638.5938,712.5 2639.2188,711.9219 L2639.2188,714.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="2656.75" y="713.1543">SNSolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2574.5" x2="2761.5" y1="725" y2="725"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2574.5" x2="2761.5" y1="733" y2="733"/><ellipse cx="2584.5" cy="744" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2593.5" y="747.2104">SNSolver(Settings* settings)</text><ellipse cx="2584.5" cy="756.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="2593.5" y="760.0151">Solve() : void</text><ellipse cx="2584.5" cy="769.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="2593.5" y="772.8198">SolveMPI() : void</text><!--MD5=[fb0932da17f9982e4848347a102654e2]
class Settings--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="393.7266" id="Settings" style="stroke: #A80036; stroke-width: 1.5;" width="420" x="263" y="539"/><ellipse cx="442.75" cy="555" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M445.7188,560.6406 Q445.1406,560.9375 444.5,561.0781 Q443.8594,561.2344 443.1563,561.2344 Q440.6563,561.2344 439.3281,559.5938 Q438.0156,557.9375 438.0156,554.8125 Q438.0156,551.6875 439.3281,550.0313 Q440.6563,548.375 443.1563,548.375 Q443.8594,548.375 444.5,548.5313 Q445.1563,548.6875 445.7188,548.9844 L445.7188,551.7031 Q445.0938,551.125 444.5,550.8594 Q443.9063,550.5781 443.2813,550.5781 Q441.9375,550.5781 441.25,551.6563 Q440.5625,552.7188 440.5625,554.8125 Q440.5625,556.9063 441.25,557.9844 Q441.9375,559.0469 443.2813,559.0469 Q443.9063,559.0469 444.5,558.7813 Q445.0938,558.5 445.7188,557.9219 L445.7188,560.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52" x="463.25" y="559.1543">Settings</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="264" x2="682" y1="571" y2="571"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="579"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="283" y="585.2104">_quadName : QUAD_NAME</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="591.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="283" y="598.0151">_CFL : double</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="604.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="283" y="610.8198">_tEnd : double</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="617.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="283" y="623.6245">_comm_rank : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="630.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="283" y="636.4292">_comm_size : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="643.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="283" y="649.2339">_inputDir : std::filesystem::path</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="655.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="283" y="662.0386">_inputFile : std::filesystem::path</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="668.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="283" y="674.8433">_logDir : std::filesystem::path</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="681.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="283" y="687.6479">_meshFile : std::filesystem::path</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="694.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="283" y="700.4526">_outputDir : std::filesystem::path</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="707.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="283" y="713.2573">_outputFile : std::filesystem::path</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="719.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="283" y="726.062">_boundaries : std::vector&lt;std::pair&lt;std::string, BOUNDARY_TYPE&gt; &gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="732.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="283" y="738.8667">_meshDimension : unsigned</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="271" y="745.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="283" y="751.6714">_quadOrder : unsigned</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="264" x2="682" y1="758.2656" y2="758.2656"/><ellipse cx="274" cy="769.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="283" y="772.4761">Settings()</text><ellipse cx="274" cy="782.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="283" y="785.2808">GetBoundaryType(std::string name) : BOUNDARY_TYPE {query}</text><ellipse cx="274" cy="794.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="283" y="798.0854">GetQuadName() : QUAD_NAME {query}</text><ellipse cx="274" cy="807.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="283" y="810.8901">ReadInputFile(std::string fileName) : Settings*</text><ellipse cx="274" cy="820.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="283" y="823.6948">GetCFL() : double {query}</text><ellipse cx="274" cy="833.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="283" y="836.4995">GetTEnd() : double {query}</text><ellipse cx="274" cy="846.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="283" y="849.3042">GetInputDir() : std::string {query}</text><ellipse cx="274" cy="858.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="283" y="862.1089">GetInputFile() : std::string {query}</text><ellipse cx="274" cy="871.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="283" y="874.9136">GetLogDir() : std::string {query}</text><ellipse cx="274" cy="884.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="283" y="887.7183">GetMeshFile() : std::string {query}</text><ellipse cx="274" cy="897.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="283" y="900.5229">GetOutputDir() : std::string {query}</text><ellipse cx="274" cy="910.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="283" y="913.3276">GetOutputFile() : std::string {query}</text><ellipse cx="274" cy="922.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="283" y="926.1323">GetQuadOrder() : unsigned {query}</text><!--MD5=[7e0cc054e68485d8dbab588155cf841a]
class Solver--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="355.3125" id="Solver" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="2313.5" y="66"/><ellipse cx="2447.75" cy="82" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2447.8594,77.3438 L2446.7031,82.4219 L2449.0313,82.4219 L2447.8594,77.3438 Z M2446.375,75.1094 L2449.3594,75.1094 L2452.7188,87.5 L2450.2656,87.5 L2449.5,84.4375 L2446.2188,84.4375 L2445.4688,87.5 L2443.0313,87.5 L2446.375,75.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="38" x="2468.25" y="86.1543">Solver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2314.5" x2="2627.5" y1="98" y2="98"/><polygon fill="none" points="2324.5,104,2328.5,108,2324.5,112,2320.5,108" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2333.5" y="112.2104">_g : NumericalFlux*</text><polygon fill="none" points="2324.5,116.8047,2328.5,120.8047,2324.5,124.8047,2320.5,120.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="2333.5" y="125.0151">_weights : Vector</text><polygon fill="none" points="2324.5,129.6094,2328.5,133.6094,2324.5,137.6094,2320.5,133.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="2333.5" y="137.8198">_psi : VectorVector</text><polygon fill="none" points="2324.5,142.4141,2328.5,146.4141,2324.5,150.4141,2320.5,146.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="2333.5" y="150.6245">_quadPoints : VectorVector</text><polygon fill="none" points="2324.5,155.2188,2328.5,159.2188,2324.5,163.2188,2320.5,159.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2333.5" y="163.4292">_NCells : const unsigned</text><polygon fill="none" points="2324.5,168.0234,2328.5,172.0234,2324.5,176.0234,2320.5,172.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="2333.5" y="176.2339">_dt : double</text><polygon fill="none" points="2324.5,180.8281,2328.5,184.8281,2324.5,188.8281,2320.5,184.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="2333.5" y="189.0386">_sigmaSH20 : std::vector&lt;Matrix&gt;</text><polygon fill="none" points="2324.5,193.6328,2328.5,197.6328,2324.5,201.6328,2320.5,197.6328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2333.5" y="201.8433">_density : std::vector&lt;double&gt;</text><polygon fill="none" points="2324.5,206.4375,2328.5,210.4375,2324.5,214.4375,2320.5,210.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2333.5" y="214.6479">_sH20 : std::vector&lt;double&gt;</text><polygon fill="none" points="2324.5,219.2422,2328.5,223.2422,2324.5,227.2422,2320.5,223.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="2333.5" y="227.4526">_sigmaTH20 : std::vector&lt;double&gt;</text><polygon fill="none" points="2324.5,232.0469,2328.5,236.0469,2324.5,240.0469,2320.5,236.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="2333.5" y="240.2573">_normals : std::vector&lt;std::vector&lt;Vector&gt; &gt;</text><polygon fill="none" points="2324.5,244.8516,2328.5,248.8516,2324.5,252.8516,2320.5,248.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="2333.5" y="253.062">_neighbors : std::vector&lt;std::vector&lt;unsigned&gt; &gt;</text><polygon fill="none" points="2324.5,257.6563,2328.5,261.6563,2324.5,265.6563,2320.5,261.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2333.5" y="265.8667">_areas : std::vector&lt;unsigned&gt;</text><polygon fill="none" points="2324.5,270.4609,2328.5,274.4609,2324.5,278.4609,2320.5,274.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="2333.5" y="278.6714">_nTimeSteps : unsigned</text><polygon fill="none" points="2324.5,283.2656,2328.5,287.2656,2324.5,291.2656,2320.5,287.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="2333.5" y="291.4761">_nq : unsigned</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2314.5" x2="2627.5" y1="298.0703" y2="298.0703"/><ellipse cx="2324.5" cy="309.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="2333.5" y="312.2808">Solver(Settings* settings)</text><ellipse cx="2324.5" cy="321.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="203" x="2333.5" y="325.0854">Create(Settings* settings) : Solver*</text><polygon fill="#FFFF44" points="2324.5,329.6797,2328.5,333.6797,2324.5,337.6797,2320.5,333.6797" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="2333.5" y="337.8901">ComputeTimeStep(double cfl) : double {query}</text><polygon fill="#FFFF44" points="2324.5,342.4844,2328.5,346.4844,2324.5,350.4844,2320.5,346.4844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="2333.5" y="350.6948">LoadPatientDensity(std::string fileName) : void</text><polygon fill="#FFFF44" points="2324.5,355.2891,2328.5,359.2891,2324.5,363.2891,2320.5,359.2891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="2333.5" y="363.4995">LoadSigmaS(std::string fileName) : void</text><polygon fill="#FFFF44" points="2324.5,368.0938,2328.5,372.0938,2324.5,376.0938,2320.5,372.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="2333.5" y="376.3042">LoadSigmaT(std::string fileName) : void</text><polygon fill="#FFFF44" points="2324.5,380.8984,2328.5,384.8984,2324.5,388.8984,2320.5,384.8984" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="2333.5" y="389.1089">LoadStoppingPower(std::string fileName) : void</text><polygon fill="#FFFF44" points="2324.5,393.7031,2328.5,397.7031,2324.5,401.7031,2320.5,397.7031" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="2333.5" y="401.9136">SetupIC() : void</text><ellipse cx="2324.5" cy="411.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="75" x="2333.5" y="414.7183">Solve() : void</text><!--MD5=[5c1f2380e58c36d5ea81108e4a7509d5]
class UpwindFlux--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="73.6094" id="UpwindFlux" style="stroke: #A80036; stroke-width: 1.5;" width="529" x="2291.5" y="1018.5"/><ellipse cx="2517.25" cy="1034.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2520.2188,1040.1406 Q2519.6406,1040.4375 2519,1040.5781 Q2518.3594,1040.7344 2517.6563,1040.7344 Q2515.1563,1040.7344 2513.8281,1039.0938 Q2512.5156,1037.4375 2512.5156,1034.3125 Q2512.5156,1031.1875 2513.8281,1029.5313 Q2515.1563,1027.875 2517.6563,1027.875 Q2518.3594,1027.875 2519,1028.0313 Q2519.6563,1028.1875 2520.2188,1028.4844 L2520.2188,1031.2031 Q2519.5938,1030.625 2519,1030.3594 Q2518.4063,1030.0781 2517.7813,1030.0781 Q2516.4375,1030.0781 2515.75,1031.1563 Q2515.0625,1032.2188 2515.0625,1034.3125 Q2515.0625,1036.4063 2515.75,1037.4844 Q2516.4375,1038.5469 2517.7813,1038.5469 Q2518.4063,1038.5469 2519,1038.2813 Q2519.5938,1038 2520.2188,1037.4219 L2520.2188,1040.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="69" x="2537.75" y="1038.6543">UpwindFlux</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2292.5" x2="2819.5" y1="1050.5" y2="1050.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2292.5" x2="2819.5" y1="1058.5" y2="1058.5"/><ellipse cx="2302.5" cy="1069.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="2311.5" y="1072.7104">UpwindFlux(Settings* settings)</text><ellipse cx="2302.5" cy="1082.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="2311.5" y="1085.5151">Flux(const Vector&amp; Omega, double psiL, double psiR, const Vector&amp; n) : double {query}</text><!--MD5=[2f6d06e17746718185fc96242bb8b19f]
class BOUNDARY_TYPE--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="73.6094" id="BOUNDARY_TYPE" style="stroke: #A80036; stroke-width: 1.5;" width="135" x="718.5" y="699"/><ellipse cx="733.5" cy="715" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M737.6094,721 L729.8906,721 L729.8906,708.6094 L737.6094,708.6094 L737.6094,710.7656 L732.3438,710.7656 L732.3438,713.4375 L737.1094,713.4375 L737.1094,715.5938 L732.3438,715.5938 L732.3438,718.8438 L737.6094,718.8438 L737.6094,721 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="747.5" y="719.1543">BOUNDARY_TYPE</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="719.5" x2="852.5" y1="731" y2="731"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="724.5" y="745.2104">DIRICHLET</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="724.5" y="758.0151">INVALID</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="719.5" x2="852.5" y1="764.6094" y2="764.6094"/><!--MD5=[30a9f32f1054ef51fd0c6378da396cd5]
class QUAD_NAME--><rect fill="#FEFECE" filter="url(#f1ih5raffj7i4o)" height="112.0234" id="QUAD_NAME" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="889" y="680"/><ellipse cx="947.75" cy="696" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M951.8594,702 L944.1406,702 L944.1406,689.6094 L951.8594,689.6094 L951.8594,691.7656 L946.5938,691.7656 L946.5938,694.4375 L951.3594,694.4375 L951.3594,696.5938 L946.5938,696.5938 L946.5938,699.8438 L951.8594,699.8438 L951.8594,702 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="968.25" y="700.1543">QUAD_NAME</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="890" x2="1090" y1="712" y2="712"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="895" y="726.2104">QUAD_GaussLegendreTensorized</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="895" y="739.0151">QUAD_LDFESA</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="895" y="751.8198">QUAD_Lebedev</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="895" y="764.6245">QUAD_LevelSymmetric</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="895" y="777.4292">QUAD_MonteCarlo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="890" x2="1090" y1="784.0234" y2="784.0234"/><!--MD5=[51a439b0c181719f1a10a280166c3aa3]
reverse link NumericalFlux to LaxFriedrichsFlux--><path d="M2223.11,794.3 C2167.32,857.11 2079.13,956.4 2029.38,1012.42 " fill="none" id="NumericalFlux&lt;-LaxFriedrichsFlux" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2218.04,789.47,2236.55,779.16,2228.5,798.76,2218.04,789.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c8ea5724d5b402e5c8d4ca42df5ffb9]
reverse link NumericalFlux to UpwindFlux--><path d="M2324.98,794.39 C2382.7,859.39 2475.03,963.34 2523.65,1018.07 " fill="none" id="NumericalFlux&lt;-UpwindFlux" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2319.5,798.76,2311.45,779.16,2329.96,789.47,2319.5,798.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f29213e6409b0dbeddb5359456126346]
reverse link QLookupQuadrature to QLDFESA--><path d="M3416.76,853.78 C3385.58,900.91 3350.89,953.37 3324.79,992.83 " fill="none" id="QLookupQuadrature&lt;-QLDFESA" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3410.97,849.84,3427.84,837.02,3422.65,857.57,3410.97,849.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e6462bb42d962df88f12397729eebeae]
reverse link QLookupQuadrature to QLebedev--><path d="M3494,857.19 C3494,903.43 3494,954.32 3494,992.83 " fill="none" id="QLookupQuadrature&lt;-QLebedev" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3487,857.02,3494,837.02,3501,857.02,3487,857.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5c097905ed270dc8517366d8f0d54a26]
reverse link QLookupQuadrature to QLevelSymmetric--><path d="M3579.61,853.16 C3614.47,900.45 3653.34,953.2 3682.55,992.83 " fill="none" id="QLookupQuadrature&lt;-QLevelSymmetric" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3573.95,857.28,3567.72,837.02,3585.22,848.97,3573.95,857.28" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2e323bb571275a43449400d33ee12971]
reverse link Quadrature to QDummy--><path d="M3103.2,430.67 C3067.7,464.88 3032.9,501.64 3003,539 C2969.89,580.37 2940.73,632.86 2920.62,673.1 " fill="none" id="Quadrature&lt;-QDummy" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3098.59,425.4,3117.9,416.68,3108.24,435.54,3098.59,425.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b1ac4bfd2417b97c1edb23db485627bb]
reverse link Quadrature to QGaussLegendreTensorized--><path d="M3259.46,447.01 C3231.9,528.47 3202.14,616.41 3182.85,673.39 " fill="none" id="Quadrature&lt;-QGaussLegendreTensorized" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3252.91,444.54,3265.95,427.84,3266.17,449.03,3252.91,444.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2544b4051fb705548829870cf79243bc]
reverse link Quadrature to QLookupQuadrature--><path d="M3396.49,446.88 C3418.41,511.65 3441.73,580.54 3460.06,634.71 " fill="none" id="Quadrature&lt;-QLookupQuadrature" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3389.83,449.03,3390.05,427.84,3403.09,444.54,3389.83,449.03" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d04a33bd9bd85443e112393ce1dbb80f]
reverse link Quadrature to QMonteCarlo--><path d="M3553.18,421.75 C3593.35,458.34 3633.14,498.23 3667,539 C3701.28,580.28 3731.59,633.01 3752.48,673.38 " fill="none" id="Quadrature&lt;-QMonteCarlo" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3548.26,426.73,3538.08,408.15,3557.62,416.33,3548.26,426.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2865e895988d2514b2f754bd9f7b9c94]
reverse link Solver to SNSolver--><path d="M2549.54,440.05 C2587,533.32 2628.48,636.61 2651.07,692.84 " fill="none" id="Solver&lt;-SNSolver" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2542.94,442.4,2541.98,421.24,2555.93,437.19,2542.94,442.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[141236dffacf4bdc2074205320151f00]
reverse link Solver to NumericalFlux--><path d="M2395.15,433.35 C2357,528.34 2314.06,635.27 2290.93,692.84 " fill="none" id="Solver&lt;-NumericalFlux" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2400.02,421.24,2394.0719,425.3168,2395.5474,432.3753,2401.4955,428.2985,2400.02,421.24" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e040875668f43cdb331dd99685a4ec50]
link Mesh to Physics--><!--MD5=[1159a66b01f8fd9e4d76ed14ef75c382]
link Physics to Reconstructor--><!--MD5=[a883e15a11194fd9f8ae2dadb3f6e415]
link Mesh to Settings--><!--MD5=[04faaa0b7f3a3ad9efb9d95b25986404]
link Settings to BOUNDARY_TYPE--><!--MD5=[adf1f0a28a2fabe3541bd57af4eec3cb]
link BOUNDARY_TYPE to QUAD_NAME--><!--MD5=[f382a3c5f61df90d3deabe99664a8999]
@startuml






class LaxFriedrichsFlux {
	+LaxFriedrichsFlux(Settings* settings)
	+Flux(const Vector& Omega, double psiL, double psiR, const Vector& n) : double {query}
	-_dt : double
}


class Mesh {
	+Mesh()
	+Mesh(std::vector<Vector> nodes, std::vector<std::vector<unsigned> > cells, std::vector<std::pair<BOUNDARY_TYPE, std::vector<unsigned> > > boundaries)
	+~Mesh()
	#ComputeOutwardFacingNormal(const Vector& nodeA, const Vector& nodeB, const Vector& cellCenter) : Vector
	#_nodeNeighbors : blaze::CompressedMatrix<bool>
	#_dim : const unsigned
	#_ghostCellID : const unsigned
	#_numBoundaries : const unsigned
	#_numCells : const unsigned
	#_numNodes : const unsigned
	#_numNodesPerCell : const unsigned
	#_log : std::shared_ptr<spdlog::logger>
	#_nodes : std::vector<Vector>
	+GetNodes() : std::vector<Vector>& {query}
	#_isBoundaryCell : std::vector<bool>
	#_cellAreas : std::vector<double>
	+GetCellAreas() : std::vector<double>& {query}
	#_boundaries : std::vector<std::pair<BOUNDARY_TYPE, std::vector<unsigned> > >
	#_cellNormals : std::vector<std::vector<Vector> >
	#_cellNeighbors : std::vector<std::vector<unsigned> >
	#_cells : std::vector<std::vector<unsigned> >
	+GetCells() : std::vector<std::vector<unsigned> >& {query}
	#_colors : std::vector<unsigned>
	+GetPartitionIDs() : std::vector<unsigned>& {query}
	+GetDim() : unsigned {query}
	+GetNumCells() : unsigned {query}
	+GetNumNodes() : unsigned {query}
	+GetNumNodesPerCell() : unsigned {query}
	#ComputeCellAreas() : void
	#ComputeConnectivity() : void
	#ComputeNormals() : void
	#ComputePartitioning() : void
	+ComputeSlopes(unsigned nq, VectorVector& psiDerX, VectorVector& psiDerY, const VectorVector& psi) : void {query}
}


abstract class NumericalFlux {
	+NumericalFlux(Settings* settings)
	+{static} Create(Settings* settings) : NumericalFlux*
	+{abstract} Flux(const Vector& Omega, double psiL, double psiR, const Vector& n) : double {query}
}


class Physics {
	+Physics(Settings* settings)
	-_totalxsH2O : Matrix
	-_xsH2O : Matrix
	+{static} Create(Settings* settings) : Physics*
	+GetScatteringXS(std::vector<double> energies, std::vector<double> density, std::vector<double> Omegas) : VectorVector
	+GetStoppingPower(std::vector<double> energies, std::vector<double> sH2O) : VectorVector
	+GetTotalXS(std::vector<double> energies, std::vector<double> density) : VectorVector
	-LoadXSH2O(std::string fileName1, std::string fileName2) : void
}


class QDummy {
	+QDummy(unsigned order)
	+~QDummy()
	+SetConnectivity() : void
	+SetName() : void
	+SetNq() : void
	+SetPointsAndWeights() : void
}


class QGaussLegendreTensorized {
	+QGaussLegendreTensorized(unsigned order)
	+~QGaussLegendreTensorized()
	+SetConnectivity() : void
	+SetName() : void
	+SetNq() : void
	+SetPointsAndWeights() : void
}


class QLDFESA {
	+QLDFESA(unsigned order)
	+~QLDFESA()
	+SetAvailOrders() : void
	+SetConnectivity() : void
	+SetDataInfo() : void
	+SetName() : void
}


class QLebedev {
	+QLebedev(unsigned order)
	+~QLebedev()
	+SetAvailOrders() : void
	+SetConnectivity() : void
	+SetDataInfo() : void
	+SetName() : void
}


class QLevelSymmetric {
	+QLevelSymmetric(unsigned order)
	+~QLevelSymmetric()
	+SetAvailOrders() : void
	+SetConnectivity() : void
	+SetDataInfo() : void
	+SetName() : void
}


abstract class QLookupQuadrature {
	+QLookupQuadrature(unsigned order)
	+~QLookupQuadrature()
	#CheckOrder() : bool
	#_dataFileSuffix : std::string
	#_dataFiles : std::string
	#_availableOrders : std::vector<unsigned>
	#_nqByOrder : std::vector<unsigned>
	+getAvailOrders() : std::vector<unsigned> {query}
	#{abstract} SetAvailOrders() : void
	#{abstract} SetDataInfo() : void
	#SetNq() : void
	#SetPointsAndWeights() : void
}


class QMonteCarlo {
	+QMonteCarlo(unsigned order)
	+~QMonteCarlo()
	+SetConnectivity() : void
	+SetName() : void
	+SetNq() : void
	+SetPointsAndWeights() : void
}


abstract class Quadrature {
	+Quadrature(unsigned order)
	+~Quadrature()
	+{static} CreateQuadrature(QUAD_NAME name, unsigned order) : Quadrature*
	+GetWeights() : Vector {query}
	#_weights : Vector
	+GetPoints() : VectorVector {query}
	#_points : VectorVector
	+GetConnectivity() : VectorVectorU {query}
	#_connectivity : VectorVectorU
	+Integrate(double(f)(doublex0,doublex1,doublex2)) : double
	+SumUpWeights() : double
	+GetName() : std::string {query}
	#_name : std::string
	+GetNq() : unsigned {query}
	+GetOrder() : unsigned {query}
	#_nq : unsigned
	#_order : unsigned
	+PrintPoints() : void
	+PrintPointsAndWeights() : void
	+PrintWeights() : void
	#{abstract} SetConnectivity() : void
	#{abstract} SetName() : void
	#{abstract} SetNq() : void
	#SetOrder(unsigned order) : void
	#{abstract} SetPointsAndWeights() : void
}


class Reconstructor {
	+Reconstructor(Settings* settings)
	+Slope(const Vector& Omega, double psiL, double psiR, const Vector& n) : double {query}
}


class SNSolver {
	+SNSolver(Settings* settings)
	+Solve() : void
	+SolveMPI() : void
}


class Settings {
	+Settings()
	+GetBoundaryType(std::string name) : BOUNDARY_TYPE {query}
	+GetQuadName() : QUAD_NAME {query}
	-_quadName : QUAD_NAME
	+ReadInputFile(std::string fileName) : Settings*
	+GetCFL() : double {query}
	+GetTEnd() : double {query}
	-_CFL : double
	-_tEnd : double
	-_comm_rank : int
	-_comm_size : int
	-_inputDir : std::filesystem::path
	-_inputFile : std::filesystem::path
	-_logDir : std::filesystem::path
	-_meshFile : std::filesystem::path
	-_outputDir : std::filesystem::path
	-_outputFile : std::filesystem::path
	+GetInputDir() : std::string {query}
	+GetInputFile() : std::string {query}
	+GetLogDir() : std::string {query}
	+GetMeshFile() : std::string {query}
	+GetOutputDir() : std::string {query}
	+GetOutputFile() : std::string {query}
	-_boundaries : std::vector<std::pair<std::string, BOUNDARY_TYPE> >
	+GetQuadOrder() : unsigned {query}
	-_meshDimension : unsigned
	-_quadOrder : unsigned
}


abstract class Solver {
	+Solver(Settings* settings)
	#_g : NumericalFlux*
	+{static} Create(Settings* settings) : Solver*
	#_weights : Vector
	#_psi : VectorVector
	#_quadPoints : VectorVector
	#_NCells : const unsigned
	#ComputeTimeStep(double cfl) : double {query}
	#_dt : double
	#_sigmaSH20 : std::vector<Matrix>
	#_density : std::vector<double>
	#_sH20 : std::vector<double>
	#_sigmaTH20 : std::vector<double>
	#_normals : std::vector<std::vector<Vector> >
	#_neighbors : std::vector<std::vector<unsigned> >
	#_areas : std::vector<unsigned>
	#_nTimeSteps : unsigned
	#_nq : unsigned
	#LoadPatientDensity(std::string fileName) : void
	#LoadSigmaS(std::string fileName) : void
	#LoadSigmaT(std::string fileName) : void
	#LoadStoppingPower(std::string fileName) : void
	#SetupIC() : void
	+{abstract} Solve() : void
}


class UpwindFlux {
	+UpwindFlux(Settings* settings)
	+Flux(const Vector& Omega, double psiL, double psiR, const Vector& n) : double {query}
}


enum BOUNDARY_TYPE {
	DIRICHLET
	INVALID
}


enum QUAD_NAME {
	QUAD_GaussLegendreTensorized
	QUAD_LDFESA
	QUAD_Lebedev
	QUAD_LevelSymmetric
	QUAD_MonteCarlo
}






NumericalFlux <|- - LaxFriedrichsFlux


NumericalFlux <|- - UpwindFlux


QLookupQuadrature <|- - QLDFESA


QLookupQuadrature <|- - QLebedev


QLookupQuadrature <|- - QLevelSymmetric


Quadrature <|- - QDummy


Quadrature <|- - QGaussLegendreTensorized


Quadrature <|- - QLookupQuadrature


Quadrature <|- - QMonteCarlo


Solver <|- - SNSolver






Solver o- - NumericalFlux





@enduml

PlantUML version 1.2020.05(Thu Mar 19 22:17:32 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 10.0.2+13
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>