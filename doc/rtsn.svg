<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2509px" preserveAspectRatio="none" style="width:9977px;height:2509px;" version="1.1" viewBox="0 0 9977 2509" width="9977px" zoomAndPan="magnify"><defs><filter height="300%" id="fbs4ro5ca5qxc" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[a66ec189e74f4fb17bcf63e6d06e8a3b]
class COptionUShort--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="137.6328" id="COptionUShort" style="stroke: #A80036; stroke-width: 1.5;" width="630" x="6" y="2354"/><ellipse cx="271.25" cy="2370" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M271.3594,2365.3438 L270.2031,2370.4219 L272.5313,2370.4219 L271.3594,2365.3438 Z M269.875,2363.1094 L272.8594,2363.1094 L276.2188,2375.5 L273.7656,2375.5 L273,2372.4375 L269.7188,2372.4375 L268.9688,2375.5 L266.5313,2375.5 L269.875,2363.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="91" x="291.75" y="2374.1543">COptionUShort</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="635" y1="2386" y2="2386"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2394"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="26" y="2400.2104">_name : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2406.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="26" y="2413.0151">_def : unsigned short</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="2419.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="26" y="2425.8198">_field : unsigned short&amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="635" y1="2432.4141" y2="2432.4141"/><ellipse cx="17" cy="2443.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="604" x="26" y="2446.6245">COptionUShort(std::string option_field_name, unsigned short&amp; option_field, unsigned short default_value)</text><ellipse cx="17" cy="2456.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="26" y="2459.4292">~COptionUShort()</text><ellipse cx="17" cy="2469.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="26" y="2472.2339">SetValue(std::vector&lt;std::string&gt; option_value) : std::string</text><ellipse cx="17" cy="2481.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="26" y="2485.0386">SetDefault() : void</text><!--MD5=[fa8fa9829844c679b6e15f80bfb3e27b]
class CSDSNSolver--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="112.0234" id="CSDSNSolver" style="stroke: #A80036; stroke-width: 1.5;" width="227" x="5660.5" y="724"/><ellipse cx="5729.75" cy="740" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5732.7188,745.6406 Q5732.1406,745.9375 5731.5,746.0781 Q5730.8594,746.2344 5730.1563,746.2344 Q5727.6563,746.2344 5726.3281,744.5938 Q5725.0156,742.9375 5725.0156,739.8125 Q5725.0156,736.6875 5726.3281,735.0313 Q5727.6563,733.375 5730.1563,733.375 Q5730.8594,733.375 5731.5,733.5313 Q5732.1563,733.6875 5732.7188,733.9844 L5732.7188,736.7031 Q5732.0938,736.125 5731.5,735.8594 Q5730.9063,735.5781 5730.2813,735.5781 Q5728.9375,735.5781 5728.25,736.6563 Q5727.5625,737.7188 5727.5625,739.8125 Q5727.5625,741.9063 5728.25,742.9844 Q5728.9375,744.0469 5730.2813,744.0469 Q5730.9063,744.0469 5731.5,743.7813 Q5732.0938,743.5 5732.7188,742.9219 L5732.7188,745.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="5750.25" y="744.1543">CSDSNSolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5661.5" x2="5886.5" y1="756" y2="756"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5668.5" y="764"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="5680.5" y="770.2104">_dose : std::vector&lt;double&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5661.5" x2="5886.5" y1="776.8047" y2="776.8047"/><ellipse cx="5671.5" cy="787.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="5680.5" y="791.0151">CSDSNSolver(Config* settings)</text><ellipse cx="5671.5" cy="800.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="5680.5" y="803.8198">Save() : void {query}</text><ellipse cx="5671.5" cy="813.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="5680.5" y="816.6245">Save(int currEnergy) : void {query}</text><ellipse cx="5671.5" cy="826.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="5680.5" y="829.4292">Solve() : void</text><!--MD5=[d1bc18906ee38dcc4f14e2fc9402119a]
class Checkerboard--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="201.6563" id="Checkerboard" style="stroke: #A80036; stroke-width: 1.5;" width="519" x="1794.5" y="1478.5"/><ellipse cx="2005.75" cy="1494.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2008.7188,1500.1406 Q2008.1406,1500.4375 2007.5,1500.5781 Q2006.8594,1500.7344 2006.1563,1500.7344 Q2003.6563,1500.7344 2002.3281,1499.0938 Q2001.0156,1497.4375 2001.0156,1494.3125 Q2001.0156,1491.1875 2002.3281,1489.5313 Q2003.6563,1487.875 2006.1563,1487.875 Q2006.8594,1487.875 2007.5,1488.0313 Q2008.1563,1488.1875 2008.7188,1488.4844 L2008.7188,1491.2031 Q2008.0938,1490.625 2007.5,1490.3594 Q2006.9063,1490.0781 2006.2813,1490.0781 Q2004.9375,1490.0781 2004.25,1491.1563 Q2003.5625,1492.2188 2003.5625,1494.3125 Q2003.5625,1496.4063 2004.25,1497.4844 Q2004.9375,1498.5469 2006.2813,1498.5469 Q2006.9063,1498.5469 2007.5,1498.2813 Q2008.0938,1498 2008.7188,1497.4219 L2008.7188,1500.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="2026.25" y="1498.6543">Checkerboard</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1795.5" x2="2312.5" y1="1510.5" y2="1510.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1802.5" y="1518.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1814.5" y="1524.7104">_scatteringXS : Vector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1802.5" y="1531.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1814.5" y="1537.5151">_totalXS : Vector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1795.5" x2="2312.5" y1="1544.1094" y2="1544.1094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1802.5" y="1552.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1814.5" y="1558.3198">Checkerboard()</text><ellipse cx="1805.5" cy="1567.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="1814.5" y="1571.1245">Checkerboard(Config* settings, Mesh* mesh)</text><ellipse cx="1805.5" cy="1580.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1814.5" y="1583.9292">~Checkerboard()</text><ellipse cx="1805.5" cy="1593.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="1814.5" y="1596.7339">GetScatteringXS(const std::vector&lt;double&gt;&amp; energies) : VectorVector</text><ellipse cx="1805.5" cy="1606.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="1814.5" y="1609.5386">GetTotalXS(const std::vector&lt;double&gt;&amp; energies) : VectorVector</text><ellipse cx="1805.5" cy="1619.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1814.5" y="1622.3433">SetupIC() : VectorVector</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1802.5" y="1628.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="1814.5" y="1635.1479">isAbsorption(const Vector&amp; pos) : bool {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1802.5" y="1641.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="1814.5" y="1647.9526">isSource(const Vector&amp; pos) : bool {query}</text><ellipse cx="1805.5" cy="1657.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="493" x="1814.5" y="1660.7573">GetExternalSource(const std::vector&lt;double&gt;&amp; energies) : std::vector&lt;VectorVector&gt;</text><ellipse cx="1805.5" cy="1670.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="458" x="1814.5" y="1673.562">GetStoppingPower(const std::vector&lt;double&gt;&amp; energies) : std::vector&lt;double&gt;</text><!--MD5=[4bf8aff396996fef456cd268939daa24]
class Config--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="918.7188" id="Config" style="stroke: #A80036; stroke-width: 1.5;" width="836" x="2349" y="1120"/><ellipse cx="2743.25" cy="1136" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2746.2188,1141.6406 Q2745.6406,1141.9375 2745,1142.0781 Q2744.3594,1142.2344 2743.6563,1142.2344 Q2741.1563,1142.2344 2739.8281,1140.5938 Q2738.5156,1138.9375 2738.5156,1135.8125 Q2738.5156,1132.6875 2739.8281,1131.0313 Q2741.1563,1129.375 2743.6563,1129.375 Q2744.3594,1129.375 2745,1129.5313 Q2745.6563,1129.6875 2746.2188,1129.9844 L2746.2188,1132.7031 Q2745.5938,1132.125 2745,1131.8594 Q2744.4063,1131.5781 2743.7813,1131.5781 Q2742.4375,1131.5781 2741.75,1132.6563 Q2741.0625,1133.7188 2741.0625,1135.8125 Q2741.0625,1137.9063 2741.75,1138.9844 Q2742.4375,1140.0469 2743.7813,1140.0469 Q2744.4063,1140.0469 2745,1139.7813 Q2745.5938,1139.5 2746.2188,1138.9219 L2746.2188,1141.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="39" x="2763.75" y="1140.1543">Config</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2350" x2="3184" y1="1152" y2="1152"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1160"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2369" y="1166.2104">_kernelName : KERNEL_NAME</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1172.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2369" y="1179.0151">_problemName : PROBLEM_NAME</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1185.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2369" y="1191.8198">_quadName : QUAD_NAME</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1198.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2369" y="1204.6245">_solverName : SOLVER_NAME</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1211.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="2369" y="1217.4292">_baseConfig : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1224.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="2369" y="1230.2339">_cleanFluxMat : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1236.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2369" y="1243.0386">_csd : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1249.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="2369" y="1255.8433">_CFL : double</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1262.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="2369" y="1268.6479">_tEnd : double</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1275.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="2369" y="1281.4526">_optionMap : std::map&lt;std::string, OptionBase*&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1288.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2369" y="1294.2573">_allOptions : std::map&lt;std::string, bool&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1300.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="2369" y="1307.062">_ctFile : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1313.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="2369" y="1319.8667">_fileName : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1326.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="2369" y="1332.6714">_inputDir : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1339.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2369" y="1345.4761">_logDir : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1352.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2369" y="1358.2808">_meshFile : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1364.875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="2369" y="1371.0854">_outputDir : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1377.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2369" y="1383.8901">_outputFile : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1390.4844"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="2369" y="1396.6948">_boundaries : std::vector&lt;std::pair&lt;std::string, BOUNDARY_TYPE&gt; &gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1403.2891"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="2369" y="1409.4995">_MarkerDirichlet : std::vector&lt;std::string&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1416.0938"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="2369" y="1422.3042">_MarkerNeumann : std::vector&lt;std::string&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1428.8984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="2369" y="1435.1089">_nCells : unsigned</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1441.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="2369" y="1447.9136">_nQuadPoints : unsigned</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1454.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="2369" y="1460.7183">_maxMomentDegree : unsigned short</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1467.3125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="2369" y="1473.5229">_nMarkerDirichlet : unsigned short</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1480.1172"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="2369" y="1486.3276">_nMarkerNeumann : unsigned short</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1492.9219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2369" y="1499.1323">_quadOrder : unsigned short</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1505.7266"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="2369" y="1511.937">_reconsOrder : unsigned short</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2350" x2="3184" y1="1518.5313" y2="1518.5313"/><ellipse cx="2360" cy="1529.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="2369" y="1532.7417">Config(std::string case_filename)</text><ellipse cx="2360" cy="1542.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="2369" y="1545.5464">~Config(void)</text><ellipse cx="2360" cy="1555.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="2369" y="1558.3511">GetBoundaryType(std::string nameMarker) : BOUNDARY_TYPE {query}</text><ellipse cx="2360" cy="1567.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="2369" y="1571.1558">GetKernelName() : KERNEL_NAME {query}</text><ellipse cx="2360" cy="1580.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="2369" y="1583.9604">GetProblemName() : PROBLEM_NAME {query}</text><ellipse cx="2360" cy="1593.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="2369" y="1596.7651">GetQuadName() : QUAD_NAME {query}</text><ellipse cx="2360" cy="1606.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="2369" y="1609.5698">GetSolverName() : SOLVER_NAME {query}</text><ellipse cx="2360" cy="1619.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2369" y="1622.3745">GetCleanFluxMat() : bool {query}</text><ellipse cx="2360" cy="1631.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2369" y="1635.1792">IsCSD() : bool {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1641.7734"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="601" x="2369" y="1647.9839">TokenizeString(std::string&amp; str, std::string&amp; option_name, std::vector&lt;std::string&gt;&amp; option_value) : bool</text><ellipse cx="2360" cy="1657.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="2369" y="1660.7886">GetCFL() : double {query}</text><ellipse cx="2360" cy="1670.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="2369" y="1673.5933">GetTEnd() : double {query}</text><ellipse cx="2360" cy="1683.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2369" y="1686.3979">GetCTFile() : std::string {query}</text><ellipse cx="2360" cy="1695.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="2369" y="1699.2026">GetLogDir() : std::string {query}</text><ellipse cx="2360" cy="1708.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2369" y="1712.0073">GetMeshFile() : std::string {query}</text><ellipse cx="2360" cy="1721.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="2369" y="1724.812">GetOutputDir() : std::string {query}</text><ellipse cx="2360" cy="1734.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2369" y="1737.6167">GetOutputFile() : std::string {query}</text><ellipse cx="2360" cy="1747.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="2369" y="1750.4214">GetMaxMomentDegree() : unsigned</text><ellipse cx="2360" cy="1760.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="2369" y="1763.2261">GetNCells() : unsigned</text><ellipse cx="2360" cy="1772.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2369" y="1776.0308">GetNQuadPoints() : unsigned</text><ellipse cx="2360" cy="1785.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2369" y="1788.8354">GetReconsOrder() : unsigned</text><ellipse cx="2360" cy="1798.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="2369" y="1801.6401">GetQuadOrder() : unsigned short {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1808.2344"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="478" x="2369" y="1814.4448">AddBoolOption(const std::string name, bool&amp; option_field, bool default_value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1821.0391"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="520" x="2369" y="1827.2495">AddDoubleOption(const std::string name, double&amp; option_field, double default_value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1833.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="810" x="2369" y="1840.0542">AddEnumOption(const std::string name, Tenum&amp; option_field, const std::map&lt;std::string, Tenum&gt;&amp; enum_map, Tenum default_value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1846.6484"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="473" x="2369" y="1852.8589">AddIntegerOption(const std::string name, int&amp; option_field, int default_value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1859.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="480" x="2369" y="1865.6636">AddLongOption(const std::string name, long&amp; option_field, long default_value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1872.2578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="690" x="2369" y="1878.4683">AddStringListOption(const std::string name, unsigned short&amp; num_marker, std::vector&lt;std::string&gt;&amp; option_field) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1885.0625"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="557" x="2369" y="1891.2729">AddStringOption(const std::string name, std::string&amp; option_field, std::string default_value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1897.8672"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="645" x="2369" y="1904.0776">AddUnsignedLongOption(const std::string name, unsigned long&amp; option_field, unsigned long default_value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1910.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="661" x="2369" y="1916.8823">AddUnsignedShortOption(const std::string name, unsigned short&amp; option_field, unsigned short default_value) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1923.4766"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="537" x="2369" y="1929.687">InitLogger(spdlog::level::level_enum terminalLogLvl, spdlog::level::level_enum fileLogLvl) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1936.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2369" y="1942.4917">SetConfigOptions(void) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1949.0859"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="2369" y="1955.2964">SetConfigParsing(std::string case_filename) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="1961.8906"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="2369" y="1968.1011">SetDefault(void) : void</text><ellipse cx="2360" cy="1977.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="2369" y="1980.9058">SetNCells(unsigned nCells) : void</text><ellipse cx="2360" cy="1990.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2369" y="1993.7104">SetNQuadPoints(unsigned nq) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="2000.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2369" y="2006.5151">SetOutput(void) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="2013.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="2369" y="2019.3198">SetPointersNull(void) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2357" y="2025.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="2369" y="2032.1245">SetPostprocessing(void) : void</text><!--MD5=[75f0b6b59a9da2f25653aa608c95a980]
class Cubic2DSpline--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="163.2422" id="Cubic2DSpline" style="stroke: #A80036; stroke-width: 1.5;" width="421" x="1054.5" y="142.5"/><ellipse cx="1216.25" cy="158.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1219.2188,164.1406 Q1218.6406,164.4375 1218,164.5781 Q1217.3594,164.7344 1216.6563,164.7344 Q1214.1563,164.7344 1212.8281,163.0938 Q1211.5156,161.4375 1211.5156,158.3125 Q1211.5156,155.1875 1212.8281,153.5313 Q1214.1563,151.875 1216.6563,151.875 Q1217.3594,151.875 1218,152.0313 Q1218.6563,152.1875 1219.2188,152.4844 L1219.2188,155.2031 Q1218.5938,154.625 1218,154.3594 Q1217.4063,154.0781 1216.7813,154.0781 Q1215.4375,154.0781 1214.75,155.1563 Q1214.0625,156.2188 1214.0625,158.3125 Q1214.0625,160.4063 1214.75,161.4844 Q1215.4375,162.5469 1216.7813,162.5469 Q1217.4063,162.5469 1218,162.2813 Q1218.5938,162 1219.2188,161.4219 L1219.2188,164.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="1236.75" y="162.6543">Cubic2DSpline</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1055.5" x2="1474.5" y1="174.5" y2="174.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1062.5" y="182.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1074.5" y="188.7104">_data : Matrix</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1062.5" y="195.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="1074.5" y="201.5151">_x : Vector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1062.5" y="208.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="1074.5" y="214.3198">_y : Vector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1055.5" x2="1474.5" y1="220.9141" y2="220.9141"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1062.5" y="228.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="1074.5" y="235.1245">Cubic2DSpline()</text><ellipse cx="1065.5" cy="244.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="1074.5" y="247.9292">Cubic2DSpline(const Vector&amp; x, const Vector&amp; y, const Matrix&amp; data)</text><ellipse cx="1065.5" cy="257.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1074.5" y="260.7339">~Cubic2DSpline()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1062.5" y="267.3281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="1074.5" y="273.5386">interpolate1D(double param, double x) : double</text><ellipse cx="1065.5" cy="283.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="1074.5" y="286.3433">operator()(double x, double y) : double</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1062.5" y="292.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="1074.5" y="299.1479">indexOfClosestValue(double value, const Vector&amp; v) : unsigned</text><!--MD5=[c35c8d49414e6f5af323bf3b6ac77d2a]
class ElectronRT--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="176.0469" id="ElectronRT" style="stroke: #A80036; stroke-width: 1.5;" width="519" x="3220.5" y="1491.5"/><ellipse cx="3442.25" cy="1507.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3445.2188,1513.1406 Q3444.6406,1513.4375 3444,1513.5781 Q3443.3594,1513.7344 3442.6563,1513.7344 Q3440.1563,1513.7344 3438.8281,1512.0938 Q3437.5156,1510.4375 3437.5156,1507.3125 Q3437.5156,1504.1875 3438.8281,1502.5313 Q3440.1563,1500.875 3442.6563,1500.875 Q3443.3594,1500.875 3444,1501.0313 Q3444.6563,1501.1875 3445.2188,1501.4844 L3445.2188,1504.2031 Q3444.5938,1503.625 3444,1503.3594 Q3443.4063,1503.0781 3442.7813,1503.0781 Q3441.4375,1503.0781 3440.75,1504.1563 Q3440.0625,1505.2188 3440.0625,1507.3125 Q3440.0625,1509.4063 3440.75,1510.4844 Q3441.4375,1511.5469 3442.7813,1511.5469 Q3443.4063,1511.5469 3444,1511.2813 Q3444.5938,1511 3445.2188,1510.4219 L3445.2188,1513.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="3462.75" y="1511.6543">ElectronRT</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3221.5" x2="3738.5" y1="1523.5" y2="1523.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3221.5" x2="3738.5" y1="1531.5" y2="1531.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3228.5" y="1539.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="3240.5" y="1545.7104">ElectronRT()</text><ellipse cx="3231.5" cy="1555.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="3240.5" y="1558.5151">ElectronRT(Config* settings, Mesh* mesh)</text><ellipse cx="3231.5" cy="1568.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="3240.5" y="1571.3198">~ElectronRT()</text><ellipse cx="3231.5" cy="1580.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="3240.5" y="1584.1245">GetScatteringXS(const std::vector&lt;double&gt;&amp; energies) : VectorVector</text><ellipse cx="3231.5" cy="1593.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="3240.5" y="1596.9292">GetTotalXS(const std::vector&lt;double&gt;&amp; energies) : VectorVector</text><ellipse cx="3231.5" cy="1606.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3240.5" y="1609.7339">SetupIC() : VectorVector</text><ellipse cx="3231.5" cy="1619.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="493" x="3240.5" y="1622.5386">GetExternalSource(const std::vector&lt;double&gt;&amp; energies) : std::vector&lt;VectorVector&gt;</text><ellipse cx="3231.5" cy="1632.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="3240.5" y="1635.3433">GetDensity(const VectorVector&amp; cellMidPoints) : std::vector&lt;double&gt;</text><ellipse cx="3231.5" cy="1644.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="458" x="3240.5" y="1648.1479">GetStoppingPower(const std::vector&lt;double&gt;&amp; energies) : std::vector&lt;double&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3228.5" y="1654.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="3240.5" y="1660.9526">LoadXSH20(std::string fileSigmaS, std::string fileSigmaT) : void</text><!--MD5=[60673fa564197751d7da20348890f532]
class ErrorMessages--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="86.4141" id="ErrorMessages" style="stroke: #A80036; stroke-width: 1.5;" width="457" x="1510.5" y="181"/><ellipse cx="1687.75" cy="197" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1690.7188,202.6406 Q1690.1406,202.9375 1689.5,203.0781 Q1688.8594,203.2344 1688.1563,203.2344 Q1685.6563,203.2344 1684.3281,201.5938 Q1683.0156,199.9375 1683.0156,196.8125 Q1683.0156,193.6875 1684.3281,192.0313 Q1685.6563,190.375 1688.1563,190.375 Q1688.8594,190.375 1689.5,190.5313 Q1690.1563,190.6875 1690.7188,190.9844 L1690.7188,193.7031 Q1690.0938,193.125 1689.5,192.8594 Q1688.9063,192.5781 1688.2813,192.5781 Q1686.9375,192.5781 1686.25,193.6563 Q1685.5625,194.7188 1685.5625,196.8125 Q1685.5625,198.9063 1686.25,199.9844 Q1686.9375,201.0469 1688.2813,201.0469 Q1688.9063,201.0469 1689.5,200.7813 Q1690.0938,200.5 1690.7188,199.9219 L1690.7188,202.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="94" x="1708.25" y="201.1543">ErrorMessages</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1511.5" x2="1966.5" y1="213" y2="213"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1511.5" x2="1966.5" y1="221" y2="221"/><ellipse cx="1521.5" cy="232" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1530.5" y="235.2104">ErrorMessages()</text><ellipse cx="1521.5" cy="244.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="338" x="1530.5" y="248.0151">Error(std::string ErrorMsg, std::string FunctionName) : void</text><ellipse cx="1521.5" cy="257.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="431" x="1530.5" y="260.8198">OptionNotSetError(std::string OptionName, std::string FunctionName) : void</text><!--MD5=[7273993b947472dcb685fe33c2f03714]
class Isotropic--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="99.2188" id="Isotropic" style="stroke: #A80036; stroke-width: 1.5;" width="194" x="5852" y="1530"/><ellipse cx="5917.75" cy="1546" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5920.7188,1551.6406 Q5920.1406,1551.9375 5919.5,1552.0781 Q5918.8594,1552.2344 5918.1563,1552.2344 Q5915.6563,1552.2344 5914.3281,1550.5938 Q5913.0156,1548.9375 5913.0156,1545.8125 Q5913.0156,1542.6875 5914.3281,1541.0313 Q5915.6563,1539.375 5918.1563,1539.375 Q5918.8594,1539.375 5919.5,1539.5313 Q5920.1563,1539.6875 5920.7188,1539.9844 L5920.7188,1542.7031 Q5920.0938,1542.125 5919.5,1541.8594 Q5918.9063,1541.5781 5918.2813,1541.5781 Q5916.9375,1541.5781 5916.25,1542.6563 Q5915.5625,1543.7188 5915.5625,1545.8125 Q5915.5625,1547.9063 5916.25,1548.9844 Q5916.9375,1550.0469 5918.2813,1550.0469 Q5918.9063,1550.0469 5919.5,1549.7813 Q5920.0938,1549.5 5920.7188,1548.9219 L5920.7188,1551.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="5938.25" y="1550.1543">Isotropic</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5853" x2="6045" y1="1562" y2="1562"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5853" x2="6045" y1="1570" y2="1570"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5860" y="1578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="5872" y="1584.2104">Isotropic()</text><ellipse cx="5863" cy="1593.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5872" y="1597.0151">Isotropic(QuadratureBase* q)</text><ellipse cx="5863" cy="1606.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="5872" y="1609.8198">~Isotropic()</text><ellipse cx="5863" cy="1619.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5872" y="1622.6245">GetScatteringKernel() : Matrix</text><!--MD5=[434c416ea250d0fb02aea8eaa724f3e0]
class Isotropic1D--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="99.2188" id="Isotropic1D" style="stroke: #A80036; stroke-width: 1.5;" width="209" x="6081.5" y="1530"/><ellipse cx="6146.25" cy="1546" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6149.2188,1551.6406 Q6148.6406,1551.9375 6148,1552.0781 Q6147.3594,1552.2344 6146.6563,1552.2344 Q6144.1563,1552.2344 6142.8281,1550.5938 Q6141.5156,1548.9375 6141.5156,1545.8125 Q6141.5156,1542.6875 6142.8281,1541.0313 Q6144.1563,1539.375 6146.6563,1539.375 Q6147.3594,1539.375 6148,1539.5313 Q6148.6563,1539.6875 6149.2188,1539.9844 L6149.2188,1542.7031 Q6148.5938,1542.125 6148,1541.8594 Q6147.4063,1541.5781 6146.7813,1541.5781 Q6145.4375,1541.5781 6144.75,1542.6563 Q6144.0625,1543.7188 6144.0625,1545.8125 Q6144.0625,1547.9063 6144.75,1548.9844 Q6145.4375,1550.0469 6146.7813,1550.0469 Q6147.4063,1550.0469 6148,1549.7813 Q6148.5938,1549.5 6149.2188,1548.9219 L6149.2188,1551.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="6166.75" y="1550.1543">Isotropic1D</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6082.5" x2="6289.5" y1="1562" y2="1562"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6082.5" x2="6289.5" y1="1570" y2="1570"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6089.5" y="1578"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="6101.5" y="1584.2104">Isotropic1D()</text><ellipse cx="6092.5" cy="1593.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="6101.5" y="1597.0151">Isotropic1D(QuadratureBase* q)</text><ellipse cx="6092.5" cy="1606.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="6101.5" y="1609.8198">~Isotropic1D()</text><ellipse cx="6092.5" cy="1619.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="6101.5" y="1622.6245">GetScatteringKernel() : Matrix</text><!--MD5=[041e745b51d1bd870567d4f38869c776]
class LaxFriedrichsFlux--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="86.4141" id="LaxFriedrichsFlux" style="stroke: #A80036; stroke-width: 1.5;" width="529" x="8091.5" y="1536.5"/><ellipse cx="8299.25" cy="1552.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8302.2188,1558.1406 Q8301.6406,1558.4375 8301,1558.5781 Q8300.3594,1558.7344 8299.6563,1558.7344 Q8297.1563,1558.7344 8295.8281,1557.0938 Q8294.5156,1555.4375 8294.5156,1552.3125 Q8294.5156,1549.1875 8295.8281,1547.5313 Q8297.1563,1545.875 8299.6563,1545.875 Q8300.3594,1545.875 8301,1546.0313 Q8301.6563,1546.1875 8302.2188,1546.4844 L8302.2188,1549.2031 Q8301.5938,1548.625 8301,1548.3594 Q8300.4063,1548.0781 8299.7813,1548.0781 Q8298.4375,1548.0781 8297.75,1549.1563 Q8297.0625,1550.2188 8297.0625,1552.3125 Q8297.0625,1554.4063 8297.75,1555.4844 Q8298.4375,1556.5469 8299.7813,1556.5469 Q8300.4063,1556.5469 8301,1556.2813 Q8301.5938,1556 8302.2188,1555.4219 L8302.2188,1558.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="8319.75" y="1556.6543">LaxFriedrichsFlux</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8092.5" x2="8619.5" y1="1568.5" y2="1568.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="8099.5" y="1576.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="8111.5" y="1582.7104">_dt : double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8092.5" x2="8619.5" y1="1589.3047" y2="1589.3047"/><ellipse cx="8102.5" cy="1600.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="8111.5" y="1603.5151">LaxFriedrichsFlux(Config* settings)</text><ellipse cx="8102.5" cy="1613.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="8111.5" y="1616.3198">Flux(const Vector&amp; Omega, double psiL, double psiR, const Vector&amp; n) : double {query}</text><!--MD5=[e262b70d9077d2c30731c187b2e5bc09]
class LineSource_PN--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="163.2422" id="LineSource_PN" style="stroke: #A80036; stroke-width: 1.5;" width="519" x="3774.5" y="1498"/><ellipse cx="3983.75" cy="1514" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3986.7188,1519.6406 Q3986.1406,1519.9375 3985.5,1520.0781 Q3984.8594,1520.2344 3984.1563,1520.2344 Q3981.6563,1520.2344 3980.3281,1518.5938 Q3979.0156,1516.9375 3979.0156,1513.8125 Q3979.0156,1510.6875 3980.3281,1509.0313 Q3981.6563,1507.375 3984.1563,1507.375 Q3984.8594,1507.375 3985.5,1507.5313 Q3986.1563,1507.6875 3986.7188,1507.9844 L3986.7188,1510.7031 Q3986.0938,1510.125 3985.5,1509.8594 Q3984.9063,1509.5781 3984.2813,1509.5781 Q3982.9375,1509.5781 3982.25,1510.6563 Q3981.5625,1511.7188 3981.5625,1513.8125 Q3981.5625,1515.9063 3982.25,1516.9844 Q3982.9375,1518.0469 3984.2813,1518.0469 Q3984.9063,1518.0469 3985.5,1517.7813 Q3986.0938,1517.5 3986.7188,1516.9219 L3986.7188,1519.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="4004.25" y="1518.1543">LineSource_PN</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3775.5" x2="4292.5" y1="1530" y2="1530"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3775.5" x2="4292.5" y1="1538" y2="1538"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3782.5" y="1546"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="3794.5" y="1552.2104">LineSource_PN()</text><ellipse cx="3785.5" cy="1561.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="3794.5" y="1565.0151">LineSource_PN(Config* settings, Mesh* mesh)</text><ellipse cx="3785.5" cy="1574.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="3794.5" y="1577.8198">~LineSource_PN()</text><ellipse cx="3785.5" cy="1587.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="3794.5" y="1590.6245">GetScatteringXS(const std::vector&lt;double&gt;&amp; energies) : VectorVector</text><ellipse cx="3785.5" cy="1600.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="3794.5" y="1603.4292">GetTotalXS(const std::vector&lt;double&gt;&amp; energies) : VectorVector</text><ellipse cx="3785.5" cy="1613.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3794.5" y="1616.2339">SetupIC() : VectorVector</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3782.5" y="1622.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="3794.5" y="1629.0386">GlobalIndex(int l, int k) : int {query}</text><ellipse cx="3785.5" cy="1638.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="493" x="3794.5" y="1641.8433">GetExternalSource(const std::vector&lt;double&gt;&amp; energies) : std::vector&lt;VectorVector&gt;</text><ellipse cx="3785.5" cy="1651.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="458" x="3794.5" y="1654.6479">GetStoppingPower(const std::vector&lt;double&gt;&amp; energies) : std::vector&lt;double&gt;</text><!--MD5=[c6591e1b0137c1f7adfdba2da1ec1a14]
class LineSource_SN--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="150.4375" id="LineSource_SN" style="stroke: #A80036; stroke-width: 1.5;" width="519" x="4328.5" y="1504.5"/><ellipse cx="4537.75" cy="1520.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4540.7188,1526.1406 Q4540.1406,1526.4375 4539.5,1526.5781 Q4538.8594,1526.7344 4538.1563,1526.7344 Q4535.6563,1526.7344 4534.3281,1525.0938 Q4533.0156,1523.4375 4533.0156,1520.3125 Q4533.0156,1517.1875 4534.3281,1515.5313 Q4535.6563,1513.875 4538.1563,1513.875 Q4538.8594,1513.875 4539.5,1514.0313 Q4540.1563,1514.1875 4540.7188,1514.4844 L4540.7188,1517.2031 Q4540.0938,1516.625 4539.5,1516.3594 Q4538.9063,1516.0781 4538.2813,1516.0781 Q4536.9375,1516.0781 4536.25,1517.1563 Q4535.5625,1518.2188 4535.5625,1520.3125 Q4535.5625,1522.4063 4536.25,1523.4844 Q4536.9375,1524.5469 4538.2813,1524.5469 Q4538.9063,1524.5469 4539.5,1524.2813 Q4540.0938,1524 4540.7188,1523.4219 L4540.7188,1526.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="4558.25" y="1524.6543">LineSource_SN</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4329.5" x2="4846.5" y1="1536.5" y2="1536.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4329.5" x2="4846.5" y1="1544.5" y2="1544.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4336.5" y="1552.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="4348.5" y="1558.7104">LineSource_SN()</text><ellipse cx="4339.5" cy="1568.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="4348.5" y="1571.5151">LineSource_SN(Config* settings, Mesh* mesh)</text><ellipse cx="4339.5" cy="1581.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4348.5" y="1584.3198">~LineSource_SN()</text><ellipse cx="4339.5" cy="1593.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="4348.5" y="1597.1245">GetScatteringXS(const std::vector&lt;double&gt;&amp; energies) : VectorVector</text><ellipse cx="4339.5" cy="1606.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="4348.5" y="1609.9292">GetTotalXS(const std::vector&lt;double&gt;&amp; energies) : VectorVector</text><ellipse cx="4339.5" cy="1619.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4348.5" y="1622.7339">SetupIC() : VectorVector</text><ellipse cx="4339.5" cy="1632.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="493" x="4348.5" y="1635.5386">GetExternalSource(const std::vector&lt;double&gt;&amp; energies) : std::vector&lt;VectorVector&gt;</text><ellipse cx="4339.5" cy="1645.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="458" x="4348.5" y="1648.3433">GetStoppingPower(const std::vector&lt;double&gt;&amp; energies) : std::vector&lt;double&gt;</text><!--MD5=[c76d395e7ad9096c1eaf2eb1a7befa0d]
class LineSource_SN_Pseudo1D--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="86.4141" id="LineSource_SN_Pseudo1D" style="stroke: #A80036; stroke-width: 1.5;" width="354" x="4411" y="2150.5"/><ellipse cx="4502.75" cy="2166.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4505.7188,2172.1406 Q4505.1406,2172.4375 4504.5,2172.5781 Q4503.8594,2172.7344 4503.1563,2172.7344 Q4500.6563,2172.7344 4499.3281,2171.0938 Q4498.0156,2169.4375 4498.0156,2166.3125 Q4498.0156,2163.1875 4499.3281,2161.5313 Q4500.6563,2159.875 4503.1563,2159.875 Q4503.8594,2159.875 4504.5,2160.0313 Q4505.1563,2160.1875 4505.7188,2160.4844 L4505.7188,2163.2031 Q4505.0938,2162.625 4504.5,2162.3594 Q4503.9063,2162.0781 4503.2813,2162.0781 Q4501.9375,2162.0781 4501.25,2163.1563 Q4500.5625,2164.2188 4500.5625,2166.3125 Q4500.5625,2168.4063 4501.25,2169.4844 Q4501.9375,2170.5469 4503.2813,2170.5469 Q4503.9063,2170.5469 4504.5,2170.2813 Q4505.0938,2170 4505.7188,2169.4219 L4505.7188,2172.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="162" x="4523.25" y="2170.6543">LineSource_SN_Pseudo1D</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4412" x2="4764" y1="2182.5" y2="2182.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4412" x2="4764" y1="2190.5" y2="2190.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4419" y="2198.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="4431" y="2204.7104">LineSource_SN_Pseudo1D()</text><ellipse cx="4422" cy="2214.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="4431" y="2217.5151">LineSource_SN_Pseudo1D(Config* settings, Mesh* mesh)</text><ellipse cx="4422" cy="2227.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4431" y="2230.3198">SetupIC() : VectorVector</text><!--MD5=[7eb692890580fae833ec9fabecfed6d6]
class MNSolver--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="201.6563" id="MNSolver" style="stroke: #A80036; stroke-width: 1.5;" width="244" x="6498" y="679"/><ellipse cx="6587.25" cy="695" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6590.2188,700.6406 Q6589.6406,700.9375 6589,701.0781 Q6588.3594,701.2344 6587.6563,701.2344 Q6585.1563,701.2344 6583.8281,699.5938 Q6582.5156,697.9375 6582.5156,694.8125 Q6582.5156,691.6875 6583.8281,690.0313 Q6585.1563,688.375 6587.6563,688.375 Q6588.3594,688.375 6589,688.5313 Q6589.6563,688.6875 6590.2188,688.9844 L6590.2188,691.7031 Q6589.5938,691.125 6589,690.8594 Q6588.4063,690.5781 6587.7813,690.5781 Q6586.4375,690.5781 6585.75,691.6563 Q6585.0625,692.7188 6585.0625,694.8125 Q6585.0625,696.9063 6585.75,697.9844 Q6586.4375,699.0469 6587.7813,699.0469 Q6588.4063,699.0469 6589,698.7813 Q6589.5938,698.5 6590.2188,697.9219 L6590.2188,700.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="6607.75" y="699.1543">MNSolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6499" x2="6741" y1="711" y2="711"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506" y="719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="6518" y="725.2104">_quadrature : QuadratureBase*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506" y="731.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="6518" y="738.0151">_basis : SphericalHarmonics</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506" y="744.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="6518" y="750.8198">_scatterMatDiag : Vector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506" y="757.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="6518" y="763.6245">_A : VectorVector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506" y="770.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="6518" y="776.4292">_sigmaA : VectorVector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506" y="783.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="6518" y="789.2339">_nTotalEntries : unsigned</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506" y="795.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="6518" y="802.0386">_nMaxMomentsOrder : unsigned short</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6499" x2="6741" y1="808.6328" y2="808.6328"/><ellipse cx="6509" cy="819.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="6518" y="822.8433">MNSolver(Config* settings)</text><ellipse cx="6509" cy="832.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="6518" y="835.6479">~MNSolver()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506" y="842.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="6518" y="848.4526">GlobalIndex(int l, int k) : int {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6506" y="855.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="6518" y="861.2573">ComputeSystemMatrices() : void</text><ellipse cx="6509" cy="870.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="6518" y="874.062">Solve() : void</text><!--MD5=[49b4333bed3a745cc53311fcf54bbfcc]
class Mesh--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="598.6016" id="Mesh" style="stroke: #A80036; stroke-width: 1.5;" width="934" x="4883" y="1280"/><ellipse cx="5329.25" cy="1296" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5332.2188,1301.6406 Q5331.6406,1301.9375 5331,1302.0781 Q5330.3594,1302.2344 5329.6563,1302.2344 Q5327.1563,1302.2344 5325.8281,1300.5938 Q5324.5156,1298.9375 5324.5156,1295.8125 Q5324.5156,1292.6875 5325.8281,1291.0313 Q5327.1563,1289.375 5329.6563,1289.375 Q5330.3594,1289.375 5331,1289.5313 Q5331.6563,1289.6875 5332.2188,1289.9844 L5332.2188,1292.7031 Q5331.5938,1292.125 5331,1291.8594 Q5330.4063,1291.5781 5329.7813,1291.5781 Q5328.4375,1291.5781 5327.75,1292.6563 Q5327.0625,1293.7188 5327.0625,1295.8125 Q5327.0625,1297.9063 5327.75,1298.9844 Q5328.4375,1300.0469 5329.7813,1300.0469 Q5330.4063,1300.0469 5331,1299.7813 Q5331.5938,1299.5 5332.2188,1298.9219 L5332.2188,1301.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="33" x="5349.75" y="1300.1543">Mesh</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4884" x2="5816" y1="1312" y2="1312"/><polygon fill="none" points="4894,1318,4898,1322,4894,1326,4890,1322" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="4903" y="1326.2104">_nodeNeighbors : blaze::CompressedMatrix&lt;bool&gt;</text><polygon fill="none" points="4894,1330.8047,4898,1334.8047,4894,1338.8047,4890,1334.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4903" y="1339.0151">_dim : const unsigned</text><polygon fill="none" points="4894,1343.6094,4898,1347.6094,4894,1351.6094,4890,1347.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4903" y="1351.8198">_ghostCellID : const unsigned</text><polygon fill="none" points="4894,1356.4141,4898,1360.4141,4894,1364.4141,4890,1360.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="4903" y="1364.6245">_numBoundaries : const unsigned</text><polygon fill="none" points="4894,1369.2188,4898,1373.2188,4894,1377.2188,4890,1373.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="4903" y="1377.4292">_numCells : const unsigned</text><polygon fill="none" points="4894,1382.0234,4898,1386.0234,4894,1390.0234,4890,1386.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="4903" y="1390.2339">_numNodes : const unsigned</text><polygon fill="none" points="4894,1394.8281,4898,1398.8281,4894,1402.8281,4890,1398.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="4903" y="1403.0386">_numNodesPerCell : const unsigned</text><polygon fill="none" points="4894,1407.6328,4898,1411.6328,4894,1415.6328,4890,1411.6328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="4903" y="1415.8433">_cellBoundaryTypes : std::vector&lt;BOUNDARY_TYPE&gt;</text><polygon fill="none" points="4894,1420.4375,4898,1424.4375,4894,1428.4375,4890,1424.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="4903" y="1428.6479">_cellMidPoints : std::vector&lt;Vector&gt;</text><polygon fill="none" points="4894,1433.2422,4898,1437.2422,4894,1441.2422,4890,1437.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4903" y="1441.4526">_nodes : std::vector&lt;Vector&gt;</text><polygon fill="none" points="4894,1446.0469,4898,1450.0469,4894,1454.0469,4890,1450.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="4903" y="1454.2573">_cellAreas : std::vector&lt;double&gt;</text><polygon fill="none" points="4894,1458.8516,4898,1462.8516,4894,1466.8516,4890,1462.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="470" x="4903" y="1467.062">_boundaries : std::vector&lt;std::pair&lt;BOUNDARY_TYPE, std::vector&lt;unsigned&gt; &gt; &gt;</text><polygon fill="none" points="4894,1471.6563,4898,1475.6563,4894,1479.6563,4890,1475.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="4903" y="1479.8667">_bounds : std::vector&lt;std::pair&lt;double, double&gt; &gt;</text><polygon fill="none" points="4894,1484.4609,4898,1488.4609,4894,1492.4609,4890,1488.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="4903" y="1492.6714">_cellNormals : std::vector&lt;std::vector&lt;Vector&gt; &gt;</text><polygon fill="none" points="4894,1497.2656,4898,1501.2656,4894,1505.2656,4890,1501.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="4903" y="1505.4761">_cellNeighbors : std::vector&lt;std::vector&lt;unsigned&gt; &gt;</text><polygon fill="none" points="4894,1510.0703,4898,1514.0703,4894,1518.0703,4890,1514.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="4903" y="1518.2808">_cells : std::vector&lt;std::vector&lt;unsigned&gt; &gt;</text><polygon fill="none" points="4894,1522.875,4898,1526.875,4894,1530.875,4890,1526.875" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="4903" y="1531.0854">_colors : std::vector&lt;unsigned&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4884" x2="5816" y1="1537.6797" y2="1537.6797"/><ellipse cx="4894" cy="1548.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="4903" y="1551.8901">Mesh()</text><ellipse cx="4894" cy="1561.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="908" x="4903" y="1564.6948">Mesh(std::vector&lt;Vector&gt; nodes, std::vector&lt;std::vector&lt;unsigned&gt; &gt; cells, std::vector&lt;std::pair&lt;BOUNDARY_TYPE, std::vector&lt;unsigned&gt; &gt; &gt; boundaries)</text><ellipse cx="4894" cy="1574.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="4903" y="1577.4995">~Mesh()</text><polygon fill="#FFFF44" points="4894,1582.0938,4898,1586.0938,4894,1590.0938,4890,1586.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="631" x="4903" y="1590.3042">ComputeOutwardFacingNormal(const Vector&amp; nodeA, const Vector&amp; nodeB, const Vector&amp; cellCenter) : Vector</text><ellipse cx="4894" cy="1599.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4903" y="1603.1089">GetDistanceToOrigin(unsigned idx_cell) : double {query}</text><ellipse cx="4894" cy="1612.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="4903" y="1615.9136">GetBoundaryTypes() : std::vector&lt;BOUNDARY_TYPE&gt;&amp; {query}</text><ellipse cx="4894" cy="1625.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="4903" y="1628.7183">GetCellMidPoints() : std::vector&lt;Vector&gt;&amp; {query}</text><ellipse cx="4894" cy="1638.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251" x="4903" y="1641.5229">GetNodes() : std::vector&lt;Vector&gt;&amp; {query}</text><ellipse cx="4894" cy="1651.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="4903" y="1654.3276">GetCellAreas() : std::vector&lt;double&gt;&amp; {query}</text><ellipse cx="4894" cy="1663.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="4903" y="1667.1323">GetBounds() : std::vector&lt;std::pair&lt;double , double&gt; &gt; {query}</text><ellipse cx="4894" cy="1676.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="4903" y="1679.937">GetNormals() : std::vector&lt;std::vector&lt;Vector&gt; &gt;&amp; {query}</text><ellipse cx="4894" cy="1689.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="4903" y="1692.7417">GetCells() : std::vector&lt;std::vector&lt;unsigned&gt; &gt;&amp; {query}</text><ellipse cx="4894" cy="1702.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379" x="4903" y="1705.5464">GetNeighbours() : std::vector&lt;std::vector&lt;unsigned&gt; &gt;&amp; {query}</text><ellipse cx="4894" cy="1715.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="4903" y="1718.3511">GetPartitionIDs() : std::vector&lt;unsigned&gt;&amp; {query}</text><ellipse cx="4894" cy="1727.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="4903" y="1731.1558">GetDim() : unsigned {query}</text><ellipse cx="4894" cy="1740.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="4903" y="1743.9604">GetNumCells() : unsigned {query}</text><ellipse cx="4894" cy="1753.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="4903" y="1756.7651">GetNumNodes() : unsigned {query}</text><ellipse cx="4894" cy="1766.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="4903" y="1769.5698">GetNumNodesPerCell() : unsigned {query}</text><polygon fill="#FFFF44" points="4894,1774.1641,4898,1778.1641,4894,1782.1641,4890,1778.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="4903" y="1782.3745">ComputeBounds() : void</text><polygon fill="#FFFF44" points="4894,1786.9688,4898,1790.9688,4894,1794.9688,4890,1790.9688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4903" y="1795.1792">ComputeCellAreas() : void</text><polygon fill="#FFFF44" points="4894,1799.7734,4898,1803.7734,4894,1807.7734,4890,1803.7734" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4903" y="1807.9839">ComputeCellMidpoints() : void</text><polygon fill="#FFFF44" points="4894,1812.5781,4898,1816.5781,4894,1820.5781,4890,1816.5781" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="4903" y="1820.7886">ComputeConnectivity() : void</text><polygon fill="#FFFF44" points="4894,1825.3828,4898,1829.3828,4894,1833.3828,4890,1829.3828" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="4903" y="1833.5933">ComputePartitioning() : void</text><ellipse cx="4894" cy="1843.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="675" x="4903" y="1846.3979">ComputeSlopes(unsigned nq, VectorVector&amp; psiDerX, VectorVector&amp; psiDerY, const VectorVector&amp; psi) : void {query}</text><ellipse cx="4894" cy="1855.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="699" x="4903" y="1859.2026">ReconstructSlopesS(unsigned nq, VectorVector&amp; psiDerX, VectorVector&amp; psiDerY, const VectorVector&amp; psi) : void {query}</text><ellipse cx="4894" cy="1868.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="699" x="4903" y="1872.0073">ReconstructSlopesU(unsigned nq, VectorVector&amp; psiDerX, VectorVector&amp; psiDerY, const VectorVector&amp; psi) : void {query}</text><!--MD5=[63c6af204b72495afb767f03716ed6bb]
class NumericalFlux--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="112.0234" id="NumericalFlux" style="stroke: #A80036; stroke-width: 1.5;" width="1316" x="6777" y="724"/><ellipse cx="7387.25" cy="740" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7387.3594,735.3438 L7386.2031,740.4219 L7388.5313,740.4219 L7387.3594,735.3438 Z M7385.875,733.1094 L7388.8594,733.1094 L7392.2188,745.5 L7389.7656,745.5 L7389,742.4375 L7385.7188,742.4375 L7384.9688,745.5 L7382.5313,745.5 L7385.875,733.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="87" x="7407.75" y="744.1543">NumericalFlux</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6778" x2="8092" y1="756" y2="756"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6778" x2="8092" y1="764" y2="764"/><ellipse cx="6788" cy="775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="6797" y="778.2104">NumericalFlux(Config* settings)</text><ellipse cx="6788" cy="787.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="235" x="6797" y="791.0151">Create(Config* settings) : NumericalFlux*</text><ellipse cx="6788" cy="800.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1110" x="6797" y="803.8198">Flux(const Matrix AxPlus, const Matrix AxMinus, const Matrix AyPlus, const Matrix AyMinus, const Matrix AzPlus, const Matrix AzMinus, const Vector, const Vector, const Vector n) : Vector {query}</text><ellipse cx="6788" cy="813.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="502" x="6797" y="816.6245">Flux(const Vector&amp; Omega, double psiL, double psiR, const Vector&amp; n) : double {query}</text><ellipse cx="6788" cy="826.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="1290" x="6797" y="829.4292">FluxVanLeer(const Matrix&amp; Ax, const Matrix&amp; AxAbs, const Matrix&amp; Ay, const Matrix&amp; AyAbs, const Matrix&amp; Az, const Matrix&amp; AzAbs, const Vector&amp; psiL, const Vector&amp; psiR, const Vector&amp; n, Vector&amp; resultFlux) : void {query}</text><!--MD5=[57035cf667d2c1b3f498afd432858e1a]
class OptionBase--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="150.4375" id="OptionBase" style="stroke: #A80036; stroke-width: 1.5;" width="733" x="2400.5" y="2118.5"/><ellipse cx="2727.75" cy="2134.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2727.8594,2129.8438 L2726.7031,2134.9219 L2729.0313,2134.9219 L2727.8594,2129.8438 Z M2726.375,2127.6094 L2729.3594,2127.6094 L2732.7188,2140 L2730.2656,2140 L2729.5,2136.9375 L2726.2188,2136.9375 L2725.4688,2140 L2723.0313,2140 L2726.375,2127.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="70" x="2748.25" y="2138.6543">OptionBase</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2401.5" x2="3132.5" y1="2150.5" y2="2150.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2408.5" y="2158.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2420.5" y="2164.7104">_value : std::vector&lt;std::string&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2401.5" x2="3132.5" y1="2171.3047" y2="2171.3047"/><ellipse cx="2411.5" cy="2182.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="2420.5" y="2185.5151">OptionBase()</text><ellipse cx="2411.5" cy="2195.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="82" x="2420.5" y="2198.3198">~OptionBase()</text><ellipse cx="2411.5" cy="2207.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="2420.5" y="2211.1245">SetValue(std::vector&lt;std::string&gt; value) : std::string</text><ellipse cx="2411.5" cy="2220.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="609" x="2420.5" y="2223.9292">badValue(std::vector&lt;std::string&gt;&amp; option_value, std::string type_id, std::string option_name) : std::string</text><ellipse cx="2411.5" cy="2233.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="707" x="2420.5" y="2236.7339">optionCheckMultipleValues(std::vector&lt;std::string&gt;&amp; option_value, std::string type_id, std::string option_name) : std::string</text><ellipse cx="2411.5" cy="2246.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="2420.5" y="2249.5386">GetValue() : std::vector&lt;std::string&gt;</text><ellipse cx="2411.5" cy="2259.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="102" x="2420.5" y="2262.3433">SetDefault() : void</text><!--MD5=[08673ca9a8f38161e36040eb5f4c9286]
class OptionBool--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="137.6328" id="OptionBool" style="stroke: #A80036; stroke-width: 1.5;" width="484" x="671" y="2354"/><ellipse cx="875.25" cy="2370" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M875.3594,2365.3438 L874.2031,2370.4219 L876.5313,2370.4219 L875.3594,2365.3438 Z M873.875,2363.1094 L876.8594,2363.1094 L880.2188,2375.5 L877.7656,2375.5 L877,2372.4375 L873.7188,2372.4375 L872.9688,2375.5 L870.5313,2375.5 L873.875,2363.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="67" x="895.75" y="2374.1543">OptionBool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="672" x2="1154" y1="2386" y2="2386"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="679" y="2394"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="691" y="2400.2104">_def : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="679" y="2406.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="691" y="2413.0151">_field : bool&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="679" y="2419.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="691" y="2425.8198">_name : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="672" x2="1154" y1="2432.4141" y2="2432.4141"/><ellipse cx="682" cy="2443.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="458" x="691" y="2446.6245">OptionBool(std::string option_field_name, bool&amp; option_field, bool default_value)</text><ellipse cx="682" cy="2456.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="691" y="2459.4292">~OptionBool()</text><ellipse cx="682" cy="2469.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="691" y="2472.2339">SetValue(std::vector&lt;std::string&gt; option_value) : std::string</text><ellipse cx="682" cy="2481.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="691" y="2485.0386">SetDefault() : void</text><!--MD5=[4c0d27bbf2263f91bc2f6695bd30d24a]
class OptionDouble--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="137.6328" id="OptionDouble" style="stroke: #A80036; stroke-width: 1.5;" width="526" x="1190" y="2354"/><ellipse cx="1406.75" cy="2370" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1406.8594,2365.3438 L1405.7031,2370.4219 L1408.0313,2370.4219 L1406.8594,2365.3438 Z M1405.375,2363.1094 L1408.3594,2363.1094 L1411.7188,2375.5 L1409.2656,2375.5 L1408.5,2372.4375 L1405.2188,2372.4375 L1404.4688,2375.5 L1402.0313,2375.5 L1405.375,2363.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="84" x="1427.25" y="2374.1543">OptionDouble</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1191" x2="1715" y1="2386" y2="2386"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1198" y="2394"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="1210" y="2400.2104">_def : double</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1198" y="2406.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="1210" y="2413.0151">_field : double&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1198" y="2419.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1210" y="2425.8198">_name : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1191" x2="1715" y1="2432.4141" y2="2432.4141"/><ellipse cx="1201" cy="2443.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="500" x="1210" y="2446.6245">OptionDouble(std::string option_field_name, double&amp; option_field, double default_value)</text><ellipse cx="1201" cy="2456.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="1210" y="2459.4292">~OptionDouble()</text><ellipse cx="1201" cy="2469.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="1210" y="2472.2339">SetValue(std::vector&lt;std::string&gt; option_value) : std::string</text><ellipse cx="1201" cy="2481.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1210" y="2485.0386">SetDefault() : void</text><!--MD5=[144a480d156acaecaa75bd1afa651596]
class OptionEnum--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="150.4375" id="OptionEnum" style="stroke: #A80036; stroke-width: 1.5;" width="754" x="1751" y="2348"/><ellipse cx="2006.25" cy="2364" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2006.3594,2359.3438 L2005.2031,2364.4219 L2007.5313,2364.4219 L2006.3594,2359.3438 Z M2004.875,2357.1094 L2007.8594,2357.1094 L2011.2188,2369.5 L2008.7656,2369.5 L2008,2366.4375 L2004.7188,2366.4375 L2003.9688,2369.5 L2001.5313,2369.5 L2004.875,2357.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="75" x="2026.75" y="2368.1543">OptionEnum</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="158" x="2350" y="2345"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="156" x="2351" y="2357.1387">template &lt;class Tenum&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1752" x2="2504" y1="2380" y2="2380"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1759" y="2388"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="1771" y="2394.2104">_def : Tenum</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1759" y="2400.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1771" y="2407.0151">_field : Tenum&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1759" y="2413.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="1771" y="2419.8198">_map : std::map&lt;std::string, Tenum&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1759" y="2426.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1771" y="2432.6245">_name : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1752" x2="2504" y1="2439.2188" y2="2439.2188"/><ellipse cx="1762" cy="2450.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="728" x="1771" y="2453.4292">OptionEnum(std::string option_field_name, const std::map&lt;std::string, Tenum&gt; m, Tenum&amp; option_field, Tenum default_value)</text><ellipse cx="1762" cy="2463.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="1771" y="2466.2339">~OptionEnum()</text><ellipse cx="1762" cy="2475.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="1771" y="2479.0386">SetValue(std::vector&lt;std::string&gt; option_value) : std::string</text><ellipse cx="1762" cy="2488.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1771" y="2491.8433">SetDefault() : void</text><!--MD5=[312548e8953d9a8be8e7376e3d9dc933]
class OptionInt--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="137.6328" id="OptionInt" style="stroke: #A80036; stroke-width: 1.5;" width="453" x="2540.5" y="2354"/><ellipse cx="2734.25" cy="2370" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2734.3594,2365.3438 L2733.2031,2370.4219 L2735.5313,2370.4219 L2734.3594,2365.3438 Z M2732.875,2363.1094 L2735.8594,2363.1094 L2739.2188,2375.5 L2736.7656,2375.5 L2736,2372.4375 L2732.7188,2372.4375 L2731.9688,2375.5 L2729.5313,2375.5 L2732.875,2363.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="57" x="2754.75" y="2374.1543">OptionInt</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2541.5" x2="2992.5" y1="2386" y2="2386"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2548.5" y="2394"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="2560.5" y="2400.2104">_def : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2548.5" y="2406.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="2560.5" y="2413.0151">_field : int&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2548.5" y="2419.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="2560.5" y="2425.8198">_name : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2541.5" x2="2992.5" y1="2432.4141" y2="2432.4141"/><ellipse cx="2551.5" cy="2443.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="2560.5" y="2446.6245">OptionInt(std::string option_field_name, int&amp; option_field, int default_value)</text><ellipse cx="2551.5" cy="2456.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2560.5" y="2459.4292">~OptionInt()</text><ellipse cx="2551.5" cy="2469.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="2560.5" y="2472.2339">SetValue(std::vector&lt;std::string&gt; option_value) : std::string</text><ellipse cx="2551.5" cy="2481.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="2560.5" y="2485.0386">SetDefault() : void</text><!--MD5=[5a6021cdd87015f95855dfa5482c4968]
class OptionLong--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="137.6328" id="OptionLong" style="stroke: #A80036; stroke-width: 1.5;" width="486" x="3029" y="2354"/><ellipse cx="3232.25" cy="2370" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3232.3594,2365.3438 L3231.2031,2370.4219 L3233.5313,2370.4219 L3232.3594,2365.3438 Z M3230.875,2363.1094 L3233.8594,2363.1094 L3237.2188,2375.5 L3234.7656,2375.5 L3234,2372.4375 L3230.7188,2372.4375 L3229.9688,2375.5 L3227.5313,2375.5 L3230.875,2363.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="3252.75" y="2374.1543">OptionLong</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3030" x2="3514" y1="2386" y2="2386"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3037" y="2394"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="3049" y="2400.2104">_def : long</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3037" y="2406.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="3049" y="2413.0151">_field : long&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3037" y="2419.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3049" y="2425.8198">_name : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3030" x2="3514" y1="2432.4141" y2="2432.4141"/><ellipse cx="3040" cy="2443.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="460" x="3049" y="2446.6245">OptionLong(std::string option_field_name, long&amp; option_field, long default_value)</text><ellipse cx="3040" cy="2456.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="3049" y="2459.4292">~OptionLong()</text><ellipse cx="3040" cy="2469.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="3049" y="2472.2339">SetValue(std::vector&lt;std::string&gt; option_value) : std::string</text><ellipse cx="3040" cy="2481.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="3049" y="2485.0386">SetDefault() : void</text><!--MD5=[bf56439615fff4baebef5224d94f191f]
class OptionString--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="137.6328" id="OptionString" style="stroke: #A80036; stroke-width: 1.5;" width="563" x="3550.5" y="2354"/><ellipse cx="3789.25" cy="2370" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3789.3594,2365.3438 L3788.2031,2370.4219 L3790.5313,2370.4219 L3789.3594,2365.3438 Z M3787.875,2363.1094 L3790.8594,2363.1094 L3794.2188,2375.5 L3791.7656,2375.5 L3791,2372.4375 L3787.7188,2372.4375 L3786.9688,2375.5 L3784.5313,2375.5 L3787.875,2363.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="3809.75" y="2374.1543">OptionString</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3551.5" x2="4112.5" y1="2386" y2="2386"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3558.5" y="2394"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3570.5" y="2400.2104">_def : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3558.5" y="2406.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3570.5" y="2413.0151">_name : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3558.5" y="2419.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="3570.5" y="2425.8198">_field : std::string&amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3551.5" x2="4112.5" y1="2432.4141" y2="2432.4141"/><ellipse cx="3561.5" cy="2443.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="537" x="3570.5" y="2446.6245">OptionString(std::string option_field_name, std::string&amp; option_field, std::string default_value)</text><ellipse cx="3561.5" cy="2456.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="3570.5" y="2459.4292">~OptionString()</text><ellipse cx="3561.5" cy="2469.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="3570.5" y="2472.2339">SetValue(std::vector&lt;std::string&gt; option_value) : std::string</text><ellipse cx="3561.5" cy="2481.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="3570.5" y="2485.0386">SetDefault() : void</text><!--MD5=[38769d96d097cc3e9dcdba9c5b2e9fed]
class OptionStringList--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="137.6328" id="OptionStringList" style="stroke: #A80036; stroke-width: 1.5;" width="669" x="4148.5" y="2354"/><ellipse cx="4429.75" cy="2370" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4429.8594,2365.3438 L4428.7031,2370.4219 L4431.0313,2370.4219 L4429.8594,2365.3438 Z M4428.375,2363.1094 L4431.3594,2363.1094 L4434.7188,2375.5 L4432.2656,2375.5 L4431.5,2372.4375 L4428.2188,2372.4375 L4427.4688,2375.5 L4425.0313,2375.5 L4428.375,2363.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="98" x="4450.25" y="2374.1543">OptionStringList</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4149.5" x2="4816.5" y1="2386" y2="2386"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4156.5" y="2394"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4168.5" y="2400.2104">_name : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4156.5" y="2406.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="4168.5" y="2413.0151">_field : std::vector&lt;std::string&gt;&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4156.5" y="2419.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="4168.5" y="2425.8198">_size : unsigned short&amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4149.5" x2="4816.5" y1="2432.4141" y2="2432.4141"/><ellipse cx="4159.5" cy="2443.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="643" x="4168.5" y="2446.6245">OptionStringList(std::string option_field_name, unsigned short&amp; list_size, std::vector&lt;std::string&gt;&amp; option_field)</text><ellipse cx="4159.5" cy="2456.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="4168.5" y="2459.4292">~OptionStringList()</text><ellipse cx="4159.5" cy="2469.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="4168.5" y="2472.2339">SetValue(std::vector&lt;std::string&gt; option_value) : std::string</text><ellipse cx="4159.5" cy="2481.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4168.5" y="2485.0386">SetDefault() : void</text><!--MD5=[1768df87b6b1b7f59e02793f187f93bb]
class OptionULong--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="137.6328" id="OptionULong" style="stroke: #A80036; stroke-width: 1.5;" width="606" x="4853" y="2354"/><ellipse cx="5111.75" cy="2370" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5111.8594,2365.3438 L5110.7031,2370.4219 L5113.0313,2370.4219 L5111.8594,2365.3438 Z M5110.375,2363.1094 L5113.3594,2363.1094 L5116.7188,2375.5 L5114.2656,2375.5 L5113.5,2372.4375 L5110.2188,2372.4375 L5109.4688,2375.5 L5107.0313,2375.5 L5110.375,2363.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="80" x="5132.25" y="2374.1543">OptionULong</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4854" x2="5458" y1="2386" y2="2386"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4861" y="2394"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4873" y="2400.2104">_name : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4861" y="2406.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="4873" y="2413.0151">_def : unsigned long</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4861" y="2419.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="4873" y="2425.8198">_field : unsigned long&amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4854" x2="5458" y1="2432.4141" y2="2432.4141"/><ellipse cx="4864" cy="2443.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="580" x="4873" y="2446.6245">OptionULong(std::string option_field_name, unsigned long&amp; option_field, unsigned long default_value)</text><ellipse cx="4864" cy="2456.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="4873" y="2459.4292">~OptionULong()</text><ellipse cx="4864" cy="2469.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="4873" y="2472.2339">SetValue(std::vector&lt;std::string&gt; option_value) : std::string</text><ellipse cx="4864" cy="2481.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4873" y="2485.0386">SetDefault() : void</text><!--MD5=[028d686bb00a69dc66bb7319bc812d88]
class PNSolver--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="560.1875" id="PNSolver" style="stroke: #A80036; stroke-width: 1.5;" width="237" x="8127.5" y="500"/><ellipse cx="8214.25" cy="516" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8217.2188,521.6406 Q8216.6406,521.9375 8216,522.0781 Q8215.3594,522.2344 8214.6563,522.2344 Q8212.1563,522.2344 8210.8281,520.5938 Q8209.5156,518.9375 8209.5156,515.8125 Q8209.5156,512.6875 8210.8281,511.0313 Q8212.1563,509.375 8214.6563,509.375 Q8215.3594,509.375 8216,509.5313 Q8216.6563,509.6875 8217.2188,509.9844 L8217.2188,512.7031 Q8216.5938,512.125 8216,511.8594 Q8215.4063,511.5781 8214.7813,511.5781 Q8213.4375,511.5781 8212.75,512.6563 Q8212.0625,513.7188 8212.0625,515.8125 Q8212.0625,517.9063 8212.75,518.9844 Q8213.4375,520.0469 8214.7813,520.0469 Q8215.4063,520.0469 8216,519.7813 Q8216.5938,519.5 8217.2188,518.9219 L8217.2188,521.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="8234.75" y="520.1543">PNSolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8128.5" x2="8363.5" y1="532" y2="532"/><polygon fill="none" points="8138.5,538,8142.5,542,8138.5,546,8134.5,542" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="8147.5" y="546.2104">_AxAbs : Matrix</text><polygon fill="none" points="8138.5,550.8047,8142.5,554.8047,8138.5,558.8047,8134.5,554.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="8147.5" y="559.0151">_AxMinus : Matrix</text><polygon fill="none" points="8138.5,563.6094,8142.5,567.6094,8138.5,571.6094,8134.5,567.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="8147.5" y="571.8198">_AxPlus : Matrix</text><polygon fill="none" points="8138.5,576.4141,8142.5,580.4141,8138.5,584.4141,8134.5,580.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="8147.5" y="584.6245">_AyAbs : Matrix</text><polygon fill="none" points="8138.5,589.2188,8142.5,593.2188,8138.5,597.2188,8134.5,593.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="8147.5" y="597.4292">_AyMinus : Matrix</text><polygon fill="none" points="8138.5,602.0234,8142.5,606.0234,8138.5,610.0234,8134.5,606.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="8147.5" y="610.2339">_AyPlus : Matrix</text><polygon fill="none" points="8138.5,614.8281,8142.5,618.8281,8138.5,622.8281,8134.5,618.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="8147.5" y="623.0386">_AzAbs : Matrix</text><polygon fill="none" points="8138.5,627.6328,8142.5,631.6328,8138.5,635.6328,8134.5,631.6328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="8147.5" y="635.8433">_AzMinus : Matrix</text><polygon fill="none" points="8138.5,640.4375,8142.5,644.4375,8138.5,648.4375,8134.5,644.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="8147.5" y="648.6479">_AzPlus : Matrix</text><polygon fill="none" points="8138.5,653.2422,8142.5,657.2422,8138.5,661.2422,8134.5,657.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="8147.5" y="661.4526">_Ax : SymMatrix</text><polygon fill="none" points="8138.5,666.0469,8142.5,670.0469,8138.5,674.0469,8134.5,670.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="8147.5" y="674.2573">_Ay : SymMatrix</text><polygon fill="none" points="8138.5,678.8516,8142.5,682.8516,8138.5,686.8516,8134.5,682.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="8147.5" y="687.062">_Az : SymMatrix</text><polygon fill="none" points="8138.5,691.6563,8142.5,695.6563,8138.5,699.6563,8134.5,695.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="8147.5" y="699.8667">_scatterMatDiag : Vector</text><polygon fill="none" points="8138.5,704.4609,8142.5,708.4609,8138.5,712.4609,8134.5,708.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="8147.5" y="712.6714">_sigmaA : VectorVector</text><polygon fill="none" points="8138.5,717.2656,8142.5,721.2656,8138.5,725.2656,8134.5,721.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="8147.5" y="725.4761">_LMaxDegree : unsigned</text><polygon fill="none" points="8138.5,730.0703,8142.5,734.0703,8138.5,738.0703,8134.5,734.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="8147.5" y="738.2808">_nTotalEntries : unsigned</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8128.5" x2="8363.5" y1="744.875" y2="744.875"/><ellipse cx="8138.5" cy="755.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="8147.5" y="759.0854">PNSolver(Config* settings)</text><polygon fill="#FFFF44" points="8138.5,763.6797,8142.5,767.6797,8138.5,771.6797,8134.5,767.6797" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="8147.5" y="771.8901">CheckIndex(int l, int k) : bool {query}</text><polygon fill="#FFFF44" points="8138.5,776.4844,8142.5,780.4844,8138.5,784.4844,8134.5,780.4844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="8147.5" y="784.6948">AParam(int l, int k) : double {query}</text><polygon fill="#FFFF44" points="8138.5,789.2891,8142.5,793.2891,8138.5,797.2891,8134.5,793.2891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="8147.5" y="797.4995">BParam(int l, int k) : double {query}</text><polygon fill="#FFFF44" points="8138.5,802.0938,8142.5,806.0938,8138.5,810.0938,8134.5,806.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="8147.5" y="810.3042">CParam(int l, int k) : double {query}</text><polygon fill="#FFFF44" points="8138.5,814.8984,8142.5,818.8984,8138.5,822.8984,8134.5,818.8984" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="8147.5" y="823.1089">CTilde(int l, int k) : double {query}</text><polygon fill="#FFFF44" points="8138.5,827.7031,8142.5,831.7031,8138.5,835.7031,8134.5,831.7031" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="8147.5" y="835.9136">DParam(int l, int k) : double {query}</text><polygon fill="#FFFF44" points="8138.5,840.5078,8142.5,844.5078,8138.5,848.5078,8134.5,844.5078" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="8147.5" y="848.7183">DTilde(int l, int k) : double {query}</text><polygon fill="#FFFF44" points="8138.5,853.3125,8142.5,857.3125,8138.5,861.3125,8134.5,857.3125" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="8147.5" y="861.5229">EParam(int l, int k) : double {query}</text><polygon fill="#FFFF44" points="8138.5,866.1172,8142.5,870.1172,8138.5,874.1172,8134.5,870.1172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="8147.5" y="874.3276">ETilde(int l, int k) : double {query}</text><polygon fill="#FFFF44" points="8138.5,878.9219,8142.5,882.9219,8138.5,886.9219,8134.5,882.9219" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="8147.5" y="887.1323">FParam(int l, int k) : double {query}</text><polygon fill="#FFFF44" points="8138.5,891.7266,8142.5,895.7266,8138.5,899.7266,8134.5,895.7266" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="8147.5" y="899.937">FTilde(int l, int k) : double {query}</text><polygon fill="#FFFF44" points="8138.5,904.5313,8142.5,908.5313,8138.5,912.5313,8134.5,908.5313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="8147.5" y="912.7417">LegendrePoly(double x, int l) : double</text><polygon fill="#FFFF44" points="8138.5,917.3359,8142.5,921.3359,8138.5,925.3359,8134.5,921.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="8147.5" y="925.5464">GlobalIndex(int l, int k) : int {query}</text><polygon fill="#FFFF44" points="8138.5,930.1406,8142.5,934.1406,8138.5,938.1406,8134.5,934.1406" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="8147.5" y="938.3511">Sgn(int k) : int {query}</text><polygon fill="#FFFF44" points="8138.5,942.9453,8142.5,946.9453,8138.5,950.9453,8134.5,946.9453" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="8147.5" y="951.1558">kMinus(int k) : int {query}</text><polygon fill="#FFFF44" points="8138.5,955.75,8142.5,959.75,8138.5,963.75,8134.5,959.75" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="8147.5" y="963.9604">kPlus(int k) : int {query}</text><polygon fill="#FFFF44" points="8138.5,968.5547,8142.5,972.5547,8138.5,976.5547,8134.5,972.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="8147.5" y="976.7651">CleanFluxMatrices() : void</text><polygon fill="#FFFF44" points="8138.5,981.3594,8142.5,985.3594,8138.5,989.3594,8134.5,985.3594" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="8147.5" y="989.5698">ComputeFluxComponents() : void</text><polygon fill="#FFFF44" points="8138.5,994.1641,8142.5,998.1641,8138.5,1002.1641,8134.5,998.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="8147.5" y="1002.3745">ComputeScatterMatrix() : void</text><polygon fill="#FFFF44" points="8138.5,1006.9688,8142.5,1010.9688,8138.5,1014.9688,8134.5,1010.9688" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="8147.5" y="1015.1792">ComputeSystemMatrices() : void</text><ellipse cx="8138.5" cy="1024.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="8147.5" y="1027.9839">Save() : void {query}</text><ellipse cx="8138.5" cy="1037.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="8147.5" y="1040.7886">Save(int currEnergy) : void {query}</text><ellipse cx="8138.5" cy="1050.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="8147.5" y="1053.5933">Solve() : void</text><!--MD5=[b78e42fe1f33f5c4bf0e37a39b0075a9]
class Physics--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="214.4609" id="Physics" style="stroke: #A80036; stroke-width: 1.5;" width="605" x="6957.5" y="1472.5"/><ellipse cx="7232.75" cy="1488.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7235.7188,1494.1406 Q7235.1406,1494.4375 7234.5,1494.5781 Q7233.8594,1494.7344 7233.1563,1494.7344 Q7230.6563,1494.7344 7229.3281,1493.0938 Q7228.0156,1491.4375 7228.0156,1488.3125 Q7228.0156,1485.1875 7229.3281,1483.5313 Q7230.6563,1481.875 7233.1563,1481.875 Q7233.8594,1481.875 7234.5,1482.0313 Q7235.1563,1482.1875 7235.7188,1482.4844 L7235.7188,1485.2031 Q7235.0938,1484.625 7234.5,1484.3594 Q7233.9063,1484.0781 7233.2813,1484.0781 Q7231.9375,1484.0781 7231.25,1485.1563 Q7230.5625,1486.2188 7230.5625,1488.3125 Q7230.5625,1490.4063 7231.25,1491.4844 Q7231.9375,1492.5469 7233.2813,1492.5469 Q7233.9063,1492.5469 7234.5,1492.2813 Q7235.0938,1492 7235.7188,1491.4219 L7235.7188,1494.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="46" x="7253.25" y="1492.6543">Physics</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6958.5" x2="7561.5" y1="1504.5" y2="1504.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6965.5" y="1512.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="6977.5" y="1518.7104">_stpowH2O : VectorVector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6965.5" y="1525.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="6977.5" y="1531.5151">_xsH2O : VectorVector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6965.5" y="1538.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6977.5" y="1544.3198">_xsTotalH2O : VectorVector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6965.5" y="1550.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="6977.5" y="1557.1245">_xsTransportH2O : VectorVector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6958.5" x2="7561.5" y1="1563.7188" y2="1563.7188"/><ellipse cx="6968.5" cy="1574.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="6977.5" y="1577.9292">Physics()</text><ellipse cx="6968.5" cy="1587.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="107" x="6977.5" y="1590.7339">Create() : Physics*</text><ellipse cx="6968.5" cy="1600.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="443" x="6977.5" y="1603.5386">GetScatteringXS(Vector energies, Vector density, Vector angle) : VectorVector</text><ellipse cx="6968.5" cy="1613.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="6977.5" y="1616.3433">GetStoppingPower(Vector energies, Vector density) : VectorVector</text><ellipse cx="6968.5" cy="1625.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="6977.5" y="1629.1479">GetTotalXS(Vector energies, Vector density) : VectorVector</text><ellipse cx="6968.5" cy="1638.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="6977.5" y="1641.9526">GetTransportXS(Vector energies, Vector density) : VectorVector</text><ellipse cx="6968.5" cy="1651.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325" x="6977.5" y="1654.7573">ReadStoppingPowers(std::string fileName) : VectorVector</text><ellipse cx="6968.5" cy="1664.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="579" x="6977.5" y="1667.562">ReadENDL(std::string filename) : std::tuple&lt;std::vector&lt;VectorVector&gt; , std::vector&lt;VectorVector&gt; &gt;</text><ellipse cx="6968.5" cy="1677.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="567" x="6977.5" y="1680.3667">LoadDatabase(std::string fileName_H, std::string fileName_O, std::string fileName_stppower) : void</text><!--MD5=[aeda3338894f4a84d351a17291d2f6fe]
class ProblemBase--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="240.0703" id="ProblemBase" style="stroke: #A80036; stroke-width: 1.5;" width="518" x="4008" y="660"/><ellipse cx="4222.75" cy="676" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4222.8594,671.3438 L4221.7031,676.4219 L4224.0313,676.4219 L4222.8594,671.3438 Z M4221.375,669.1094 L4224.3594,669.1094 L4227.7188,681.5 L4225.2656,681.5 L4224.5,678.4375 L4221.2188,678.4375 L4220.4688,681.5 L4218.0313,681.5 L4221.375,669.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="80" x="4243.25" y="680.1543">ProblemBase</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4009" x2="4525" y1="692" y2="692"/><polygon fill="none" points="4019,698,4023,702,4019,706,4015,702" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="4028" y="706.2104">_settings : Config*</text><polygon fill="none" points="4019,710.8047,4023,714.8047,4019,718.8047,4015,714.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="4028" y="719.0151">_mesh : Mesh*</text><polygon fill="none" points="4019,723.6094,4023,727.6094,4019,731.6094,4015,727.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4028" y="731.8198">_physics : Physics*</text><polygon fill="none" points="4019,736.4141,4023,740.4141,4019,744.4141,4015,740.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="4028" y="744.6245">_density : std::vector&lt;double&gt;</text><polygon fill="none" points="4019,749.2188,4023,753.2188,4019,757.2188,4015,753.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="4028" y="757.4292">_stoppingPower : std::vector&lt;double&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4009" x2="4525" y1="764.0234" y2="764.0234"/><ellipse cx="4019" cy="775.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="4028" y="778.2339">ProblemBase(Config* settings, Mesh* mesh)</text><polygon fill="#FFFF44" points="4019,782.8281,4023,786.8281,4019,790.8281,4015,786.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="4028" y="791.0386">ProblemBase()</text><ellipse cx="4019" cy="800.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="4028" y="803.8433">~ProblemBase()</text><ellipse cx="4019" cy="813.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="312" x="4028" y="816.6479">Create(Config* settings, Mesh* mesh) : ProblemBase*</text><ellipse cx="4019" cy="826.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="399" x="4028" y="829.4526">GetScatteringXS(const std::vector&lt;double&gt;&amp; energies) : VectorVector</text><ellipse cx="4019" cy="839.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="370" x="4028" y="842.2573">GetTotalXS(const std::vector&lt;double&gt;&amp; energies) : VectorVector</text><ellipse cx="4019" cy="851.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="137" x="4028" y="855.062">SetupIC() : VectorVector</text><ellipse cx="4019" cy="864.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="492" x="4028" y="867.8667">GetExternalSource(const std::vector&lt;double&gt;&amp; energies) : std::vector&lt;VectorVector&gt;</text><ellipse cx="4019" cy="877.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="4028" y="880.6714">GetDensity(const VectorVector&amp; cellMidPoints) : std::vector&lt;double&gt;</text><ellipse cx="4019" cy="890.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="454" x="4028" y="893.4761">GetStoppingPower(const std::vector&lt;double&gt;&amp; energies) : std::vector&lt;double&gt;</text><!--MD5=[296293fbdb23d0a6b21645666f72f612]
class QDummy--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="124.8281" id="QDummy" style="stroke: #A80036; stroke-width: 1.5;" width="188" x="5658" y="2131"/><ellipse cx="5720.75" cy="2147" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5723.7188,2152.6406 Q5723.1406,2152.9375 5722.5,2153.0781 Q5721.8594,2153.2344 5721.1563,2153.2344 Q5718.6563,2153.2344 5717.3281,2151.5938 Q5716.0156,2149.9375 5716.0156,2146.8125 Q5716.0156,2143.6875 5717.3281,2142.0313 Q5718.6563,2140.375 5721.1563,2140.375 Q5721.8594,2140.375 5722.5,2140.5313 Q5723.1563,2140.6875 5723.7188,2140.9844 L5723.7188,2143.7031 Q5723.0938,2143.125 5722.5,2142.8594 Q5721.9063,2142.5781 5721.2813,2142.5781 Q5719.9375,2142.5781 5719.25,2143.6563 Q5718.5625,2144.7188 5718.5625,2146.8125 Q5718.5625,2148.9063 5719.25,2149.9844 Q5719.9375,2151.0469 5721.2813,2151.0469 Q5721.9063,2151.0469 5722.5,2150.7813 Q5723.0938,2150.5 5723.7188,2149.9219 L5723.7188,2152.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="5741.25" y="2151.1543">QDummy</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5659" x2="5845" y1="2163" y2="2163"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5659" x2="5845" y1="2171" y2="2171"/><ellipse cx="5669" cy="2182" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="5678" y="2185.2104">QDummy(unsigned order)</text><ellipse cx="5669" cy="2194.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="5678" y="2198.0151">~QDummy()</text><ellipse cx="5669" cy="2207.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5678" y="2210.8198">SetConnectivity() : void</text><ellipse cx="5669" cy="2220.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="5678" y="2223.6245">SetName() : void</text><ellipse cx="5669" cy="2233.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="5678" y="2236.4292">SetNq() : void</text><ellipse cx="5669" cy="2246.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="5678" y="2249.2339">SetPointsAndWeights() : void</text><!--MD5=[03565d70be7b68281d5fd283d1b74ab3]
class QGaussLegendre1D--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="163.2422" id="QGaussLegendre1D" style="stroke: #A80036; stroke-width: 1.5;" width="472" x="5881" y="2112"/><ellipse cx="6050.75" cy="2128" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6053.7188,2133.6406 Q6053.1406,2133.9375 6052.5,2134.0781 Q6051.8594,2134.2344 6051.1563,2134.2344 Q6048.6563,2134.2344 6047.3281,2132.5938 Q6046.0156,2130.9375 6046.0156,2127.8125 Q6046.0156,2124.6875 6047.3281,2123.0313 Q6048.6563,2121.375 6051.1563,2121.375 Q6051.8594,2121.375 6052.5,2121.5313 Q6053.1563,2121.6875 6053.7188,2121.9844 L6053.7188,2124.7031 Q6053.0938,2124.125 6052.5,2123.8594 Q6051.9063,2123.5781 6051.2813,2123.5781 Q6049.9375,2123.5781 6049.25,2124.6563 Q6048.5625,2125.7188 6048.5625,2127.8125 Q6048.5625,2129.9063 6049.25,2130.9844 Q6049.9375,2132.0469 6051.2813,2132.0469 Q6051.9063,2132.0469 6052.5,2131.7813 Q6053.0938,2131.5 6053.7188,2130.9219 L6053.7188,2133.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="124" x="6071.25" y="2132.1543">QGaussLegendre1D</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5882" x2="6352" y1="2144" y2="2144"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5882" x2="6352" y1="2152" y2="2152"/><ellipse cx="5892" cy="2163" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="5901" y="2166.2104">QGaussLegendre1D(unsigned order)</text><ellipse cx="5892" cy="2175.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="5901" y="2179.0151">~QGaussLegendre1D()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5889" y="2185.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="5901" y="2191.8198">CheckOrder() : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5889" y="2198.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="5901" y="2204.6245">Pythag(const double a, const double b) : double</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5889" y="2211.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="446" x="5901" y="2217.4292">ComputeEigenValTriDiagMatrix(const Matrix&amp; mat) : std::pair&lt;Vector , Matrix&gt;</text><ellipse cx="5892" cy="2227.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="5901" y="2230.2339">SetConnectivity() : void</text><ellipse cx="5892" cy="2239.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="5901" y="2243.0386">SetName() : void</text><ellipse cx="5892" cy="2252.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="5901" y="2255.8433">SetNq() : void</text><ellipse cx="5892" cy="2265.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="5901" y="2268.6479">SetPointsAndWeights() : void</text><!--MD5=[43fb1c5f2053cc224ff05d9a3a1d1cbc]
class QGaussLegendreTensorized--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="163.2422" id="QGaussLegendreTensorized" style="stroke: #A80036; stroke-width: 1.5;" width="472" x="6388" y="2112"/><ellipse cx="6532.75" cy="2128" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6535.7188,2133.6406 Q6535.1406,2133.9375 6534.5,2134.0781 Q6533.8594,2134.2344 6533.1563,2134.2344 Q6530.6563,2134.2344 6529.3281,2132.5938 Q6528.0156,2130.9375 6528.0156,2127.8125 Q6528.0156,2124.6875 6529.3281,2123.0313 Q6530.6563,2121.375 6533.1563,2121.375 Q6533.8594,2121.375 6534.5,2121.5313 Q6535.1563,2121.6875 6535.7188,2121.9844 L6535.7188,2124.7031 Q6535.0938,2124.125 6534.5,2123.8594 Q6533.9063,2123.5781 6533.2813,2123.5781 Q6531.9375,2123.5781 6531.25,2124.6563 Q6530.5625,2125.7188 6530.5625,2127.8125 Q6530.5625,2129.9063 6531.25,2130.9844 Q6531.9375,2132.0469 6533.2813,2132.0469 Q6533.9063,2132.0469 6534.5,2131.7813 Q6535.0938,2131.5 6535.7188,2130.9219 L6535.7188,2133.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="174" x="6553.25" y="2132.1543">QGaussLegendreTensorized</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6389" x2="6859" y1="2144" y2="2144"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6389" x2="6859" y1="2152" y2="2152"/><ellipse cx="6399" cy="2163" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="6408" y="2166.2104">QGaussLegendreTensorized(unsigned order)</text><ellipse cx="6399" cy="2175.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="6408" y="2179.0151">~QGaussLegendreTensorized()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6396" y="2185.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="6408" y="2191.8198">CheckOrder() : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6396" y="2198.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="6408" y="2204.6245">Pythag(const double a, const double b) : double</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6396" y="2211.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="446" x="6408" y="2217.4292">ComputeEigenValTriDiagMatrix(const Matrix&amp; mat) : std::pair&lt;Vector , Matrix&gt;</text><ellipse cx="6399" cy="2227.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="6408" y="2230.2339">SetConnectivity() : void</text><ellipse cx="6399" cy="2239.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="6408" y="2243.0386">SetName() : void</text><ellipse cx="6399" cy="2252.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="6408" y="2255.8433">SetNq() : void</text><ellipse cx="6399" cy="2265.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="6408" y="2268.6479">SetPointsAndWeights() : void</text><!--MD5=[ac9a63b98acee02cdcc7ea962cb05a73]
class QLDFESA--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="124.8281" id="QLDFESA" style="stroke: #A80036; stroke-width: 1.5;" width="196" x="6722" y="2360.5"/><ellipse cx="6788.25" cy="2376.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6791.2188,2382.1406 Q6790.6406,2382.4375 6790,2382.5781 Q6789.3594,2382.7344 6788.6563,2382.7344 Q6786.1563,2382.7344 6784.8281,2381.0938 Q6783.5156,2379.4375 6783.5156,2376.3125 Q6783.5156,2373.1875 6784.8281,2371.5313 Q6786.1563,2369.875 6788.6563,2369.875 Q6789.3594,2369.875 6790,2370.0313 Q6790.6563,2370.1875 6791.2188,2370.4844 L6791.2188,2373.2031 Q6790.5938,2372.625 6790,2372.3594 Q6789.4063,2372.0781 6788.7813,2372.0781 Q6787.4375,2372.0781 6786.75,2373.1563 Q6786.0625,2374.2188 6786.0625,2376.3125 Q6786.0625,2378.4063 6786.75,2379.4844 Q6787.4375,2380.5469 6788.7813,2380.5469 Q6789.4063,2380.5469 6790,2380.2813 Q6790.5938,2380 6791.2188,2379.4219 L6791.2188,2382.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="6808.75" y="2380.6543">QLDFESA</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6723" x2="6917" y1="2392.5" y2="2392.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6723" x2="6917" y1="2400.5" y2="2400.5"/><ellipse cx="6733" cy="2411.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="6742" y="2414.7104">QLDFESA(unsigned order)</text><ellipse cx="6733" cy="2424.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="6742" y="2427.5151">~QLDFESA()</text><ellipse cx="6733" cy="2437.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="6742" y="2440.3198">GetLookupTable() : std::string</text><ellipse cx="6733" cy="2449.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="6742" y="2453.1245">SetAvailOrders() : void</text><ellipse cx="6733" cy="2462.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="6742" y="2465.9292">SetConnectivity() : void</text><ellipse cx="6733" cy="2475.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="6742" y="2478.7339">SetName() : void</text><!--MD5=[dc3edd32582cc9c24358ef5ad5d35bc3]
class QLebedev--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="124.8281" id="QLebedev" style="stroke: #A80036; stroke-width: 1.5;" width="196" x="6953" y="2360.5"/><ellipse cx="7016.25" cy="2376.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7019.2188,2382.1406 Q7018.6406,2382.4375 7018,2382.5781 Q7017.3594,2382.7344 7016.6563,2382.7344 Q7014.1563,2382.7344 7012.8281,2381.0938 Q7011.5156,2379.4375 7011.5156,2376.3125 Q7011.5156,2373.1875 7012.8281,2371.5313 Q7014.1563,2369.875 7016.6563,2369.875 Q7017.3594,2369.875 7018,2370.0313 Q7018.6563,2370.1875 7019.2188,2370.4844 L7019.2188,2373.2031 Q7018.5938,2372.625 7018,2372.3594 Q7017.4063,2372.0781 7016.7813,2372.0781 Q7015.4375,2372.0781 7014.75,2373.1563 Q7014.0625,2374.2188 7014.0625,2376.3125 Q7014.0625,2378.4063 7014.75,2379.4844 Q7015.4375,2380.5469 7016.7813,2380.5469 Q7017.4063,2380.5469 7018,2380.2813 Q7018.5938,2380 7019.2188,2379.4219 L7019.2188,2382.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="7036.75" y="2380.6543">QLebedev</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6954" x2="7148" y1="2392.5" y2="2392.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6954" x2="7148" y1="2400.5" y2="2400.5"/><ellipse cx="6964" cy="2411.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="6973" y="2414.7104">QLebedev(unsigned order)</text><ellipse cx="6964" cy="2424.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="6973" y="2427.5151">~QLebedev()</text><ellipse cx="6964" cy="2437.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="6973" y="2440.3198">GetLookupTable() : std::string</text><ellipse cx="6964" cy="2449.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="6973" y="2453.1245">SetAvailOrders() : void</text><ellipse cx="6964" cy="2462.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="6973" y="2465.9292">SetConnectivity() : void</text><ellipse cx="6964" cy="2475.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="6973" y="2478.7339">SetName() : void</text><!--MD5=[32917a1120b013c593a0f5a6a5c75a15]
class QLevelSymmetric--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="124.8281" id="QLevelSymmetric" style="stroke: #A80036; stroke-width: 1.5;" width="220" x="7184" y="2360.5"/><ellipse cx="7237.75" cy="2376.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7240.7188,2382.1406 Q7240.1406,2382.4375 7239.5,2382.5781 Q7238.8594,2382.7344 7238.1563,2382.7344 Q7235.6563,2382.7344 7234.3281,2381.0938 Q7233.0156,2379.4375 7233.0156,2376.3125 Q7233.0156,2373.1875 7234.3281,2371.5313 Q7235.6563,2369.875 7238.1563,2369.875 Q7238.8594,2369.875 7239.5,2370.0313 Q7240.1563,2370.1875 7240.7188,2370.4844 L7240.7188,2373.2031 Q7240.0938,2372.625 7239.5,2372.3594 Q7238.9063,2372.0781 7238.2813,2372.0781 Q7236.9375,2372.0781 7236.25,2373.1563 Q7235.5625,2374.2188 7235.5625,2376.3125 Q7235.5625,2378.4063 7236.25,2379.4844 Q7236.9375,2380.5469 7238.2813,2380.5469 Q7238.9063,2380.5469 7239.5,2380.2813 Q7240.0938,2380 7240.7188,2379.4219 L7240.7188,2382.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="7258.25" y="2380.6543">QLevelSymmetric</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7185" x2="7403" y1="2392.5" y2="2392.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7185" x2="7403" y1="2400.5" y2="2400.5"/><ellipse cx="7195" cy="2411.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="7204" y="2414.7104">QLevelSymmetric(unsigned order)</text><ellipse cx="7195" cy="2424.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="7204" y="2427.5151">~QLevelSymmetric()</text><ellipse cx="7195" cy="2437.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="7204" y="2440.3198">GetLookupTable() : std::string</text><ellipse cx="7195" cy="2449.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="7204" y="2453.1245">SetAvailOrders() : void</text><ellipse cx="7195" cy="2462.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="7204" y="2465.9292">SetConnectivity() : void</text><ellipse cx="7195" cy="2475.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="7204" y="2478.7339">SetName() : void</text><!--MD5=[da3a73dd60c7a6cd3bfc963f796656da]
class QLookupQuadrature--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="188.8516" id="QLookupQuadrature" style="stroke: #A80036; stroke-width: 1.5;" width="311" x="6895.5" y="2099"/><ellipse cx="6984.25" cy="2115" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6984.3594,2110.3438 L6983.2031,2115.4219 L6985.5313,2115.4219 L6984.3594,2110.3438 Z M6982.875,2108.1094 L6985.8594,2108.1094 L6989.2188,2120.5 L6986.7656,2120.5 L6986,2117.4375 L6982.7188,2117.4375 L6981.9688,2120.5 L6979.5313,2120.5 L6982.875,2108.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="125" x="7004.75" y="2119.1543">QLookupQuadrature</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6896.5" x2="7205.5" y1="2131" y2="2131"/><polygon fill="none" points="6906.5,2137,6910.5,2141,6906.5,2145,6902.5,2141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="6915.5" y="2145.2104">_availableOrders : std::vector&lt;unsigned&gt;</text><polygon fill="none" points="6906.5,2149.8047,6910.5,2153.8047,6906.5,2157.8047,6902.5,2153.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="6915.5" y="2158.0151">_nqByOrder : std::vector&lt;unsigned&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6896.5" x2="7205.5" y1="2164.6094" y2="2164.6094"/><ellipse cx="6906.5" cy="2175.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="6915.5" y="2178.8198">QLookupQuadrature(unsigned order)</text><ellipse cx="6906.5" cy="2188.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="6915.5" y="2191.6245">~QLookupQuadrature()</text><polygon fill="#FFFF44" points="6906.5,2196.2188,6910.5,2200.2188,6906.5,2204.2188,6902.5,2200.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="6915.5" y="2204.4292">CheckOrder() : bool</text><polygon fill="#FFFF44" points="6906.5,2209.0234,6910.5,2213.0234,6906.5,2217.0234,6902.5,2213.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="168" x="6915.5" y="2217.2339">GetLookupTable() : std::string</text><ellipse cx="6906.5" cy="2226.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="6915.5" y="2230.0386">getAvailOrders() : std::vector&lt;unsigned&gt; {query}</text><polygon fill="#FFFF44" points="6906.5,2234.6328,6910.5,2238.6328,6906.5,2242.6328,6902.5,2238.6328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="129" x="6915.5" y="2242.8433">SetAvailOrders() : void</text><polygon fill="#FFFF44" points="6906.5,2247.4375,6910.5,2251.4375,6906.5,2255.4375,6902.5,2251.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="6915.5" y="2255.6479">SetNq() : void</text><polygon fill="#FFFF44" points="6906.5,2260.2422,6910.5,2264.2422,6906.5,2268.2422,6902.5,2264.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="6915.5" y="2268.4526">SetPointsAndWeights() : void</text><ellipse cx="6906.5" cy="2278.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="6915.5" y="2281.2573">printAvailOrders() : void {query}</text><!--MD5=[7cd9cfd355b807b7d67babb7c40cfbb5]
class QMonteCarlo--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="124.8281" id="QMonteCarlo" style="stroke: #A80036; stroke-width: 1.5;" width="194" x="7242" y="2131"/><ellipse cx="7294.75" cy="2147" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7297.7188,2152.6406 Q7297.1406,2152.9375 7296.5,2153.0781 Q7295.8594,2153.2344 7295.1563,2153.2344 Q7292.6563,2153.2344 7291.3281,2151.5938 Q7290.0156,2149.9375 7290.0156,2146.8125 Q7290.0156,2143.6875 7291.3281,2142.0313 Q7292.6563,2140.375 7295.1563,2140.375 Q7295.8594,2140.375 7296.5,2140.5313 Q7297.1563,2140.6875 7297.7188,2140.9844 L7297.7188,2143.7031 Q7297.0938,2143.125 7296.5,2142.8594 Q7295.9063,2142.5781 7295.2813,2142.5781 Q7293.9375,2142.5781 7293.25,2143.6563 Q7292.5625,2144.7188 7292.5625,2146.8125 Q7292.5625,2148.9063 7293.25,2149.9844 Q7293.9375,2151.0469 7295.2813,2151.0469 Q7295.9063,2151.0469 7296.5,2150.7813 Q7297.0938,2150.5 7297.7188,2149.9219 L7297.7188,2152.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="7315.25" y="2151.1543">QMonteCarlo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7243" x2="7435" y1="2163" y2="2163"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7243" x2="7435" y1="2171" y2="2171"/><ellipse cx="7253" cy="2182" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="7262" y="2185.2104">QMonteCarlo(unsigned order)</text><ellipse cx="7253" cy="2194.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="7262" y="2198.0151">~QMonteCarlo()</text><ellipse cx="7253" cy="2207.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="7262" y="2210.8198">SetConnectivity() : void</text><ellipse cx="7253" cy="2220.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="7262" y="2223.6245">SetName() : void</text><ellipse cx="7253" cy="2233.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="7262" y="2236.4292">SetNq() : void</text><ellipse cx="7253" cy="2246.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="7262" y="2249.2339">SetPointsAndWeights() : void</text><!--MD5=[0703d2d8d2d3d1a8b8965fa3fe3c728c]
class QuadratureBase--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="380.9219" id="QuadratureBase" style="stroke: #A80036; stroke-width: 1.5;" width="597" x="6325.5" y="1389"/><ellipse cx="6569.25" cy="1405" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6569.3594,1400.3438 L6568.2031,1405.4219 L6570.5313,1405.4219 L6569.3594,1400.3438 Z M6567.875,1398.1094 L6570.8594,1398.1094 L6574.2188,1410.5 L6571.7656,1410.5 L6571,1407.4375 L6567.7188,1407.4375 L6566.9688,1410.5 L6564.5313,1410.5 L6567.875,1398.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="6589.75" y="1409.1543">QuadratureBase</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6326.5" x2="6921.5" y1="1421" y2="1421"/><polygon fill="none" points="6336.5,1427,6340.5,1431,6336.5,1435,6332.5,1431" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="6345.5" y="1435.2104">_weights : Vector</text><polygon fill="none" points="6336.5,1439.8047,6340.5,1443.8047,6336.5,1447.8047,6332.5,1443.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="6345.5" y="1448.0151">_points : VectorVector</text><polygon fill="none" points="6336.5,1452.6094,6340.5,1456.6094,6336.5,1460.6094,6332.5,1456.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="6345.5" y="1460.8198">_connectivity : VectorVectorU</text><polygon fill="none" points="6336.5,1465.4141,6340.5,1469.4141,6336.5,1473.4141,6332.5,1469.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="6345.5" y="1473.6245">_name : std::string</text><polygon fill="none" points="6336.5,1478.2188,6340.5,1482.2188,6336.5,1486.2188,6332.5,1482.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="6345.5" y="1486.4292">_nq : unsigned</text><polygon fill="none" points="6336.5,1491.0234,6340.5,1495.0234,6336.5,1499.0234,6332.5,1495.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="6345.5" y="1499.2339">_order : unsigned</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6326.5" x2="6921.5" y1="1505.8281" y2="1505.8281"/><ellipse cx="6336.5" cy="1516.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="6345.5" y="1520.0386">QuadratureBase(unsigned order)</text><ellipse cx="6336.5" cy="1529.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="6345.5" y="1532.8433">~QuadratureBase()</text><ellipse cx="6336.5" cy="1542.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="423" x="6345.5" y="1545.6479">CreateQuadrature(QUAD_NAME name, unsigned order) : QuadratureBase*</text><ellipse cx="6336.5" cy="1555.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="6345.5" y="1558.4526">GetWeights() : Vector {query}</text><ellipse cx="6336.5" cy="1568.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="6345.5" y="1571.2573">GetPoints() : VectorVector {query}</text><ellipse cx="6336.5" cy="1580.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="6345.5" y="1584.062">GetConnectivity() : VectorVectorU {query}</text><ellipse cx="6336.5" cy="1593.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="328" x="6345.5" y="1596.8667">Integrate(double(f)(doublex0,doublex1,doublex2)) : double</text><ellipse cx="6336.5" cy="1606.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="6345.5" y="1609.6714">SumUpWeights() : double</text><ellipse cx="6336.5" cy="1619.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="6345.5" y="1622.4761">GetName() : std::string {query}</text><ellipse cx="6336.5" cy="1632.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="571" x="6345.5" y="1635.2808">Integrate(std::vector&lt;double &gt;(f)(doublex0,doublex1,doublex2), unsigned len) : std::vector&lt;double&gt;</text><ellipse cx="6336.5" cy="1644.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="6345.5" y="1648.0854">GetNq() : unsigned {query}</text><ellipse cx="6336.5" cy="1657.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="6345.5" y="1660.8901">GetOrder() : unsigned {query}</text><ellipse cx="6336.5" cy="1670.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="6345.5" y="1673.6948">PrintPoints() : void</text><ellipse cx="6336.5" cy="1683.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="6345.5" y="1686.4995">PrintPointsAndWeights() : void</text><ellipse cx="6336.5" cy="1696.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="6345.5" y="1699.3042">PrintWeights() : void</text><polygon fill="#FFFF44" points="6336.5,1703.8984,6340.5,1707.8984,6336.5,1711.8984,6332.5,1707.8984" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="132" x="6345.5" y="1712.1089">SetConnectivity() : void</text><polygon fill="#FFFF44" points="6336.5,1716.7031,6340.5,1720.7031,6336.5,1724.7031,6332.5,1720.7031" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="95" x="6345.5" y="1724.9136">SetName() : void</text><polygon fill="#FFFF44" points="6336.5,1729.5078,6340.5,1733.5078,6336.5,1737.5078,6332.5,1733.5078" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="77" x="6345.5" y="1737.7183">SetNq() : void</text><polygon fill="#FFFF44" points="6336.5,1742.3125,6340.5,1746.3125,6336.5,1750.3125,6332.5,1746.3125" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="6345.5" y="1750.5229">SetOrder(unsigned order) : void</text><polygon fill="#FFFF44" points="6336.5,1755.1172,6340.5,1759.1172,6336.5,1763.1172,6332.5,1759.1172" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="163" x="6345.5" y="1763.3276">SetPointsAndWeights() : void</text><!--MD5=[168618c52cf8b01b81c881510cd68189]
class Reconstructor--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="73.6094" id="Reconstructor" style="stroke: #A80036; stroke-width: 1.5;" width="697" x="2002.5" y="187"/><ellipse cx="2302.25" cy="203" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2305.2188,208.6406 Q2304.6406,208.9375 2304,209.0781 Q2303.3594,209.2344 2302.6563,209.2344 Q2300.1563,209.2344 2298.8281,207.5938 Q2297.5156,205.9375 2297.5156,202.8125 Q2297.5156,199.6875 2298.8281,198.0313 Q2300.1563,196.375 2302.6563,196.375 Q2303.3594,196.375 2304,196.5313 Q2304.6563,196.6875 2305.2188,196.9844 L2305.2188,199.7031 Q2304.5938,199.125 2304,198.8594 Q2303.4063,198.5781 2302.7813,198.5781 Q2301.4375,198.5781 2300.75,199.6563 Q2300.0625,200.7188 2300.0625,202.8125 Q2300.0625,204.9063 2300.75,205.9844 Q2301.4375,207.0469 2302.7813,207.0469 Q2303.4063,207.0469 2304,206.7813 Q2304.5938,206.5 2305.2188,205.9219 L2305.2188,208.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="2322.75" y="207.1543">Reconstructor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2003.5" x2="2698.5" y1="219" y2="219"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2003.5" x2="2698.5" y1="227" y2="227"/><ellipse cx="2013.5" cy="238" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2022.5" y="241.2104">Reconstructor(Config* settings)</text><ellipse cx="2013.5" cy="250.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="671" x="2022.5" y="254.0151">ReconstructSlopeStruct(double uL, double uC, double uR, double dxL, double dxR, std::string limiter) : double {query}</text><!--MD5=[0b503fe5c24e14c3c70681465d2d6a28]
class SNSolver--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="99.2188" id="SNSolver" style="stroke: #A80036; stroke-width: 1.5;" width="227" x="8399.5" y="730.5"/><ellipse cx="8481.25" cy="746.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8484.2188,752.1406 Q8483.6406,752.4375 8483,752.5781 Q8482.3594,752.7344 8481.6563,752.7344 Q8479.1563,752.7344 8477.8281,751.0938 Q8476.5156,749.4375 8476.5156,746.3125 Q8476.5156,743.1875 8477.8281,741.5313 Q8479.1563,739.875 8481.6563,739.875 Q8482.3594,739.875 8483,740.0313 Q8483.6563,740.1875 8484.2188,740.4844 L8484.2188,743.2031 Q8483.5938,742.625 8483,742.3594 Q8482.4063,742.0781 8481.7813,742.0781 Q8480.4375,742.0781 8479.75,743.1563 Q8479.0625,744.2188 8479.0625,746.3125 Q8479.0625,748.4063 8479.75,749.4844 Q8480.4375,750.5469 8481.7813,750.5469 Q8482.4063,750.5469 8483,750.2813 Q8483.5938,750 8484.2188,749.4219 L8484.2188,752.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="8501.75" y="750.6543">SNSolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8400.5" x2="8625.5" y1="762.5" y2="762.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8400.5" x2="8625.5" y1="770.5" y2="770.5"/><ellipse cx="8410.5" cy="781.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="8419.5" y="784.7104">SNSolver(Config* settings)</text><ellipse cx="8410.5" cy="794.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="8419.5" y="797.5151">Save() : void {query}</text><ellipse cx="8410.5" cy="807.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="8419.5" y="810.3198">Save(int currEnergy) : void {query}</text><ellipse cx="8410.5" cy="819.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="8419.5" y="823.1245">Solve() : void</text><!--MD5=[bb8b308f4b3fca4e9e4f2a7f2b74c7a7]
class SNSolverMPI--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="86.4141" id="SNSolverMPI" style="stroke: #A80036; stroke-width: 1.5;" width="197" x="8661.5" y="737"/><ellipse cx="8717.75" cy="753" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8720.7188,758.6406 Q8720.1406,758.9375 8719.5,759.0781 Q8718.8594,759.2344 8718.1563,759.2344 Q8715.6563,759.2344 8714.3281,757.5938 Q8713.0156,755.9375 8713.0156,752.8125 Q8713.0156,749.6875 8714.3281,748.0313 Q8715.6563,746.375 8718.1563,746.375 Q8718.8594,746.375 8719.5,746.5313 Q8720.1563,746.6875 8720.7188,746.9844 L8720.7188,749.7031 Q8720.0938,749.125 8719.5,748.8594 Q8718.9063,748.5781 8718.2813,748.5781 Q8716.9375,748.5781 8716.25,749.6563 Q8715.5625,750.7188 8715.5625,752.8125 Q8715.5625,754.9063 8716.25,755.9844 Q8716.9375,757.0469 8718.2813,757.0469 Q8718.9063,757.0469 8719.5,756.7813 Q8720.0938,756.5 8720.7188,755.9219 L8720.7188,758.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="8738.25" y="757.1543">SNSolverMPI</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8662.5" x2="8857.5" y1="769" y2="769"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8662.5" x2="8857.5" y1="777" y2="777"/><ellipse cx="8672.5" cy="788" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="8681.5" y="791.2104">SNSolverMPI(Config* settings)</text><ellipse cx="8672.5" cy="800.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="8681.5" y="804.0151">Save() : void {query}</text><ellipse cx="8672.5" cy="813.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="8681.5" y="816.8198">Solve() : void</text><!--MD5=[16f9774f924e6e8a5f8fdff2c2e63062]
class ScatteringKernel--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="124.8281" id="ScatteringKernel" style="stroke: #A80036; stroke-width: 1.5;" width="533" x="5922.5" y="717.5"/><ellipse cx="6132.25" cy="733.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6132.3594,728.8438 L6131.2031,733.9219 L6133.5313,733.9219 L6132.3594,728.8438 Z M6130.875,726.6094 L6133.8594,726.6094 L6137.2188,739 L6134.7656,739 L6134,735.9375 L6130.7188,735.9375 L6129.9688,739 L6127.5313,739 L6130.875,726.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="105" x="6152.75" y="737.6543">ScatteringKernel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5923.5" x2="6454.5" y1="749.5" y2="749.5"/><polygon fill="none" points="5933.5,755.5,5937.5,759.5,5933.5,763.5,5929.5,759.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="5942.5" y="763.7104">_quad : QuadratureBase*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5923.5" x2="6454.5" y1="770.3047" y2="770.3047"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5930.5" y="778.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="5942.5" y="784.5151">ScatteringKernel()</text><ellipse cx="5933.5" cy="794.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="5942.5" y="797.3198">ScatteringKernel(QuadratureBase* quad)</text><ellipse cx="5933.5" cy="806.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="5942.5" y="810.1245">~ScatteringKernel()</text><ellipse cx="5933.5" cy="819.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="168" x="5942.5" y="822.9292">GetScatteringKernel() : Matrix</text><ellipse cx="5933.5" cy="832.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="507" x="5942.5" y="835.7339">CreateScatteringKernel(KERNEL_NAME name, QuadratureBase* quad) : ScatteringKernel*</text><!--MD5=[7e0cc054e68485d8dbab588155cf841a]
class Solver--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="432.1406" id="Solver" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="6462.5" y="8"/><ellipse cx="6596.75" cy="24" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6596.8594,19.3438 L6595.7031,24.4219 L6598.0313,24.4219 L6596.8594,19.3438 Z M6595.375,17.1094 L6598.3594,17.1094 L6601.7188,29.5 L6599.2656,29.5 L6598.5,26.4375 L6595.2188,26.4375 L6594.4688,29.5 L6592.0313,29.5 L6595.375,17.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="38" x="6617.25" y="28.1543">Solver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6463.5" x2="6776.5" y1="40" y2="40"/><polygon fill="none" points="6473.5,46,6477.5,50,6473.5,54,6469.5,50" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="6482.5" y="54.2104">_settings : Config*</text><polygon fill="none" points="6473.5,58.8047,6477.5,62.8047,6473.5,66.8047,6469.5,62.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="6482.5" y="67.0151">_scatteringKernel : Matrix</text><polygon fill="none" points="6473.5,71.6094,6477.5,75.6094,6473.5,79.6094,6469.5,75.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="6482.5" y="79.8198">_mesh : Mesh*</text><polygon fill="none" points="6473.5,84.4141,6477.5,88.4141,6473.5,92.4141,6469.5,88.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="6482.5" y="92.6245">_g : NumericalFlux*</text><polygon fill="none" points="6473.5,97.2188,6477.5,101.2188,6473.5,105.2188,6469.5,101.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="6482.5" y="105.4292">_problem : ProblemBase*</text><polygon fill="none" points="6473.5,110.0234,6477.5,114.0234,6473.5,118.0234,6469.5,114.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="6482.5" y="118.2339">_weights : Vector</text><polygon fill="none" points="6473.5,122.8281,6477.5,126.8281,6473.5,130.8281,6469.5,126.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="6482.5" y="131.0386">_psi : VectorVector</text><polygon fill="none" points="6473.5,135.6328,6477.5,139.6328,6473.5,143.6328,6469.5,139.6328" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="6482.5" y="143.8433">_quadPoints : VectorVector</text><polygon fill="none" points="6473.5,148.4375,6477.5,152.4375,6473.5,156.4375,6469.5,152.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="6482.5" y="156.6479">_sigmaS : VectorVector</text><polygon fill="none" points="6473.5,161.2422,6477.5,165.2422,6473.5,169.2422,6469.5,165.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="6482.5" y="169.4526">_sigmaT : VectorVector</text><polygon fill="none" points="6473.5,174.0469,6477.5,178.0469,6473.5,182.0469,6469.5,178.0469" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="6482.5" y="182.2573">_dE : double</text><polygon fill="none" points="6473.5,186.8516,6477.5,190.8516,6473.5,194.8516,6469.5,190.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="6482.5" y="195.062">_boundaryCells : std::vector&lt;BOUNDARY_TYPE&gt;</text><polygon fill="none" points="6473.5,199.6563,6477.5,203.6563,6473.5,207.6563,6469.5,203.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="6482.5" y="207.8667">_Q : std::vector&lt;VectorVector&gt;</text><polygon fill="none" points="6473.5,212.4609,6477.5,216.4609,6473.5,220.4609,6469.5,216.4609" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="6482.5" y="220.6714">_areas : std::vector&lt;double&gt;</text><polygon fill="none" points="6473.5,225.2656,6477.5,229.2656,6473.5,233.2656,6469.5,229.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="6482.5" y="233.4761">_density : std::vector&lt;double&gt;</text><polygon fill="none" points="6473.5,238.0703,6477.5,242.0703,6473.5,246.0703,6469.5,242.0703" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="6482.5" y="246.2808">_energies : std::vector&lt;double&gt;</text><polygon fill="none" points="6473.5,250.875,6477.5,254.875,6473.5,258.875,6469.5,254.875" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="6482.5" y="259.0854">_s : std::vector&lt;double&gt;</text><polygon fill="none" points="6473.5,263.6797,6477.5,267.6797,6473.5,271.6797,6469.5,267.6797" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="6482.5" y="271.8901">_solverOutput : std::vector&lt;double&gt;</text><polygon fill="none" points="6473.5,276.4844,6477.5,280.4844,6473.5,284.4844,6469.5,280.4844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="6482.5" y="284.6948">_normals : std::vector&lt;std::vector&lt;Vector&gt; &gt;</text><polygon fill="none" points="6473.5,289.2891,6477.5,293.2891,6473.5,297.2891,6469.5,293.2891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="6482.5" y="297.4995">_neighbors : std::vector&lt;std::vector&lt;unsigned&gt; &gt;</text><polygon fill="none" points="6473.5,302.0938,6477.5,306.0938,6473.5,310.0938,6469.5,306.0938" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="6482.5" y="310.3042">_nCells : unsigned</text><polygon fill="none" points="6473.5,314.8984,6477.5,318.8984,6473.5,322.8984,6469.5,318.8984" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="6482.5" y="323.1089">_nEnergies : unsigned</text><polygon fill="none" points="6473.5,327.7031,6477.5,331.7031,6473.5,335.7031,6469.5,331.7031" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="6482.5" y="335.9136">_nq : unsigned</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6463.5" x2="6776.5" y1="342.5078" y2="342.5078"/><ellipse cx="6473.5" cy="353.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="6482.5" y="356.7183">Solver(Config* settings)</text><ellipse cx="6473.5" cy="366.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="6482.5" y="369.5229">~Solver()</text><ellipse cx="6473.5" cy="379.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="192" x="6482.5" y="382.3276">Create(Config* settings) : Solver*</text><polygon fill="#FFFF44" points="6473.5,386.9219,6477.5,390.9219,6473.5,394.9219,6469.5,390.9219" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="6482.5" y="395.1323">ComputeTimeStep(double cfl) : double {query}</text><ellipse cx="6473.5" cy="404.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="6482.5" y="407.937">Save() : void {query}</text><ellipse cx="6473.5" cy="417.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="204" x="6482.5" y="420.7417">Save(int currEnergy) : void {query}</text><ellipse cx="6473.5" cy="430.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="75" x="6482.5" y="433.5464">Solve() : void</text><!--MD5=[c003162fad8b6c8dcf5366b775e18093]
class SphericalHarmonics--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="214.4609" id="SphericalHarmonics" style="stroke: #A80036; stroke-width: 1.5;" width="458" x="7598" y="1472.5"/><ellipse cx="7760.75" cy="1488.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7763.7188,1494.1406 Q7763.1406,1494.4375 7762.5,1494.5781 Q7761.8594,1494.7344 7761.1563,1494.7344 Q7758.6563,1494.7344 7757.3281,1493.0938 Q7756.0156,1491.4375 7756.0156,1488.3125 Q7756.0156,1485.1875 7757.3281,1483.5313 Q7758.6563,1481.875 7761.1563,1481.875 Q7761.8594,1481.875 7762.5,1482.0313 Q7763.1563,1482.1875 7763.7188,1482.4844 L7763.7188,1485.2031 Q7763.0938,1484.625 7762.5,1484.3594 Q7761.9063,1484.0781 7761.2813,1484.0781 Q7759.9375,1484.0781 7759.25,1485.1563 Q7758.5625,1486.2188 7758.5625,1488.3125 Q7758.5625,1490.4063 7759.25,1491.4844 Q7759.9375,1492.5469 7761.2813,1492.5469 Q7761.9063,1492.5469 7762.5,1492.2813 Q7763.0938,1492 7763.7188,1491.4219 L7763.7188,1494.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="124" x="7781.25" y="1492.6543">SphericalHarmonics</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7599" x2="8055" y1="1504.5" y2="1504.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7606" y="1512.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="7618" y="1518.7104">_YBasis : std::vector&lt;double&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7606" y="1525.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="7618" y="1531.5151">_aParam : std::vector&lt;double&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7606" y="1538.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="7618" y="1544.3198">_assLegendreP : std::vector&lt;double&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7606" y="1550.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="7618" y="1557.1245">_bParam : std::vector&lt;double&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7606" y="1563.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="7618" y="1569.9292">_LMaxDegree : unsigned</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7599" x2="8055" y1="1576.5234" y2="1576.5234"/><ellipse cx="7609" cy="1587.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="7618" y="1590.7339">SphericalHarmonics(unsigned L_degree)</text><ellipse cx="7609" cy="1600.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="399" x="7618" y="1603.5386">ComputeSphericalBasis(double my, double phi) : std::vector&lt;double&gt;</text><ellipse cx="7609" cy="1613.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="432" x="7618" y="1616.3433">ComputeSphericalBasis(double x, double y, double z) : std::vector&lt;double&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7606" y="1622.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="7618" y="1629.1479">GlobalIdxAssLegendreP(unsigned l_degree, unsigned k_order) : unsigned</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7606" y="1635.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="368" x="7618" y="1641.9526">GlobalIdxBasis(unsigned l_degree, unsigned k_order) : unsigned</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7606" y="1648.5469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="7618" y="1654.7573">ComputeAssLegendrePoly(const double my) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7606" y="1661.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="7618" y="1667.562">ComputeCoefficients() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7606" y="1674.1563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="7618" y="1680.3667">ComputeYBasis(const double phi) : void</text><!--MD5=[a030d157fa00dd6dd61ccf2a05ea46ea]
class Spline--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="265.6797" id="Spline" style="stroke: #A80036; stroke-width: 1.5;" width="693" x="918.5" y="647"/><ellipse cx="1241.75" cy="663" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1244.7188,668.6406 Q1244.1406,668.9375 1243.5,669.0781 Q1242.8594,669.2344 1242.1563,669.2344 Q1239.6563,669.2344 1238.3281,667.5938 Q1237.0156,665.9375 1237.0156,662.8125 Q1237.0156,659.6875 1238.3281,658.0313 Q1239.6563,656.375 1242.1563,656.375 Q1242.8594,656.375 1243.5,656.5313 Q1244.1563,656.6875 1244.7188,656.9844 L1244.7188,659.7031 Q1244.0938,659.125 1243.5,658.8594 Q1242.9063,658.5781 1242.2813,658.5781 Q1240.9375,658.5781 1240.25,659.6563 Q1239.5625,660.7188 1239.5625,662.8125 Q1239.5625,664.9063 1240.25,665.9844 Q1240.9375,667.0469 1242.2813,667.0469 Q1242.9063,667.0469 1243.5,666.7813 Q1244.0938,666.5 1244.7188,665.9219 L1244.7188,668.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="1262.25" y="667.1543">Spline</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="919.5" x2="1610.5" y1="679" y2="679"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="926.5" y="687"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="938.5" y="693.2104">m_a : Vector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="926.5" y="699.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="938.5" y="706.0151">m_b : Vector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="926.5" y="712.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="938.5" y="718.8198">m_c : Vector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="926.5" y="725.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="938.5" y="731.6245">m_x : Vector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="926.5" y="738.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="938.5" y="744.4292">m_y : Vector</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="926.5" y="751.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="938.5" y="757.2339">m_left : bd_type</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="926.5" y="763.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="938.5" y="770.0386">m_right : bd_type</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="926.5" y="776.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="938.5" y="782.8433">m_force_linear_extrapolation : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="926.5" y="789.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="938.5" y="795.6479">m_b0 : double</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="926.5" y="802.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="938.5" y="808.4526">m_c0 : double</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="926.5" y="815.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="938.5" y="821.2573">m_left_value : double</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="926.5" y="827.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="938.5" y="834.062">m_right_value : double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="919.5" x2="1610.5" y1="840.6563" y2="840.6563"/><ellipse cx="929.5" cy="851.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="938.5" y="854.8667">Spline()</text><ellipse cx="929.5" cy="864.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213" x="938.5" y="867.6714">operator()(double x) : double {query}</text><ellipse cx="929.5" cy="877.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="667" x="938.5" y="880.4761">set_boundary(bd_type left, double left_value, bd_type right, double right_value, bool force_linear_extrapolation) : void</text><ellipse cx="929.5" cy="890.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="560" x="938.5" y="893.2808">set_points(const std::vector&lt;double&gt;&amp; x, const std::vector&lt;double&gt;&amp; y, bool cubic_Spline) : void</text><ellipse cx="929.5" cy="902.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="398" x="938.5" y="906.0854">set_points(const Vector&amp; x, const Vector&amp; y, bool cubic_Spline) : void</text><!--MD5=[5c1f2380e58c36d5ea81108e4a7509d5]
class UpwindFlux--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="99.2188" id="UpwindFlux" style="stroke: #A80036; stroke-width: 1.5;" width="1310" x="8656" y="1530"/><ellipse cx="9272.25" cy="1546" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M9275.2188,1551.6406 Q9274.6406,1551.9375 9274,1552.0781 Q9273.3594,1552.2344 9272.6563,1552.2344 Q9270.1563,1552.2344 9268.8281,1550.5938 Q9267.5156,1548.9375 9267.5156,1545.8125 Q9267.5156,1542.6875 9268.8281,1541.0313 Q9270.1563,1539.375 9272.6563,1539.375 Q9273.3594,1539.375 9274,1539.5313 Q9274.6563,1539.6875 9275.2188,1539.9844 L9275.2188,1542.7031 Q9274.5938,1542.125 9274,1541.8594 Q9273.4063,1541.5781 9272.7813,1541.5781 Q9271.4375,1541.5781 9270.75,1542.6563 Q9270.0625,1543.7188 9270.0625,1545.8125 Q9270.0625,1547.9063 9270.75,1548.9844 Q9271.4375,1550.0469 9272.7813,1550.0469 Q9273.4063,1550.0469 9274,1549.7813 Q9274.5938,1549.5 9275.2188,1548.9219 L9275.2188,1551.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="69" x="9292.75" y="1550.1543">UpwindFlux</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8657" x2="9965" y1="1562" y2="1562"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="8657" x2="9965" y1="1570" y2="1570"/><ellipse cx="8667" cy="1581" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="8676" y="1584.2104">UpwindFlux(Config* settings)</text><ellipse cx="8667" cy="1593.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1156" x="8676" y="1597.0151">Flux(const Matrix AxPlus, const Matrix AxMinus, const Matrix AyPlus, const Matrix AyMinus, const Matrix AzPlus, const Matrix AzMinus, const Vector psiL, const Vector psiR, const Vector n) : Vector {query}</text><ellipse cx="8667" cy="1606.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="503" x="8676" y="1609.8198">Flux(const Vector&amp; Omega, double psiL, double psiR, const Vector&amp; n) : double {query}</text><ellipse cx="8667" cy="1619.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1284" x="8676" y="1622.6245">FluxVanLeer(const Matrix&amp; Ax, const Matrix&amp; AxAbs, const Matrix&amp; Ay, const Matrix&amp; AyAbs, const Matrix&amp; Az, const Matrix&amp; AzAbs, const Vector&amp; psiL, const Vector&amp; psiR, const Vector&amp; n, Vector&amp; resultFlux) : void {query}</text><!--MD5=[73e5f3ede57037b30fe36e3ed032a406]
class WaterPhantom--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="137.6328" id="WaterPhantom" style="stroke: #A80036; stroke-width: 1.5;" width="519" x="3220.5" y="2124.5"/><ellipse cx="3429.25" cy="2140.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3432.2188,2146.1406 Q3431.6406,2146.4375 3431,2146.5781 Q3430.3594,2146.7344 3429.6563,2146.7344 Q3427.1563,2146.7344 3425.8281,2145.0938 Q3424.5156,2143.4375 3424.5156,2140.3125 Q3424.5156,2137.1875 3425.8281,2135.5313 Q3427.1563,2133.875 3429.6563,2133.875 Q3430.3594,2133.875 3431,2134.0313 Q3431.6563,2134.1875 3432.2188,2134.4844 L3432.2188,2137.2031 Q3431.5938,2136.625 3431,2136.3594 Q3430.4063,2136.0781 3429.7813,2136.0781 Q3428.4375,2136.0781 3427.75,2137.1563 Q3427.0625,2138.2188 3427.0625,2140.3125 Q3427.0625,2142.4063 3427.75,2143.4844 Q3428.4375,2144.5469 3429.7813,2144.5469 Q3430.4063,2144.5469 3431,2144.2813 Q3431.5938,2144 3432.2188,2143.4219 L3432.2188,2146.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="3449.75" y="2144.6543">WaterPhantom</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3221.5" x2="3738.5" y1="2156.5" y2="2156.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3221.5" x2="3738.5" y1="2164.5" y2="2164.5"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3228.5" y="2172.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3240.5" y="2178.7104">WaterPhantom()</text><ellipse cx="3231.5" cy="2188.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="3240.5" y="2191.5151">WaterPhantom(Config* settings, Mesh* mesh)</text><ellipse cx="3231.5" cy="2201.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="3240.5" y="2204.3198">~WaterPhantom()</text><ellipse cx="3231.5" cy="2213.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="3240.5" y="2217.1245">SetupIC() : VectorVector</text><ellipse cx="3231.5" cy="2226.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="493" x="3240.5" y="2229.9292">GetExternalSource(const std::vector&lt;double&gt;&amp; energies) : std::vector&lt;VectorVector&gt;</text><ellipse cx="3231.5" cy="2239.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="393" x="3240.5" y="2242.7339">GetDensity(const VectorVector&amp; cellMidPoints) : std::vector&lt;double&gt;</text><ellipse cx="3231.5" cy="2252.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="458" x="3240.5" y="2255.5386">GetStoppingPower(const std::vector&lt;double&gt;&amp; energies) : std::vector&lt;double&gt;</text><!--MD5=[2f6d06e17746718185fc96242bb8b19f]
class BOUNDARY_TYPE--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="99.2188" id="BOUNDARY_TYPE" style="stroke: #A80036; stroke-width: 1.5;" width="135" x="1646.5" y="730.5"/><ellipse cx="1661.5" cy="746.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1665.6094,752.5 L1657.8906,752.5 L1657.8906,740.1094 L1665.6094,740.1094 L1665.6094,742.2656 L1660.3438,742.2656 L1660.3438,744.9375 L1665.1094,744.9375 L1665.1094,747.0938 L1660.3438,747.0938 L1660.3438,750.3438 L1665.6094,750.3438 L1665.6094,752.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="1675.5" y="750.6543">BOUNDARY_TYPE</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1647.5" x2="1780.5" y1="762.5" y2="762.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="1652.5" y="776.7104">DIRICHLET</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="1652.5" y="789.5151">INVALID</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="1652.5" y="802.3198">NEUMANN</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="1652.5" y="815.1245">NONE</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1647.5" x2="1780.5" y1="821.7188" y2="821.7188"/><!--MD5=[68cd91d5615ccadb6700a0a296529008]
class KERNEL_NAME--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="73.6094" id="KERNEL_NAME" style="stroke: #A80036; stroke-width: 1.5;" width="124" x="1817" y="743"/><ellipse cx="1834.25" cy="759" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1838.3594,765 L1830.6406,765 L1830.6406,752.6094 L1838.3594,752.6094 L1838.3594,754.7656 L1833.0938,754.7656 L1833.0938,757.4375 L1837.8594,757.4375 L1837.8594,759.5938 L1833.0938,759.5938 L1833.0938,762.8438 L1838.3594,762.8438 L1838.3594,765 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="1848.75" y="763.1543">KERNEL_NAME</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1818" x2="1940" y1="775" y2="775"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="1823" y="789.2104">KERNEL_Isotropic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="1823" y="802.0151">KERNEL_Isotropic1D</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1818" x2="1940" y1="808.6094" y2="808.6094"/><!--MD5=[bca9a10492242ad7f949a711b29b6c8e]
class PROBLEM_NAME--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="112.0234" id="PROBLEM_NAME" style="stroke: #A80036; stroke-width: 1.5;" width="203" x="1163.5" y="1523.5"/><ellipse cx="1211.75" cy="1539.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1215.8594,1545.5 L1208.1406,1545.5 L1208.1406,1533.1094 L1215.8594,1533.1094 L1215.8594,1535.2656 L1210.5938,1535.2656 L1210.5938,1537.9375 L1215.3594,1537.9375 L1215.3594,1540.0938 L1210.5938,1540.0938 L1210.5938,1543.3438 L1215.8594,1543.3438 L1215.8594,1545.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="1232.25" y="1543.6543">PROBLEM_NAME</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1164.5" x2="1365.5" y1="1555.5" y2="1555.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="1169.5" y="1569.7104">PROBLEM_Checkerboard</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1169.5" y="1582.5151">PROBLEM_ElectronRT</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="1169.5" y="1595.3198">PROBLEM_LineSource</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1169.5" y="1608.1245">PROBLEM_LineSource_Pseudo_1D</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1169.5" y="1620.9292">PROBLEM_WaterPhantom</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1164.5" x2="1365.5" y1="1627.5234" y2="1627.5234"/><!--MD5=[30a9f32f1054ef51fd0c6378da396cd5]
class QUAD_NAME--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="124.8281" id="QUAD_NAME" style="stroke: #A80036; stroke-width: 1.5;" width="202" x="1402" y="1517"/><ellipse cx="1460.75" cy="1533" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1464.8594,1539 L1457.1406,1539 L1457.1406,1526.6094 L1464.8594,1526.6094 L1464.8594,1528.7656 L1459.5938,1528.7656 L1459.5938,1531.4375 L1464.3594,1531.4375 L1464.3594,1533.5938 L1459.5938,1533.5938 L1459.5938,1536.8438 L1464.8594,1536.8438 L1464.8594,1539 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="1481.25" y="1537.1543">QUAD_NAME</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1403" x2="1603" y1="1549" y2="1549"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1408" y="1563.2104">QUAD_GaussLegendre1D</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1408" y="1576.0151">QUAD_GaussLegendreTensorized</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1408" y="1588.8198">QUAD_LDFESA</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1408" y="1601.6245">QUAD_Lebedev</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1408" y="1614.4292">QUAD_LevelSymmetric</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1408" y="1627.2339">QUAD_MonteCarlo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1403" x2="1603" y1="1633.8281" y2="1633.8281"/><!--MD5=[329b2a342f204483b823a2716a5a2473]
class SOLVER_NAME--><rect fill="#FEFECE" filter="url(#fbs4ro5ca5qxc)" height="73.6094" id="SOLVER_NAME" style="stroke: #A80036; stroke-width: 1.5;" width="120" x="1639" y="1542.5"/><ellipse cx="1654" cy="1558.5" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1658.1094,1564.5 L1650.3906,1564.5 L1650.3906,1552.1094 L1658.1094,1552.1094 L1658.1094,1554.2656 L1652.8438,1554.2656 L1652.8438,1556.9375 L1657.6094,1556.9375 L1657.6094,1559.0938 L1652.8438,1559.0938 L1652.8438,1562.3438 L1658.1094,1562.3438 L1658.1094,1564.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="1668" y="1562.6543">SOLVER_NAME</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1640" x2="1758" y1="1574.5" y2="1574.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="1645" y="1588.7104">PN_SOLVER</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="1645" y="1601.5151">SN_SOLVER</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1640" x2="1758" y1="1608.1094" y2="1608.1094"/><!--MD5=[b0fb3a41c0da1dd6d85c4f39212f7048]
reverse link ElectronRT to WaterPhantom--><path d="M3480,1687.78 C3480,1813.56 3480,2018.29 3480,2124.2 " fill="none" id="ElectronRT&lt;-WaterPhantom" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3473,1687.53,3480,1667.53,3487,1687.53,3473,1687.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[afbdd02abc4e371dab1c36a18e6b0ee8]
reverse link LineSource_SN to LineSource_SN_Pseudo1D--><path d="M4588,1674.94 C4588,1809.99 4588,2052.74 4588,2150.26 " fill="none" id="LineSource_SN&lt;-LineSource_SN_Pseudo1D" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4581,1674.63,4588,1654.63,4595,1674.63,4581,1674.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[51a439b0c181719f1a10a280166c3aa3]
reverse link NumericalFlux to LaxFriedrichsFlux--><path d="M7608.67,843.52 C7746.82,899.76 7938.73,993.07 8074,1120 C8208.08,1245.81 8302.64,1449.06 8339.22,1536.41 " fill="none" id="NumericalFlux&lt;-LaxFriedrichsFlux" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7605.91,849.96,7589.97,836,7611.14,836.97,7605.91,849.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c8ea5724d5b402e5c8d4ca42df5ffb9]
reverse link NumericalFlux to UpwindFlux--><path d="M7559.84,845.03 C7692.65,910.14 7910.65,1008.56 8110,1060 C8338.69,1119.01 8416.6,1037.77 8638,1120 C8897.1,1216.23 9152.96,1432.88 9259.42,1529.9 " fill="none" id="NumericalFlux&lt;-UpwindFlux" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7556.52,851.19,7541.68,836.07,7562.71,838.64,7556.52,851.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7a5c06b72202fdb83b002facaebdc6ed]
reverse link OptionBase to COptionUShort--><path d="M2380.45,2205.54 C1955.17,2221.65 1252.39,2259.93 653,2348 C640.73,2349.8 628.24,2351.81 615.65,2353.97 " fill="none" id="OptionBase&lt;-COptionUShort" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2380.24,2198.55,2400.49,2204.79,2380.76,2212.54,2380.24,2198.55" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[26f5b683aa171679e8b6fee44399f468]
reverse link OptionBase to OptionBool--><path d="M2380.28,2211.95 C2055.53,2231.31 1580.45,2270.67 1172,2348 C1162.47,2349.81 1152.78,2351.8 1143.02,2353.95 " fill="none" id="OptionBase&lt;-OptionBool" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2380.1,2204.95,2400.47,2210.76,2380.92,2218.92,2380.1,2204.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c38598f153a5ddcc699faf2b9a04cc16]
reverse link OptionBase to OptionDouble--><path d="M2380.45,2241.52 C2185.4,2267.87 1945.67,2304.25 1733,2348 C1723.89,2349.87 1714.63,2351.86 1705.3,2353.94 " fill="none" id="OptionBase&lt;-OptionDouble" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2379.63,2234.57,2400.38,2238.84,2381.49,2248.44,2379.63,2234.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c130641e7aee8d75e85f6f46bf583c71]
reverse link OptionBase to OptionEnum--><path d="M2540.06,2275.3 C2473.6,2298.96 2401.29,2324.7 2336.06,2347.92 " fill="none" id="OptionBase&lt;-OptionEnum" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2537.9,2268.63,2559.09,2268.52,2542.6,2281.82,2537.9,2268.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5e35d27cc5d4afcebc1c0fea76403421]
reverse link OptionBase to OptionInt--><path d="M2767,2288.73 C2767,2310.51 2767,2333.28 2767,2353.7 " fill="none" id="OptionBase&lt;-OptionInt" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2760,2288.68,2767,2268.68,2774,2288.68,2760,2288.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4f5f1ba1b4e7189a5be2bc0c996c0772]
reverse link OptionBase to OptionLong--><path d="M2949.77,2276.83 C3005.98,2302.16 3067.2,2329.74 3121.04,2353.99 " fill="none" id="OptionBase&lt;-OptionLong" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2946.67,2283.12,2931.31,2268.52,2952.42,2270.35,2946.67,2283.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[19ddf22e3daa26dec94e61c0062eaab6]
reverse link OptionBase to OptionString--><path d="M3126.86,2272.58 C3152.61,2277.89 3178.19,2283.08 3203,2288 C3348.79,2316.92 3386.67,2316.85 3532,2348 C3540.92,2349.91 3549.97,2351.89 3559.11,2353.93 " fill="none" id="OptionBase&lt;-OptionString" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3125.32,2279.41,3107.15,2268.51,3128.16,2265.7,3125.32,2279.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[338b565911eb84685aef9ab67888724e]
reverse link OptionBase to OptionStringList--><path d="M3105.82,2272.21 C3138.55,2278.2 3171.34,2283.61 3203,2288 C3612.38,2344.82 3721.5,2292.01 4131,2348 C4144.15,2349.8 4157.54,2351.81 4171.04,2353.98 " fill="none" id="OptionBase&lt;-OptionStringList" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3104.39,2279.07,3086.01,2268.53,3106.96,2265.31,3104.39,2279.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e543dabbd1238d0ea510f148afd54dcb]
reverse link OptionBase to OptionULong--><path d="M3100.03,2272.14 C3134.66,2278.34 3169.45,2283.82 3203,2288 C3923.25,2377.77 4115.46,2252.71 4835,2348 C4848.04,2349.73 4861.33,2351.74 4874.71,2353.98 " fill="none" id="OptionBase&lt;-OptionULong" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3098.65,2279,3080.24,2268.51,3101.17,2265.23,3098.65,2279" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4ad7caf68528ed95174c5ed7c9497b48]
reverse link ProblemBase to Checkerboard--><path d="M3988.01,801.51 C3518.59,840.61 2596.08,938.52 2331,1120 C2204.57,1206.56 2126.15,1371.6 2086.3,1478.26 " fill="none" id="ProblemBase&lt;-Checkerboard" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3987.44,794.53,4007.95,799.86,3988.6,808.49,3987.44,794.53" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9e04a2c05544cc22196b31db1f220344]
reverse link ProblemBase to ElectronRT--><path d="M4026.06,910.64 C3934.95,967.09 3834.63,1038.94 3757,1120 C3649.58,1232.17 3564.43,1393.11 3518.21,1491.45 " fill="none" id="ProblemBase&lt;-ElectronRT" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4022.54,904.58,4043.25,900.1,4029.86,916.52,4022.54,904.58" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a53eb093e4b8a8f125444e2df6542754]
reverse link ProblemBase to LineSource_PN--><path d="M4226.47,919.72 C4177.63,1086.88 4097.22,1362.12 4057.58,1497.78 " fill="none" id="ProblemBase&lt;-LineSource_PN" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4219.79,917.63,4232.12,900.39,4233.23,921.55,4219.79,917.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fb3130a9bb4da766ad9f75b51b5d9cb5]
reverse link ProblemBase to LineSource_SN--><path d="M4322.55,919.01 C4390.91,1088.83 4504.49,1371.03 4558.16,1504.37 " fill="none" id="ProblemBase&lt;-LineSource_SN" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4316.03,921.56,4315.06,900.39,4329.02,916.33,4316.03,921.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f29213e6409b0dbeddb5359456126346]
reverse link QLookupQuadrature to QLDFESA--><path d="M6941.71,2302.13 C6921.43,2322.11 6900.89,2342.34 6882.6,2360.35 " fill="none" id="QLookupQuadrature&lt;-QLDFESA" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6936.88,2297.06,6956.04,2288.02,6946.71,2307.04,6936.88,2297.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e6462bb42d962df88f12397729eebeae]
reverse link QLookupQuadrature to QLebedev--><path d="M7051,2308.22 C7051,2326.19 7051,2344.17 7051,2360.35 " fill="none" id="QLookupQuadrature&lt;-QLebedev" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7044,2308.02,7051,2288.02,7058,2308.02,7044,2308.02" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5c097905ed270dc8517366d8f0d54a26]
reverse link QLookupQuadrature to QLevelSymmetric--><path d="M7165.65,2301.84 C7187.09,2321.91 7208.82,2342.25 7228.15,2360.35 " fill="none" id="QLookupQuadrature&lt;-QLevelSymmetric" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7160.71,2306.8,7150.89,2288.02,7170.27,2296.58,7160.71,2306.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e1b6629996e78d6831d3c62b50670482]
reverse link QuadratureBase to QDummy--><path d="M6530.41,1787.8 C6478.18,1879.63 6404.07,1980.01 6308,2039 C6137.94,2143.43 6045.46,2018.17 5863,2099 C5845.26,2106.86 5828.15,2118.45 5812.9,2130.81 " fill="none" id="QuadratureBase&lt;-QDummy" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6524.38,1784.23,6540.23,1770.17,6536.61,1791.05,6524.38,1784.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d78554115d81d3317d7b542e5a03e78e]
reverse link QuadratureBase to QGaussLegendre1D--><path d="M6500.08,1787.02 C6446.04,1869.46 6378.87,1962.72 6308,2039 C6284.11,2064.71 6255.78,2089.79 6228.36,2111.98 " fill="none" id="QuadratureBase&lt;-QGaussLegendre1D" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6494.29,1783.09,6511.06,1770.15,6506.02,1790.73,6494.29,1783.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a98013c9e348f9d44b08ef11aadf8b85]
reverse link QuadratureBase to QGaussLegendreTensorized--><path d="M6624,1790.44 C6624,1901.13 6624,2030.47 6624,2111.94 " fill="none" id="QuadratureBase&lt;-QGaussLegendreTensorized" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6617,1790.37,6624,1770.37,6631,1790.37,6617,1790.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7f3b490deb3fa0388444aa1c9301dfa9]
reverse link QuadratureBase to QLookupQuadrature--><path d="M6764.8,1786.92 C6819.15,1866.04 6882.09,1956.98 6940,2039 C6953.75,2058.48 6968.62,2079.23 6982.86,2098.98 " fill="none" id="QuadratureBase&lt;-QLookupQuadrature" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6758.89,1790.67,6753.34,1770.22,6770.43,1782.75,6758.89,1790.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[835644a82503d26b2c146b2473052e94]
reverse link QuadratureBase to QMonteCarlo--><path d="M6721.36,1787.71 C6773.92,1878.02 6847.23,1977.18 6940,2039 C7047.36,2110.54 7107.58,2043.42 7224,2099 C7241.42,2107.31 7258.5,2118.78 7273.95,2130.84 " fill="none" id="QuadratureBase&lt;-QMonteCarlo" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6715.13,1790.91,6711.29,1770.07,6727.28,1783.97,6715.13,1790.91" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0c6d7d9ad37f11c252a553ed6ad7cf18]
reverse link ScatteringKernel to Isotropic--><path d="M6156.51,861.56 C6129.69,929.72 6091.68,1030.35 6064,1120 C6018.48,1267.42 5977.8,1445.59 5959.4,1529.84 " fill="none" id="ScatteringKernel&lt;-Isotropic" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6150.07,858.82,6163.93,842.79,6163.09,863.97,6150.07,858.82" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b02984eceb62e08a5144c7350df9ee2e]
reverse link ScatteringKernel to Isotropic1D--><path d="M6188.69,862.61 C6188.07,1027.67 6186.68,1396.73 6186.18,1529.63 " fill="none" id="ScatteringKernel&lt;-Isotropic1D" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6181.69,862.56,6188.77,842.58,6195.69,862.61,6181.69,862.56" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[55345d7c34296aff53d9df73d3038e50]
reverse link Solver to CSDSNSolver--><path d="M6442.55,254.46 C6284.39,288.93 6055.32,360.11 5905,500 C5839.39,561.06 5803.55,661.66 5786.62,723.92 " fill="none" id="Solver&lt;-CSDSNSolver" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6441.43,247.54,6462.45,250.24,6444.34,261.24,6441.43,247.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e73b5d06c478f29454c29f878c4bbdfb]
reverse link Solver to MNSolver--><path d="M6620,460.75 C6620,537.19 6620,617.92 6620,678.94 " fill="none" id="Solver&lt;-MNSolver" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6613,460.38,6620,440.38,6627,460.38,6613,460.38" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[faae707549c5b849b462190841f2994c]
reverse link Solver to PNSolver--><path d="M6797.83,237.9 C7146.91,266.35 7905.64,344.68 8110,500 C8116.01,504.56 8121.76,509.46 8127.28,514.65 " fill="none" id="Solver&lt;-PNSolver" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6797.09,244.86,6777.72,236.27,6798.22,230.9,6797.09,244.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2865e895988d2514b2f754bd9f7b9c94]
reverse link Solver to SNSolver--><path d="M6797.81,231.93 C7193.95,250.62 8133.72,313.86 8382,500 C8457.14,556.33 8490.82,666.55 8504.58,730.3 " fill="none" id="Solver&lt;-SNSolver" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6797.3,238.92,6777.64,231,6797.94,224.93,6797.3,238.92" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[808132d80587c9df42bdf4c1945937c1]
reverse link Solver to SNSolverMPI--><path d="M6797.93,227.06 C7236.89,235.54 8356.65,278.87 8644,500 C8719.56,558.15 8746.3,674.36 8755.45,736.88 " fill="none" id="Solver&lt;-SNSolverMPI" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6797.73,234.06,6777.87,226.69,6797.99,220.06,6797.73,234.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[efa8e6fe7dfd8fd64f02aecfb3519694]
reverse link Config to OptionBase--><path d="M2767,2052.49 C2767,2076.71 2767,2098.93 2767,2118.2 " fill="none" id="Config&lt;-OptionBase" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2767,2039.25,2763,2045.25,2767,2051.25,2771,2045.25,2767,2039.25" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cca7b5d75605e1f215497188712827da]
reverse link MNSolver to QuadratureBase--><path d="M6620.57,894.54 C6621.21,1023.23 6622.28,1235.07 6623.05,1388.94 " fill="none" id="MNSolver&lt;-QuadratureBase" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6620.5,881.2,6616.533,887.2219,6620.5659,893.1998,6624.5329,887.1779,6620.5,881.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e0412eb96ee83df559286f8b93fba368]
reverse link MNSolver to SphericalHarmonics--><path d="M6647.48,893.7 C6668.16,953.32 6703.01,1021.89 6760,1060 C6911.88,1161.56 7426.66,1020.66 7580,1120 C7703.6,1200.07 7769.9,1363.85 7801.79,1472.41 " fill="none" id="MNSolver&lt;-SphericalHarmonics" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6643.28,881.12,6641.3851,888.0777,6647.0787,892.5029,6648.9736,885.5452,6643.28,881.12" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2db0e6a27ad7c543f0bdce8067e321b2]
reverse link ProblemBase to Config--><path d="M3994.92,828.41 C3769.87,876.5 3448.5,966.26 3203,1120 C3197.07,1123.72 3191.16,1127.53 3185.27,1131.44 " fill="none" id="ProblemBase&lt;-Config" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4007.92,825.66,4001.2228,822.9864,3996.1791,828.1401,4002.8762,830.8137,4007.92,825.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3fa3d6f3939238218e3ee9bd7eff69f6]
reverse link ProblemBase to Mesh--><path d="M4518.93,906.26 C4628.98,965.36 4757.25,1040.36 4865,1120 C4929.99,1168.04 4995.57,1223.94 5056.6,1279.85 " fill="none" id="ProblemBase&lt;-Mesh" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4507.31,900.05,4510.7172,906.4054,4517.8942,905.7046,4514.487,899.3492,4507.31,900.05" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a9f16d3977b996ccf6a0381ea5be28ca]
reverse link ProblemBase to Physics--><path d="M4539.29,849.12 C4815.43,915.14 5256.05,1012.11 5643,1060 C5786.17,1077.72 6813.66,1050.35 6940,1120 C7079.09,1196.68 7171.11,1362.65 7219.4,1472.44 " fill="none" id="ProblemBase&lt;-Physics" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4526.27,846,4531.1731,851.2877,4537.9398,848.7955,4533.0368,843.5078,4526.27,846" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a8fcaaca6c951ff4f3654d94ed994252]
reverse link ScatteringKernel to QuadratureBase--><path d="M6228.92,854.18 C6294.49,974.39 6427.04,1217.41 6520.48,1388.71 " fill="none" id="ScatteringKernel&lt;-QuadratureBase" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6222.59,842.58,6221.9528,849.7629,6228.3381,853.1137,6228.9753,845.9308,6222.59,842.58" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8718454a90ca902832a0d12e61307c14]
reverse link Solver to Config--><path d="M6449.28,242.65 C6204.54,272.4 5743.54,345.11 5381,500 C4969.07,675.99 4968.64,920.4 4543,1060 C4259.77,1152.89 3474.23,996.38 3203,1120 C3197,1122.73 3191.05,1125.59 3185.13,1128.56 " fill="none" id="Solver&lt;-Config" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6462.21,241.1,6455.7779,237.84,6450.2947,242.5235,6456.7269,245.7835,6462.21,241.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1ddc86840206f8769827b49fc9d67fda]
reverse link Solver to Mesh--><path d="M6449.04,252.37 C6200.22,295.53 5755.64,386.33 5643,500 C5439.08,705.78 5373.36,1038.41 5354,1279.91 " fill="none" id="Solver&lt;-Mesh" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6462.21,250.09,6455.6197,247.1629,6450.383,252.1205,6456.9733,255.0476,6462.21,250.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[141236dffacf4bdc2074205320151f00]
reverse link Solver to NumericalFlux--><path d="M6788.61,339.62 C6961.37,457.05 7222.68,634.68 7353.85,723.84 " fill="none" id="Solver&lt;-NumericalFlux" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6777.62,332.15,6780.3386,338.829,6787.5495,338.8883,6784.8309,332.2093,6777.62,332.15" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[432d473e5485753f91a485dfddb206c5]
reverse link Solver to ProblemBase--><path d="M6449.33,238.45 C6138.69,266.01 5462.38,340.25 4914,500 C4774.1,540.76 4624.3,604 4504.11,659.97 " fill="none" id="Solver&lt;-ProblemBase" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6462.49,237.29,6456.1614,233.8333,6450.5365,238.3455,6456.8651,241.8022,6462.49,237.29" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[afaa5d468eee2294a302c50898e1d153]
link Cubic2DSpline to ErrorMessages--><!--MD5=[31de88253031076c59e403dc6909dd47]
link ErrorMessages to Reconstructor--><!--MD5=[71c8055a2dad831e811e86fc557e8b10]
link Cubic2DSpline to Spline--><!--MD5=[30a0ab659fc05a260d7aad4a1086c80d]
link Spline to BOUNDARY_TYPE--><!--MD5=[f13eca32f0b5b9b225e9b1368a5ec189]
link BOUNDARY_TYPE to KERNEL_NAME--><!--MD5=[86c40776b870b621cea55d95bb9e4e49]
link Spline to PROBLEM_NAME--><!--MD5=[473e70d7e9c3537554dc719ca99463dc]
link PROBLEM_NAME to QUAD_NAME--><!--MD5=[3d5edcd17373635ebdd0144e59664bec]
link QUAD_NAME to SOLVER_NAME--><!--MD5=[91808598ee045a7f7634fed0cde0a5b2]
@startuml






abstract class COptionUShort {
	+COptionUShort(std::string option_field_name, unsigned short& option_field, unsigned short default_value)
	+~COptionUShort()
	+SetValue(std::vector<std::string> option_value) : std::string
	-_name : std::string
	-_def : unsigned short
	-_field : unsigned short&
	+SetDefault() : void
}


class CSDSNSolver {
	+CSDSNSolver(Config* settings)
	-_dose : std::vector<double>
	+Save() : void {query}
	+Save(int currEnergy) : void {query}
	+Solve() : void
}


class Checkerboard {
	-Checkerboard()
	+Checkerboard(Config* settings, Mesh* mesh)
	+~Checkerboard()
	-_scatteringXS : Vector
	-_totalXS : Vector
	+GetScatteringXS(const std::vector<double>& energies) : VectorVector
	+GetTotalXS(const std::vector<double>& energies) : VectorVector
	+SetupIC() : VectorVector
	-isAbsorption(const Vector& pos) : bool {query}
	-isSource(const Vector& pos) : bool {query}
	+GetExternalSource(const std::vector<double>& energies) : std::vector<VectorVector>
	+GetStoppingPower(const std::vector<double>& energies) : std::vector<double>
}


class Config {
	+Config(std::string case_filename)
	+~Config(void)
	+GetBoundaryType(std::string nameMarker) : BOUNDARY_TYPE {query}
	+GetKernelName() : KERNEL_NAME {query}
	-_kernelName : KERNEL_NAME
	+GetProblemName() : PROBLEM_NAME {query}
	-_problemName : PROBLEM_NAME
	+GetQuadName() : QUAD_NAME {query}
	-_quadName : QUAD_NAME
	+GetSolverName() : SOLVER_NAME {query}
	-_solverName : SOLVER_NAME
	+GetCleanFluxMat() : bool {query}
	+IsCSD() : bool {query}
	-TokenizeString(std::string& str, std::string& option_name, std::vector<std::string>& option_value) : bool
	-_baseConfig : bool
	-_cleanFluxMat : bool
	-_csd : bool
	+GetCFL() : double {query}
	+GetTEnd() : double {query}
	-_CFL : double
	-_tEnd : double
	-_optionMap : std::map<std::string, OptionBase*>
	-_allOptions : std::map<std::string, bool>
	+GetCTFile() : std::string {query}
	+GetLogDir() : std::string {query}
	+GetMeshFile() : std::string {query}
	+GetOutputDir() : std::string {query}
	+GetOutputFile() : std::string {query}
	-_ctFile : std::string
	-_fileName : std::string
	-_inputDir : std::string
	-_logDir : std::string
	-_meshFile : std::string
	-_outputDir : std::string
	-_outputFile : std::string
	-_boundaries : std::vector<std::pair<std::string, BOUNDARY_TYPE> >
	-_MarkerDirichlet : std::vector<std::string>
	-_MarkerNeumann : std::vector<std::string>
	+GetMaxMomentDegree() : unsigned
	+GetNCells() : unsigned
	+GetNQuadPoints() : unsigned
	+GetReconsOrder() : unsigned
	-_nCells : unsigned
	-_nQuadPoints : unsigned
	+GetQuadOrder() : unsigned short {query}
	-_maxMomentDegree : unsigned short
	-_nMarkerDirichlet : unsigned short
	-_nMarkerNeumann : unsigned short
	-_quadOrder : unsigned short
	-_reconsOrder : unsigned short
	-AddBoolOption(const std::string name, bool& option_field, bool default_value) : void
	-AddDoubleOption(const std::string name, double& option_field, double default_value) : void
	-AddEnumOption(const std::string name, Tenum& option_field, const std::map<std::string, Tenum>& enum_map, Tenum default_value) : void
	-AddIntegerOption(const std::string name, int& option_field, int default_value) : void
	-AddLongOption(const std::string name, long& option_field, long default_value) : void
	-AddStringListOption(const std::string name, unsigned short& num_marker, std::vector<std::string>& option_field) : void
	-AddStringOption(const std::string name, std::string& option_field, std::string default_value) : void
	-AddUnsignedLongOption(const std::string name, unsigned long& option_field, unsigned long default_value) : void
	-AddUnsignedShortOption(const std::string name, unsigned short& option_field, unsigned short default_value) : void
	-InitLogger(spdlog::level::level_enum terminalLogLvl, spdlog::level::level_enum fileLogLvl) : void
	-SetConfigOptions(void) : void
	-SetConfigParsing(std::string case_filename) : void
	-SetDefault(void) : void
	+SetNCells(unsigned nCells) : void
	+SetNQuadPoints(unsigned nq) : void
	-SetOutput(void) : void
	-SetPointersNull(void) : void
	-SetPostprocessing(void) : void
}


class Cubic2DSpline {
	-Cubic2DSpline()
	+Cubic2DSpline(const Vector& x, const Vector& y, const Matrix& data)
	+~Cubic2DSpline()
	-_data : Matrix
	-_x : Vector
	-_y : Vector
	-interpolate1D(double param, double x) : double
	+operator()(double x, double y) : double
	-indexOfClosestValue(double value, const Vector& v) : unsigned
}


class ElectronRT {
	-ElectronRT()
	+ElectronRT(Config* settings, Mesh* mesh)
	+~ElectronRT()
	+GetScatteringXS(const std::vector<double>& energies) : VectorVector
	+GetTotalXS(const std::vector<double>& energies) : VectorVector
	+SetupIC() : VectorVector
	+GetExternalSource(const std::vector<double>& energies) : std::vector<VectorVector>
	+GetDensity(const VectorVector& cellMidPoints) : std::vector<double>
	+GetStoppingPower(const std::vector<double>& energies) : std::vector<double>
	-LoadXSH20(std::string fileSigmaS, std::string fileSigmaT) : void
}


class ErrorMessages {
	+ErrorMessages()
	+{static} Error(std::string ErrorMsg, std::string FunctionName) : void
	+{static} OptionNotSetError(std::string OptionName, std::string FunctionName) : void
}


class Isotropic {
	-Isotropic()
	+Isotropic(QuadratureBase* q)
	+~Isotropic()
	+GetScatteringKernel() : Matrix
}


class Isotropic1D {
	-Isotropic1D()
	+Isotropic1D(QuadratureBase* q)
	+~Isotropic1D()
	+GetScatteringKernel() : Matrix
}


class LaxFriedrichsFlux {
	+LaxFriedrichsFlux(Config* settings)
	+Flux(const Vector& Omega, double psiL, double psiR, const Vector& n) : double {query}
	-_dt : double
}


class LineSource_PN {
	-LineSource_PN()
	+LineSource_PN(Config* settings, Mesh* mesh)
	+~LineSource_PN()
	+GetScatteringXS(const std::vector<double>& energies) : VectorVector
	+GetTotalXS(const std::vector<double>& energies) : VectorVector
	+SetupIC() : VectorVector
	-GlobalIndex(int l, int k) : int {query}
	+GetExternalSource(const std::vector<double>& energies) : std::vector<VectorVector>
	+GetStoppingPower(const std::vector<double>& energies) : std::vector<double>
}


class LineSource_SN {
	-LineSource_SN()
	+LineSource_SN(Config* settings, Mesh* mesh)
	+~LineSource_SN()
	+GetScatteringXS(const std::vector<double>& energies) : VectorVector
	+GetTotalXS(const std::vector<double>& energies) : VectorVector
	+SetupIC() : VectorVector
	+GetExternalSource(const std::vector<double>& energies) : std::vector<VectorVector>
	+GetStoppingPower(const std::vector<double>& energies) : std::vector<double>
}


class LineSource_SN_Pseudo1D {
	-LineSource_SN_Pseudo1D()
	+LineSource_SN_Pseudo1D(Config* settings, Mesh* mesh)
	+SetupIC() : VectorVector
}


class MNSolver {
	+MNSolver(Config* settings)
	+~MNSolver()
	-_quadrature : QuadratureBase*
	-_basis : SphericalHarmonics
	-_scatterMatDiag : Vector
	-_A : VectorVector
	-_sigmaA : VectorVector
	-GlobalIndex(int l, int k) : int {query}
	-_nTotalEntries : unsigned
	-_nMaxMomentsOrder : unsigned short
	-ComputeSystemMatrices() : void
	+Solve() : void
}


class Mesh {
	+Mesh()
	+Mesh(std::vector<Vector> nodes, std::vector<std::vector<unsigned> > cells, std::vector<std::pair<BOUNDARY_TYPE, std::vector<unsigned> > > boundaries)
	+~Mesh()
	#ComputeOutwardFacingNormal(const Vector& nodeA, const Vector& nodeB, const Vector& cellCenter) : Vector
	#_nodeNeighbors : blaze::CompressedMatrix<bool>
	#_dim : const unsigned
	#_ghostCellID : const unsigned
	#_numBoundaries : const unsigned
	#_numCells : const unsigned
	#_numNodes : const unsigned
	#_numNodesPerCell : const unsigned
	+GetDistanceToOrigin(unsigned idx_cell) : double {query}
	#_cellBoundaryTypes : std::vector<BOUNDARY_TYPE>
	+GetBoundaryTypes() : std::vector<BOUNDARY_TYPE>& {query}
	#_cellMidPoints : std::vector<Vector>
	#_nodes : std::vector<Vector>
	+GetCellMidPoints() : std::vector<Vector>& {query}
	+GetNodes() : std::vector<Vector>& {query}
	#_cellAreas : std::vector<double>
	+GetCellAreas() : std::vector<double>& {query}
	#_boundaries : std::vector<std::pair<BOUNDARY_TYPE, std::vector<unsigned> > >
	+GetBounds() : std::vector<std::pair<double , double> > {query}
	#_bounds : std::vector<std::pair<double, double> >
	#_cellNormals : std::vector<std::vector<Vector> >
	+GetNormals() : std::vector<std::vector<Vector> >& {query}
	#_cellNeighbors : std::vector<std::vector<unsigned> >
	#_cells : std::vector<std::vector<unsigned> >
	+GetCells() : std::vector<std::vector<unsigned> >& {query}
	+GetNeighbours() : std::vector<std::vector<unsigned> >& {query}
	#_colors : std::vector<unsigned>
	+GetPartitionIDs() : std::vector<unsigned>& {query}
	+GetDim() : unsigned {query}
	+GetNumCells() : unsigned {query}
	+GetNumNodes() : unsigned {query}
	+GetNumNodesPerCell() : unsigned {query}
	#ComputeBounds() : void
	#ComputeCellAreas() : void
	#ComputeCellMidpoints() : void
	#ComputeConnectivity() : void
	#ComputePartitioning() : void
	+ComputeSlopes(unsigned nq, VectorVector& psiDerX, VectorVector& psiDerY, const VectorVector& psi) : void {query}
	+ReconstructSlopesS(unsigned nq, VectorVector& psiDerX, VectorVector& psiDerY, const VectorVector& psi) : void {query}
	+ReconstructSlopesU(unsigned nq, VectorVector& psiDerX, VectorVector& psiDerY, const VectorVector& psi) : void {query}
}


abstract class NumericalFlux {
	+NumericalFlux(Config* settings)
	+{static} Create(Config* settings) : NumericalFlux*
	+{abstract} Flux(const Matrix AxPlus, const Matrix AxMinus, const Matrix AyPlus, const Matrix AyMinus, const Matrix AzPlus, const Matrix AzMinus, const Vector, const Vector, const Vector n) : Vector {query}
	+{abstract} Flux(const Vector& Omega, double psiL, double psiR, const Vector& n) : double {query}
	+{abstract} FluxVanLeer(const Matrix& Ax, const Matrix& AxAbs, const Matrix& Ay, const Matrix& AyAbs, const Matrix& Az, const Matrix& AzAbs, const Vector& psiL, const Vector& psiR, const Vector& n, Vector& resultFlux) : void {query}
}


abstract class OptionBase {
	+OptionBase()
	+{abstract} ~OptionBase()
	+SetValue(std::vector<std::string> value) : std::string
	+badValue(std::vector<std::string>& option_value, std::string type_id, std::string option_name) : std::string
	+optionCheckMultipleValues(std::vector<std::string>& option_value, std::string type_id, std::string option_name) : std::string
	+GetValue() : std::vector<std::string>
	-_value : std::vector<std::string>
	+{abstract} SetDefault() : void
}


abstract class OptionBool {
	+OptionBool(std::string option_field_name, bool& option_field, bool default_value)
	+~OptionBool()
	-_def : bool
	-_field : bool&
	+SetValue(std::vector<std::string> option_value) : std::string
	-_name : std::string
	+SetDefault() : void
}


abstract class OptionDouble {
	+OptionDouble(std::string option_field_name, double& option_field, double default_value)
	+~OptionDouble()
	-_def : double
	-_field : double&
	+SetValue(std::vector<std::string> option_value) : std::string
	-_name : std::string
	+SetDefault() : void
}


abstract class OptionEnum <template <class Tenum>> {
	+OptionEnum(std::string option_field_name, const std::map<std::string, Tenum> m, Tenum& option_field, Tenum default_value)
	+~OptionEnum()
	-_def : Tenum
	-_field : Tenum&
	-_map : std::map<std::string, Tenum>
	+SetValue(std::vector<std::string> option_value) : std::string
	-_name : std::string
	+SetDefault() : void
}


abstract class OptionInt {
	+OptionInt(std::string option_field_name, int& option_field, int default_value)
	+~OptionInt()
	-_def : int
	-_field : int&
	+SetValue(std::vector<std::string> option_value) : std::string
	-_name : std::string
	+SetDefault() : void
}


abstract class OptionLong {
	+OptionLong(std::string option_field_name, long& option_field, long default_value)
	+~OptionLong()
	-_def : long
	-_field : long&
	+SetValue(std::vector<std::string> option_value) : std::string
	-_name : std::string
	+SetDefault() : void
}


abstract class OptionString {
	+OptionString(std::string option_field_name, std::string& option_field, std::string default_value)
	+~OptionString()
	+SetValue(std::vector<std::string> option_value) : std::string
	-_def : std::string
	-_name : std::string
	-_field : std::string&
	+SetDefault() : void
}


abstract class OptionStringList {
	+OptionStringList(std::string option_field_name, unsigned short& list_size, std::vector<std::string>& option_field)
	+~OptionStringList()
	+SetValue(std::vector<std::string> option_value) : std::string
	-_name : std::string
	-_field : std::vector<std::string>&
	-_size : unsigned short&
	+SetDefault() : void
}


abstract class OptionULong {
	+OptionULong(std::string option_field_name, unsigned long& option_field, unsigned long default_value)
	+~OptionULong()
	+SetValue(std::vector<std::string> option_value) : std::string
	-_name : std::string
	-_def : unsigned long
	-_field : unsigned long&
	+SetDefault() : void
}


class PNSolver {
	+PNSolver(Config* settings)
	#_AxAbs : Matrix
	#_AxMinus : Matrix
	#_AxPlus : Matrix
	#_AyAbs : Matrix
	#_AyMinus : Matrix
	#_AyPlus : Matrix
	#_AzAbs : Matrix
	#_AzMinus : Matrix
	#_AzPlus : Matrix
	#_Ax : SymMatrix
	#_Ay : SymMatrix
	#_Az : SymMatrix
	#_scatterMatDiag : Vector
	#_sigmaA : VectorVector
	#CheckIndex(int l, int k) : bool {query}
	#AParam(int l, int k) : double {query}
	#BParam(int l, int k) : double {query}
	#CParam(int l, int k) : double {query}
	#CTilde(int l, int k) : double {query}
	#DParam(int l, int k) : double {query}
	#DTilde(int l, int k) : double {query}
	#EParam(int l, int k) : double {query}
	#ETilde(int l, int k) : double {query}
	#FParam(int l, int k) : double {query}
	#FTilde(int l, int k) : double {query}
	#LegendrePoly(double x, int l) : double
	#GlobalIndex(int l, int k) : int {query}
	#Sgn(int k) : int {query}
	#kMinus(int k) : int {query}
	#kPlus(int k) : int {query}
	#_LMaxDegree : unsigned
	#_nTotalEntries : unsigned
	#CleanFluxMatrices() : void
	#ComputeFluxComponents() : void
	#ComputeScatterMatrix() : void
	#ComputeSystemMatrices() : void
	+Save() : void {query}
	+Save(int currEnergy) : void {query}
	+Solve() : void
}


class Physics {
	+Physics()
	+{static} Create() : Physics*
	+GetScatteringXS(Vector energies, Vector density, Vector angle) : VectorVector
	+GetStoppingPower(Vector energies, Vector density) : VectorVector
	+GetTotalXS(Vector energies, Vector density) : VectorVector
	+GetTransportXS(Vector energies, Vector density) : VectorVector
	+ReadStoppingPowers(std::string fileName) : VectorVector
	-_stpowH2O : VectorVector
	-_xsH2O : VectorVector
	-_xsTotalH2O : VectorVector
	-_xsTransportH2O : VectorVector
	+ReadENDL(std::string filename) : std::tuple<std::vector<VectorVector> , std::vector<VectorVector> >
	+LoadDatabase(std::string fileName_H, std::string fileName_O, std::string fileName_stppower) : void
}


abstract class ProblemBase {
	+ProblemBase(Config* settings, Mesh* mesh)
	#ProblemBase()
	+~ProblemBase()
	#_settings : Config*
	#_mesh : Mesh*
	#_physics : Physics*
	+{static} Create(Config* settings, Mesh* mesh) : ProblemBase*
	+{abstract} GetScatteringXS(const std::vector<double>& energies) : VectorVector
	+{abstract} GetTotalXS(const std::vector<double>& energies) : VectorVector
	+{abstract} SetupIC() : VectorVector
	+{abstract} GetExternalSource(const std::vector<double>& energies) : std::vector<VectorVector>
	+GetDensity(const VectorVector& cellMidPoints) : std::vector<double>
	+{abstract} GetStoppingPower(const std::vector<double>& energies) : std::vector<double>
	#_density : std::vector<double>
	#_stoppingPower : std::vector<double>
}


class QDummy {
	+QDummy(unsigned order)
	+~QDummy()
	+SetConnectivity() : void
	+SetName() : void
	+SetNq() : void
	+SetPointsAndWeights() : void
}


class QGaussLegendre1D {
	+QGaussLegendre1D(unsigned order)
	+~QGaussLegendre1D()
	-CheckOrder() : bool
	-Pythag(const double a, const double b) : double
	-ComputeEigenValTriDiagMatrix(const Matrix& mat) : std::pair<Vector , Matrix>
	+SetConnectivity() : void
	+SetName() : void
	+SetNq() : void
	+SetPointsAndWeights() : void
}


class QGaussLegendreTensorized {
	+QGaussLegendreTensorized(unsigned order)
	+~QGaussLegendreTensorized()
	-CheckOrder() : bool
	-Pythag(const double a, const double b) : double
	-ComputeEigenValTriDiagMatrix(const Matrix& mat) : std::pair<Vector , Matrix>
	+SetConnectivity() : void
	+SetName() : void
	+SetNq() : void
	+SetPointsAndWeights() : void
}


class QLDFESA {
	+QLDFESA(unsigned order)
	+~QLDFESA()
	+GetLookupTable() : std::string
	+SetAvailOrders() : void
	+SetConnectivity() : void
	+SetName() : void
}


class QLebedev {
	+QLebedev(unsigned order)
	+~QLebedev()
	+GetLookupTable() : std::string
	+SetAvailOrders() : void
	+SetConnectivity() : void
	+SetName() : void
}


class QLevelSymmetric {
	+QLevelSymmetric(unsigned order)
	+~QLevelSymmetric()
	+GetLookupTable() : std::string
	+SetAvailOrders() : void
	+SetConnectivity() : void
	+SetName() : void
}


abstract class QLookupQuadrature {
	+QLookupQuadrature(unsigned order)
	+~QLookupQuadrature()
	#CheckOrder() : bool
	#{abstract} GetLookupTable() : std::string
	#_availableOrders : std::vector<unsigned>
	#_nqByOrder : std::vector<unsigned>
	+getAvailOrders() : std::vector<unsigned> {query}
	#{abstract} SetAvailOrders() : void
	#SetNq() : void
	#SetPointsAndWeights() : void
	+printAvailOrders() : void {query}
}


class QMonteCarlo {
	+QMonteCarlo(unsigned order)
	+~QMonteCarlo()
	+SetConnectivity() : void
	+SetName() : void
	+SetNq() : void
	+SetPointsAndWeights() : void
}


abstract class QuadratureBase {
	+QuadratureBase(unsigned order)
	+~QuadratureBase()
	+{static} CreateQuadrature(QUAD_NAME name, unsigned order) : QuadratureBase*
	+GetWeights() : Vector {query}
	#_weights : Vector
	+GetPoints() : VectorVector {query}
	#_points : VectorVector
	+GetConnectivity() : VectorVectorU {query}
	#_connectivity : VectorVectorU
	+Integrate(double(f)(doublex0,doublex1,doublex2)) : double
	+SumUpWeights() : double
	+GetName() : std::string {query}
	#_name : std::string
	+Integrate(std::vector<double >(f)(doublex0,doublex1,doublex2), unsigned len) : std::vector<double>
	+GetNq() : unsigned {query}
	+GetOrder() : unsigned {query}
	#_nq : unsigned
	#_order : unsigned
	+PrintPoints() : void
	+PrintPointsAndWeights() : void
	+PrintWeights() : void
	#{abstract} SetConnectivity() : void
	#{abstract} SetName() : void
	#{abstract} SetNq() : void
	#SetOrder(unsigned order) : void
	#{abstract} SetPointsAndWeights() : void
}


class Reconstructor {
	+Reconstructor(Config* settings)
	+ReconstructSlopeStruct(double uL, double uC, double uR, double dxL, double dxR, std::string limiter) : double {query}
}


class SNSolver {
	+SNSolver(Config* settings)
	+Save() : void {query}
	+Save(int currEnergy) : void {query}
	+Solve() : void
}


class SNSolverMPI {
	+SNSolverMPI(Config* settings)
	+Save() : void {query}
	+Solve() : void
}


abstract class ScatteringKernel {
	-ScatteringKernel()
	+ScatteringKernel(QuadratureBase* quad)
	+~ScatteringKernel()
	+{abstract} GetScatteringKernel() : Matrix
	#_quad : QuadratureBase*
	+{static} CreateScatteringKernel(KERNEL_NAME name, QuadratureBase* quad) : ScatteringKernel*
}


abstract class Solver {
	+Solver(Config* settings)
	+~Solver()
	#_settings : Config*
	#_scatteringKernel : Matrix
	#_mesh : Mesh*
	#_g : NumericalFlux*
	#_problem : ProblemBase*
	+{static} Create(Config* settings) : Solver*
	#_weights : Vector
	#_psi : VectorVector
	#_quadPoints : VectorVector
	#_sigmaS : VectorVector
	#_sigmaT : VectorVector
	#ComputeTimeStep(double cfl) : double {query}
	#_dE : double
	#_boundaryCells : std::vector<BOUNDARY_TYPE>
	#_Q : std::vector<VectorVector>
	#_areas : std::vector<double>
	#_density : std::vector<double>
	#_energies : std::vector<double>
	#_s : std::vector<double>
	#_solverOutput : std::vector<double>
	#_normals : std::vector<std::vector<Vector> >
	#_neighbors : std::vector<std::vector<unsigned> >
	#_nCells : unsigned
	#_nEnergies : unsigned
	#_nq : unsigned
	+{abstract} Save() : void {query}
	+{abstract} Save(int currEnergy) : void {query}
	+{abstract} Solve() : void
}


class SphericalHarmonics {
	+SphericalHarmonics(unsigned L_degree)
	+ComputeSphericalBasis(double my, double phi) : std::vector<double>
	+ComputeSphericalBasis(double x, double y, double z) : std::vector<double>
	-_YBasis : std::vector<double>
	-_aParam : std::vector<double>
	-_assLegendreP : std::vector<double>
	-_bParam : std::vector<double>
	-GlobalIdxAssLegendreP(unsigned l_degree, unsigned k_order) : unsigned
	-GlobalIdxBasis(unsigned l_degree, unsigned k_order) : unsigned
	-_LMaxDegree : unsigned
	-ComputeAssLegendrePoly(const double my) : void
	-ComputeCoefficients() : void
	-ComputeYBasis(const double phi) : void
}


class Spline {
	+Spline()
	-m_a : Vector
	-m_b : Vector
	-m_c : Vector
	-m_x : Vector
	-m_y : Vector
	-m_left : bd_type
	-m_right : bd_type
	-m_force_linear_extrapolation : bool
	-m_b0 : double
	-m_c0 : double
	-m_left_value : double
	-m_right_value : double
	+operator()(double x) : double {query}
	+set_boundary(bd_type left, double left_value, bd_type right, double right_value, bool force_linear_extrapolation) : void
	+set_points(const std::vector<double>& x, const std::vector<double>& y, bool cubic_Spline) : void
	+set_points(const Vector& x, const Vector& y, bool cubic_Spline) : void
}


class UpwindFlux {
	+UpwindFlux(Config* settings)
	+Flux(const Matrix AxPlus, const Matrix AxMinus, const Matrix AyPlus, const Matrix AyMinus, const Matrix AzPlus, const Matrix AzMinus, const Vector psiL, const Vector psiR, const Vector n) : Vector {query}
	+Flux(const Vector& Omega, double psiL, double psiR, const Vector& n) : double {query}
	+FluxVanLeer(const Matrix& Ax, const Matrix& AxAbs, const Matrix& Ay, const Matrix& AyAbs, const Matrix& Az, const Matrix& AzAbs, const Vector& psiL, const Vector& psiR, const Vector& n, Vector& resultFlux) : void {query}
}


class WaterPhantom {
	-WaterPhantom()
	+WaterPhantom(Config* settings, Mesh* mesh)
	+~WaterPhantom()
	+SetupIC() : VectorVector
	+GetExternalSource(const std::vector<double>& energies) : std::vector<VectorVector>
	+GetDensity(const VectorVector& cellMidPoints) : std::vector<double>
	+GetStoppingPower(const std::vector<double>& energies) : std::vector<double>
}


enum BOUNDARY_TYPE {
	DIRICHLET
	INVALID
	NEUMANN
	NONE
}


enum KERNEL_NAME {
	KERNEL_Isotropic
	KERNEL_Isotropic1D
}


enum PROBLEM_NAME {
	PROBLEM_Checkerboard
	PROBLEM_ElectronRT
	PROBLEM_LineSource
	PROBLEM_LineSource_Pseudo_1D
	PROBLEM_WaterPhantom
}


enum QUAD_NAME {
	QUAD_GaussLegendre1D
	QUAD_GaussLegendreTensorized
	QUAD_LDFESA
	QUAD_Lebedev
	QUAD_LevelSymmetric
	QUAD_MonteCarlo
}


enum SOLVER_NAME {
	PN_SOLVER
	SN_SOLVER
}






ElectronRT <|- - WaterPhantom


LineSource_SN <|- - LineSource_SN_Pseudo1D


NumericalFlux <|- - LaxFriedrichsFlux


NumericalFlux <|- - UpwindFlux


OptionBase <|- - COptionUShort


OptionBase <|- - OptionBool


OptionBase <|- - OptionDouble


OptionBase <|- - OptionEnum


OptionBase <|- - OptionInt


OptionBase <|- - OptionLong


OptionBase <|- - OptionString


OptionBase <|- - OptionStringList


OptionBase <|- - OptionULong


ProblemBase <|- - Checkerboard


ProblemBase <|- - ElectronRT


ProblemBase <|- - LineSource_PN


ProblemBase <|- - LineSource_SN


QLookupQuadrature <|- - QLDFESA


QLookupQuadrature <|- - QLebedev


QLookupQuadrature <|- - QLevelSymmetric


QuadratureBase <|- - QDummy


QuadratureBase <|- - QGaussLegendre1D


QuadratureBase <|- - QGaussLegendreTensorized


QuadratureBase <|- - QLookupQuadrature


QuadratureBase <|- - QMonteCarlo


ScatteringKernel <|- - Isotropic


ScatteringKernel <|- - Isotropic1D


Solver <|- - CSDSNSolver


Solver <|- - MNSolver


Solver <|- - PNSolver


Solver <|- - SNSolver


Solver <|- - SNSolverMPI






Config o- - OptionBase


MNSolver o- - QuadratureBase


MNSolver *- - SphericalHarmonics


ProblemBase o- - Config


ProblemBase o- - Mesh


ProblemBase o- - Physics


ScatteringKernel o- - QuadratureBase


Solver o- - Config


Solver o- - Mesh


Solver o- - NumericalFlux


Solver o- - ProblemBase





@enduml

PlantUML version 1.2020.07(Sun Apr 19 13:42:40 CEST 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 1.8.0_252-b09
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>