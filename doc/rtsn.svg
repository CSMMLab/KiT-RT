<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1234px" preserveAspectRatio="none" style="width:3389px;height:1234px;" version="1.1" viewBox="0 0 3389 1234" width="3389px" zoomAndPan="magnify"><defs><filter height="300%" id="f15j5t2yauxf8m" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[041e745b51d1bd870567d4f38869c776]
class LaxFriedrichsFlux--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="87.5997" id="LaxFriedrichsFlux" style="stroke: #A80036; stroke-width: 1.5;" width="451" x="588.5" y="1115.5"/><ellipse cx="761.25" cy="1131.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M756.25,1132.6563 C756.25,1135.1563 758.3906,1136.9688 761.3125,1136.9688 C762.5469,1136.9688 763.7188,1136.6719 764.4688,1136.1563 C765.0781,1135.7344 765.4063,1135.3125 765.4063,1134.9063 C765.4063,1134.4375 764.9844,1134.0313 764.4844,1134.0313 C764.25,1134.0313 764.0313,1134.1094 763.8281,1134.3125 C763.3906,1134.75 763.3906,1134.75 763.2188,1134.8438 C762.7656,1135.0781 762.125,1135.2188 761.3594,1135.2188 C759.3594,1135.2188 758.0781,1134.2031 758.0781,1132.625 L758.0781,1131.5781 C758.0781,1129.875 759.2969,1128.6719 761,1128.6719 C761.5781,1128.6719 762.1563,1128.8125 762.625,1129.0625 C763.0938,1129.3281 763.2656,1129.5156 763.3281,1129.875 C763.4531,1130.5469 763.7031,1130.7969 764.2344,1130.7969 C764.5156,1130.7969 764.7969,1130.6563 764.9844,1130.4375 C765.1094,1130.2656 765.1563,1130.0938 765.1563,1129.6563 L765.1563,1128.2969 C765.1563,1127.875 765.1406,1127.7344 765.0156,1127.5625 C764.8438,1127.3125 764.5625,1127.1563 764.2344,1127.1563 C763.9219,1127.1563 763.7188,1127.2656 763.5,1127.5313 C762.3281,1127.0313 761.8906,1126.9219 760.9375,1126.9219 C758.2656,1126.9219 756.25,1128.9375 756.25,1131.5625 L756.25,1132.6563 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="781.75" y="1135.448">LaxFriedrichsFlux</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="589.5" x2="1038.5" y1="1147.5" y2="1147.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="596.5" y="1155.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="608.5" y="1161.7189">_dt : double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="589.5" x2="1038.5" y1="1168.6999" y2="1168.6999"/><ellipse cx="599.5" cy="1179.6999" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="608.5" y="1182.9188">LaxFriedrichsFlux(Config* settings)</text><ellipse cx="599.5" cy="1192.8998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="608.5" y="1196.1187">Flux(const Vector&amp; Omega, double psiL, double psiR, const Vector&amp; n) : double {query}</text><!--MD5=[49b4333bed3a745cc53311fcf54bbfcc]
class Mesh--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="549.5963" id="Mesh" style="stroke: #A80036; stroke-width: 1.5;" width="790" x="6" y="486"/><ellipse cx="381.75" cy="502" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M376.75,503.1563 C376.75,505.6563 378.8906,507.4688 381.8125,507.4688 C383.0469,507.4688 384.2188,507.1719 384.9688,506.6563 C385.5781,506.2344 385.9063,505.8125 385.9063,505.4063 C385.9063,504.9375 385.4844,504.5313 384.9844,504.5313 C384.75,504.5313 384.5313,504.6094 384.3281,504.8125 C383.8906,505.25 383.8906,505.25 383.7188,505.3438 C383.2656,505.5781 382.625,505.7188 381.8594,505.7188 C379.8594,505.7188 378.5781,504.7031 378.5781,503.125 L378.5781,502.0781 C378.5781,500.375 379.7969,499.1719 381.5,499.1719 C382.0781,499.1719 382.6563,499.3125 383.125,499.5625 C383.5938,499.8281 383.7656,500.0156 383.8281,500.375 C383.9531,501.0469 384.2031,501.2969 384.7344,501.2969 C385.0156,501.2969 385.2969,501.1563 385.4844,500.9375 C385.6094,500.7656 385.6563,500.5938 385.6563,500.1563 L385.6563,498.7969 C385.6563,498.375 385.6406,498.2344 385.5156,498.0625 C385.3438,497.8125 385.0625,497.6563 384.7344,497.6563 C384.4219,497.6563 384.2188,497.7656 384,498.0313 C382.8281,497.5313 382.3906,497.4219 381.4375,497.4219 C378.7656,497.4219 376.75,499.4375 376.75,502.0625 L376.75,503.1563 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="402.25" y="505.948">Mesh</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="795" y1="518" y2="518"/><polygon fill="none" points="17,524,21,528,17,532,13,528" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="26" y="532.2189">_nodeNeighbors : blaze::CompressedMatrix&lt;bool&gt;</text><polygon fill="none" points="17,537.1999,21,541.1999,17,545.1999,13,541.1999" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="26" y="545.4188">_dim : const unsigned</text><polygon fill="none" points="17,550.3998,21,554.3998,17,558.3998,13,554.3998" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="26" y="558.6187">_ghostCellID : const unsigned</text><polygon fill="none" points="17,563.5997,21,567.5997,17,571.5997,13,567.5997" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="571.8186">_numBoundaries : const unsigned</text><polygon fill="none" points="17,576.7996,21,580.7996,17,584.7996,13,580.7996" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="26" y="585.0185">_numCells : const unsigned</text><polygon fill="none" points="17,589.9995,21,593.9995,17,597.9995,13,593.9995" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="26" y="598.2184">_numNodes : const unsigned</text><polygon fill="none" points="17,603.1994,21,607.1994,17,611.1994,13,607.1994" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="26" y="611.4183">_numNodesPerCell : const unsigned</text><polygon fill="none" points="17,616.3993,21,620.3993,17,624.3993,13,620.3993" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="26" y="624.6182">_log : std::shared_ptr&lt;spdlog::logger&gt;</text><polygon fill="none" points="17,629.5992,21,633.5992,17,637.5992,13,633.5992" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="26" y="637.8181">_cellMidPoints : std::vector&lt;Vector&gt;</text><polygon fill="none" points="17,642.7991,21,646.7991,17,650.7991,13,646.7991" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="26" y="651.018">_nodes : std::vector&lt;Vector&gt;</text><polygon fill="none" points="17,655.999,21,659.999,17,663.999,13,659.999" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="26" y="664.2179">_isBoundaryCell : std::vector&lt;bool&gt;</text><polygon fill="none" points="17,669.1989,21,673.1989,17,677.1989,13,673.1989" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="26" y="677.4178">_cellAreas : std::vector&lt;double&gt;</text><polygon fill="none" points="17,682.3988,21,686.3988,17,690.3988,13,686.3988" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="400" x="26" y="690.6177">_boundaries : std::vector&lt;std::pair&lt;BOUNDARY_TYPE, std::vector&lt;unsigned&gt; &gt; &gt;</text><polygon fill="none" points="17,695.5987,21,699.5987,17,703.5987,13,699.5987" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="26" y="703.8176">_cellNormals : std::vector&lt;std::vector&lt;Vector&gt; &gt;</text><polygon fill="none" points="17,708.7986,21,712.7986,17,716.7986,13,712.7986" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="26" y="717.0175">_cellNeighbors : std::vector&lt;std::vector&lt;unsigned&gt; &gt;</text><polygon fill="none" points="17,721.9985,21,725.9985,17,729.9985,13,725.9985" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="26" y="730.2174">_cells : std::vector&lt;std::vector&lt;unsigned&gt; &gt;</text><polygon fill="none" points="17,735.1984,21,739.1984,17,743.1984,13,739.1984" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="26" y="743.4173">_colors : std::vector&lt;unsigned&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="795" y1="750.3983" y2="750.3983"/><ellipse cx="17" cy="761.3983" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="26" y="764.6173">Mesh()</text><ellipse cx="17" cy="774.5982" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="764" x="26" y="777.8172">Mesh(std::vector&lt;Vector&gt; nodes, std::vector&lt;std::vector&lt;unsigned&gt; &gt; cells, std::vector&lt;std::pair&lt;BOUNDARY_TYPE, std::vector&lt;unsigned&gt; &gt; &gt; boundaries)</text><ellipse cx="17" cy="787.7981" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="26" y="791.0171">~Mesh()</text><polygon fill="#FFFF44" points="17,795.998,21,799.998,17,803.998,13,799.998" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="26" y="804.217">ComputeOutwardFacingNormal(const Vector&amp; nodeA, const Vector&amp; nodeB, const Vector&amp; cellCenter) : Vector</text><ellipse cx="17" cy="814.1979" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="26" y="817.4169">GetCellMidPoints() : std::vector&lt;Vector&gt;&amp; {query}</text><ellipse cx="17" cy="827.3978" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="26" y="830.6168">GetNodes() : std::vector&lt;Vector&gt;&amp; {query}</text><ellipse cx="17" cy="840.5977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="26" y="843.8167">GetBoundaryCellArray() : std::vector&lt;bool&gt;&amp; {query}</text><ellipse cx="17" cy="853.7976" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="26" y="857.0166">GetCellAreas() : std::vector&lt;double&gt;&amp; {query}</text><ellipse cx="17" cy="866.9975" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="26" y="870.2165">GetNormals() : std::vector&lt;std::vector&lt;Vector&gt; &gt;&amp; {query}</text><ellipse cx="17" cy="880.1974" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="26" y="883.4164">GetCells() : std::vector&lt;std::vector&lt;unsigned&gt; &gt;&amp; {query}</text><ellipse cx="17" cy="893.3973" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="26" y="896.6163">GetNeighbours() : std::vector&lt;std::vector&lt;unsigned&gt; &gt;&amp; {query}</text><ellipse cx="17" cy="906.5972" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="26" y="909.8162">GetPartitionIDs() : std::vector&lt;unsigned&gt;&amp; {query}</text><ellipse cx="17" cy="919.7971" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="26" y="923.0161">GetDim() : unsigned {query}</text><ellipse cx="17" cy="932.997" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="936.216">GetNumCells() : unsigned {query}</text><ellipse cx="17" cy="946.1969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="26" y="949.4159">GetNumNodes() : unsigned {query}</text><ellipse cx="17" cy="959.3969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="26" y="962.6158">GetNumNodesPerCell() : unsigned {query}</text><polygon fill="#FFFF44" points="17,967.5968,21,971.5968,17,975.5968,13,971.5968" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="26" y="975.8157">ComputeCellAreas() : void</text><polygon fill="#FFFF44" points="17,980.7967,21,984.7967,17,988.7967,13,984.7967" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="26" y="989.0156">ComputeCellMidpoints() : void</text><polygon fill="#FFFF44" points="17,993.9966,21,997.9966,17,1001.9966,13,997.9966" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="26" y="1002.2155">ComputeConnectivity() : void</text><polygon fill="#FFFF44" points="17,1007.1965,21,1011.1965,17,1015.1965,13,1011.1965" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="26" y="1015.4154">ComputePartitioning() : void</text><ellipse cx="17" cy="1025.3964" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="574" x="26" y="1028.6153">ComputeSlopes(unsigned nq, VectorVector&amp; psiDerX, VectorVector&amp; psiDerY, const VectorVector&amp; psi) : void {query}</text><!--MD5=[63c6af204b72495afb767f03716ed6bb]
class NumericalFlux--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="87.5997" id="NumericalFlux" style="stroke: #A80036; stroke-width: 1.5;" width="451" x="831.5" y="717"/><ellipse cx="1013.25" cy="733" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1014.7813,734.9375 L1015.1094,735.7344 L1014.8281,735.7344 C1014.375,735.7344 1014.25,735.7656 1014.0781,735.875 C1013.7969,736.0156 1013.625,736.3125 1013.625,736.6094 C1013.625,736.9063 1013.7656,737.1563 1014,737.3281 C1014.1719,737.4531 1014.4063,737.5 1014.8281,737.5 L1017.1875,737.5 C1017.5469,737.5 1017.7969,737.4688 1017.9375,737.375 C1018.2031,737.2344 1018.375,736.9219 1018.375,736.6094 C1018.375,736.3438 1018.2344,736.0781 1018,735.9063 C1017.8125,735.7813 1017.6563,735.75 1017.2031,735.7344 L1013.8125,727.9063 L1010.0938,727.9063 C1009.6406,727.9063 1009.5,727.9219 1009.3281,728.0313 C1009.0625,728.2031 1008.8906,728.4844 1008.8906,728.7813 C1008.8906,729.0625 1009.0313,729.3281 1009.2813,729.5 C1009.4531,729.625 1009.6406,729.6563 1010.0938,729.6563 L1011.0625,729.6563 L1008.4844,735.7344 C1007.7344,735.7344 1007.3281,736.0313 1007.3281,736.6094 C1007.3281,737.2188 1007.7188,737.5 1008.5156,737.5 L1010.7813,737.5 C1011.1406,737.5 1011.3906,737.4688 1011.5313,737.375 C1011.7969,737.2188 1011.9688,736.9219 1011.9688,736.6094 C1011.9688,736.3438 1011.8281,736.0781 1011.5938,735.9063 C1011.4063,735.7656 1011.25,735.7344 1010.7813,735.7344 L1010.4844,735.7344 L1010.8281,734.9375 L1014.7813,734.9375 Z M1014.0156,733.1875 L1011.5625,733.1875 L1012.7969,730.3125 L1014.0156,733.1875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="79" x="1033.75" y="736.948">NumericalFlux</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="832.5" x2="1281.5" y1="749" y2="749"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="832.5" x2="1281.5" y1="757" y2="757"/><ellipse cx="842.5" cy="768" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="851.5" y="771.2189">NumericalFlux(Config* settings)</text><ellipse cx="842.5" cy="781.1999" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="200" x="851.5" y="784.4188">Create(Config* settings) : NumericalFlux*</text><ellipse cx="842.5" cy="794.3998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="425" x="851.5" y="797.6187">Flux(const Vector&amp; Omega, double psiL, double psiR, const Vector&amp; n) : double {query}</text><!--MD5=[b78e42fe1f33f5c4bf0e37a39b0075a9]
class Physics--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="153.5992" id="Physics" style="stroke: #A80036; stroke-width: 1.5;" width="616" x="1224" y="140"/><ellipse cx="1506.75" cy="156" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1501.75,157.1563 C1501.75,159.6563 1503.8906,161.4688 1506.8125,161.4688 C1508.0469,161.4688 1509.2188,161.1719 1509.9688,160.6563 C1510.5781,160.2344 1510.9063,159.8125 1510.9063,159.4063 C1510.9063,158.9375 1510.4844,158.5313 1509.9844,158.5313 C1509.75,158.5313 1509.5313,158.6094 1509.3281,158.8125 C1508.8906,159.25 1508.8906,159.25 1508.7188,159.3438 C1508.2656,159.5781 1507.625,159.7188 1506.8594,159.7188 C1504.8594,159.7188 1503.5781,158.7031 1503.5781,157.125 L1503.5781,156.0781 C1503.5781,154.375 1504.7969,153.1719 1506.5,153.1719 C1507.0781,153.1719 1507.6563,153.3125 1508.125,153.5625 C1508.5938,153.8281 1508.7656,154.0156 1508.8281,154.375 C1508.9531,155.0469 1509.2031,155.2969 1509.7344,155.2969 C1510.0156,155.2969 1510.2969,155.1563 1510.4844,154.9375 C1510.6094,154.7656 1510.6563,154.5938 1510.6563,154.1563 L1510.6563,152.7969 C1510.6563,152.375 1510.6406,152.2344 1510.5156,152.0625 C1510.3438,151.8125 1510.0625,151.6563 1509.7344,151.6563 C1509.4219,151.6563 1509.2188,151.7656 1509,152.0313 C1507.8281,151.5313 1507.3906,151.4219 1506.4375,151.4219 C1503.7656,151.4219 1501.75,153.4375 1501.75,156.0625 L1501.75,157.1563 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="42" x="1527.25" y="159.948">Physics</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1225" x2="1839" y1="172" y2="172"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1232" y="180"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1244" y="186.2189">_totalxsH2O : Matrix</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1232" y="193.1999"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1244" y="199.4188">_xsH2O : Matrix</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1225" x2="1839" y1="206.3998" y2="206.3998"/><ellipse cx="1235" cy="217.3998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1244" y="220.6187">Physics(Config* settings)</text><ellipse cx="1235" cy="230.5997" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="169" x="1244" y="233.8186">Create(Config* settings) : Physics*</text><ellipse cx="1235" cy="243.7996" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="590" x="1244" y="247.0185">GetScatteringXS(std::vector&lt;double&gt; energies, std::vector&lt;double&gt; density, std::vector&lt;double&gt; Omegas) : VectorVector</text><ellipse cx="1235" cy="256.9995" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="447" x="1244" y="260.2184">GetStoppingPower(std::vector&lt;double&gt; energies, std::vector&lt;double&gt; sH2O) : VectorVector</text><ellipse cx="1235" cy="270.1994" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="418" x="1244" y="273.4183">GetTotalXS(std::vector&lt;double&gt; energies, std::vector&lt;double&gt; density) : VectorVector</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1232" y="280.3993"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="1244" y="286.6182">LoadXSH2O(std::string fileName1, std::string fileName2) : void</text><!--MD5=[296293fbdb23d0a6b21645666f72f612]
class QDummy--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="127.1994" id="QDummy" style="stroke: #A80036; stroke-width: 1.5;" width="167" x="1628.5" y="697.5"/><ellipse cx="1682.25" cy="713.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1677.25,714.6563 C1677.25,717.1563 1679.3906,718.9688 1682.3125,718.9688 C1683.5469,718.9688 1684.7188,718.6719 1685.4688,718.1563 C1686.0781,717.7344 1686.4063,717.3125 1686.4063,716.9063 C1686.4063,716.4375 1685.9844,716.0313 1685.4844,716.0313 C1685.25,716.0313 1685.0313,716.1094 1684.8281,716.3125 C1684.3906,716.75 1684.3906,716.75 1684.2188,716.8438 C1683.7656,717.0781 1683.125,717.2188 1682.3594,717.2188 C1680.3594,717.2188 1679.0781,716.2031 1679.0781,714.625 L1679.0781,713.5781 C1679.0781,711.875 1680.2969,710.6719 1682,710.6719 C1682.5781,710.6719 1683.1563,710.8125 1683.625,711.0625 C1684.0938,711.3281 1684.2656,711.5156 1684.3281,711.875 C1684.4531,712.5469 1684.7031,712.7969 1685.2344,712.7969 C1685.5156,712.7969 1685.7969,712.6563 1685.9844,712.4375 C1686.1094,712.2656 1686.1563,712.0938 1686.1563,711.6563 L1686.1563,710.2969 C1686.1563,709.875 1686.1406,709.7344 1686.0156,709.5625 C1685.8438,709.3125 1685.5625,709.1563 1685.2344,709.1563 C1684.9219,709.1563 1684.7188,709.2656 1684.5,709.5313 C1683.3281,709.0313 1682.8906,708.9219 1681.9375,708.9219 C1679.2656,708.9219 1677.25,710.9375 1677.25,713.5625 L1677.25,714.6563 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="1702.75" y="717.448">QDummy</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1629.5" x2="1794.5" y1="729.5" y2="729.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1629.5" x2="1794.5" y1="737.5" y2="737.5"/><ellipse cx="1639.5" cy="748.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1648.5" y="751.7189">QDummy(unsigned order)</text><ellipse cx="1639.5" cy="761.6999" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="1648.5" y="764.9188">~QDummy()</text><ellipse cx="1639.5" cy="774.8998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1648.5" y="778.1187">SetConnectivity() : void</text><ellipse cx="1639.5" cy="788.0997" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1648.5" y="791.3186">SetName() : void</text><ellipse cx="1639.5" cy="801.2996" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="1648.5" y="804.5185">SetNq() : void</text><ellipse cx="1639.5" cy="814.4995" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1648.5" y="817.7184">SetPointsAndWeights() : void</text><!--MD5=[43fb1c5f2053cc224ff05d9a3a1d1cbc]
class QGaussLegendreTensorized--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="127.1994" id="QGaussLegendreTensorized" style="stroke: #A80036; stroke-width: 1.5;" width="250" x="1830" y="697.5"/><ellipse cx="1872" cy="713.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1867,714.6563 C1867,717.1563 1869.1406,718.9688 1872.0625,718.9688 C1873.2969,718.9688 1874.4688,718.6719 1875.2188,718.1563 C1875.8281,717.7344 1876.1563,717.3125 1876.1563,716.9063 C1876.1563,716.4375 1875.7344,716.0313 1875.2344,716.0313 C1875,716.0313 1874.7813,716.1094 1874.5781,716.3125 C1874.1406,716.75 1874.1406,716.75 1873.9688,716.8438 C1873.5156,717.0781 1872.875,717.2188 1872.1094,717.2188 C1870.1094,717.2188 1868.8281,716.2031 1868.8281,714.625 L1868.8281,713.5781 C1868.8281,711.875 1870.0469,710.6719 1871.75,710.6719 C1872.3281,710.6719 1872.9063,710.8125 1873.375,711.0625 C1873.8438,711.3281 1874.0156,711.5156 1874.0781,711.875 C1874.2031,712.5469 1874.4531,712.7969 1874.9844,712.7969 C1875.2656,712.7969 1875.5469,712.6563 1875.7344,712.4375 C1875.8594,712.2656 1875.9063,712.0938 1875.9063,711.6563 L1875.9063,710.2969 C1875.9063,709.875 1875.8906,709.7344 1875.7656,709.5625 C1875.5938,709.3125 1875.3125,709.1563 1874.9844,709.1563 C1874.6719,709.1563 1874.4688,709.2656 1874.25,709.5313 C1873.0781,709.0313 1872.6406,708.9219 1871.6875,708.9219 C1869.0156,708.9219 1867,710.9375 1867,713.5625 L1867,714.6563 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="158" x="1892" y="717.448">QGaussLegendreTensorized</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1831" x2="2079" y1="729.5" y2="729.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1831" x2="2079" y1="737.5" y2="737.5"/><ellipse cx="1841" cy="748.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="1850" y="751.7189">QGaussLegendreTensorized(unsigned order)</text><ellipse cx="1841" cy="761.6999" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="1850" y="764.9188">~QGaussLegendreTensorized()</text><ellipse cx="1841" cy="774.8998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1850" y="778.1187">SetConnectivity() : void</text><ellipse cx="1841" cy="788.0997" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1850" y="791.3186">SetName() : void</text><ellipse cx="1841" cy="801.2996" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="1850" y="804.5185">SetNq() : void</text><ellipse cx="1841" cy="814.4995" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1850" y="817.7184">SetPointsAndWeights() : void</text><!--MD5=[ac9a63b98acee02cdcc7ea962cb05a73]
class QLDFESA--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="127.1994" id="QLDFESA" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="1954" y="1096"/><ellipse cx="2007.75" cy="1112" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2002.75,1113.1563 C2002.75,1115.6563 2004.8906,1117.4688 2007.8125,1117.4688 C2009.0469,1117.4688 2010.2188,1117.1719 2010.9688,1116.6563 C2011.5781,1116.2344 2011.9063,1115.8125 2011.9063,1115.4063 C2011.9063,1114.9375 2011.4844,1114.5313 2010.9844,1114.5313 C2010.75,1114.5313 2010.5313,1114.6094 2010.3281,1114.8125 C2009.8906,1115.25 2009.8906,1115.25 2009.7188,1115.3438 C2009.2656,1115.5781 2008.625,1115.7188 2007.8594,1115.7188 C2005.8594,1115.7188 2004.5781,1114.7031 2004.5781,1113.125 L2004.5781,1112.0781 C2004.5781,1110.375 2005.7969,1109.1719 2007.5,1109.1719 C2008.0781,1109.1719 2008.6563,1109.3125 2009.125,1109.5625 C2009.5938,1109.8281 2009.7656,1110.0156 2009.8281,1110.375 C2009.9531,1111.0469 2010.2031,1111.2969 2010.7344,1111.2969 C2011.0156,1111.2969 2011.2969,1111.1563 2011.4844,1110.9375 C2011.6094,1110.7656 2011.6563,1110.5938 2011.6563,1110.1563 L2011.6563,1108.7969 C2011.6563,1108.375 2011.6406,1108.2344 2011.5156,1108.0625 C2011.3438,1107.8125 2011.0625,1107.6563 2010.7344,1107.6563 C2010.4219,1107.6563 2010.2188,1107.7656 2010,1108.0313 C2008.8281,1107.5313 2008.3906,1107.4219 2007.4375,1107.4219 C2004.7656,1107.4219 2002.75,1109.4375 2002.75,1112.0625 L2002.75,1113.1563 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="2028.25" y="1115.948">QLDFESA</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1955" x2="2125" y1="1128" y2="1128"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1955" x2="2125" y1="1136" y2="1136"/><ellipse cx="1965" cy="1147" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1974" y="1150.2189">QLDFESA(unsigned order)</text><ellipse cx="1965" cy="1160.1999" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="1974" y="1163.4188">~QLDFESA()</text><ellipse cx="1965" cy="1173.3998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1974" y="1176.6187">GetLookupTable() : std::string</text><ellipse cx="1965" cy="1186.5997" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="1974" y="1189.8186">SetAvailOrders() : void</text><ellipse cx="1965" cy="1199.7996" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1974" y="1203.0185">SetConnectivity() : void</text><ellipse cx="1965" cy="1212.9995" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1974" y="1216.2184">SetName() : void</text><!--MD5=[dc3edd32582cc9c24358ef5ad5d35bc3]
class QLebedev--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="127.1994" id="QLebedev" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="2161" y="1096"/><ellipse cx="2214.25" cy="1112" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2209.25,1113.1563 C2209.25,1115.6563 2211.3906,1117.4688 2214.3125,1117.4688 C2215.5469,1117.4688 2216.7188,1117.1719 2217.4688,1116.6563 C2218.0781,1116.2344 2218.4063,1115.8125 2218.4063,1115.4063 C2218.4063,1114.9375 2217.9844,1114.5313 2217.4844,1114.5313 C2217.25,1114.5313 2217.0313,1114.6094 2216.8281,1114.8125 C2216.3906,1115.25 2216.3906,1115.25 2216.2188,1115.3438 C2215.7656,1115.5781 2215.125,1115.7188 2214.3594,1115.7188 C2212.3594,1115.7188 2211.0781,1114.7031 2211.0781,1113.125 L2211.0781,1112.0781 C2211.0781,1110.375 2212.2969,1109.1719 2214,1109.1719 C2214.5781,1109.1719 2215.1563,1109.3125 2215.625,1109.5625 C2216.0938,1109.8281 2216.2656,1110.0156 2216.3281,1110.375 C2216.4531,1111.0469 2216.7031,1111.2969 2217.2344,1111.2969 C2217.5156,1111.2969 2217.7969,1111.1563 2217.9844,1110.9375 C2218.1094,1110.7656 2218.1563,1110.5938 2218.1563,1110.1563 L2218.1563,1108.7969 C2218.1563,1108.375 2218.1406,1108.2344 2218.0156,1108.0625 C2217.8438,1107.8125 2217.5625,1107.6563 2217.2344,1107.6563 C2216.9219,1107.6563 2216.7188,1107.7656 2216.5,1108.0313 C2215.3281,1107.5313 2214.8906,1107.4219 2213.9375,1107.4219 C2211.2656,1107.4219 2209.25,1109.4375 2209.25,1112.0625 L2209.25,1113.1563 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="2234.75" y="1115.948">QLebedev</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2162" x2="2332" y1="1128" y2="1128"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2162" x2="2332" y1="1136" y2="1136"/><ellipse cx="2172" cy="1147" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2181" y="1150.2189">QLebedev(unsigned order)</text><ellipse cx="2172" cy="1160.1999" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="2181" y="1163.4188">~QLebedev()</text><ellipse cx="2172" cy="1173.3998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2181" y="1176.6187">GetLookupTable() : std::string</text><ellipse cx="2172" cy="1186.5997" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="2181" y="1189.8186">SetAvailOrders() : void</text><ellipse cx="2172" cy="1199.7996" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="2181" y="1203.0185">SetConnectivity() : void</text><ellipse cx="2172" cy="1212.9995" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="2181" y="1216.2184">SetName() : void</text><!--MD5=[32917a1120b013c593a0f5a6a5c75a15]
class QLevelSymmetric--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="127.1994" id="QLevelSymmetric" style="stroke: #A80036; stroke-width: 1.5;" width="194" x="2368" y="1096"/><ellipse cx="2412.75" cy="1112" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2407.75,1113.1563 C2407.75,1115.6563 2409.8906,1117.4688 2412.8125,1117.4688 C2414.0469,1117.4688 2415.2188,1117.1719 2415.9688,1116.6563 C2416.5781,1116.2344 2416.9063,1115.8125 2416.9063,1115.4063 C2416.9063,1114.9375 2416.4844,1114.5313 2415.9844,1114.5313 C2415.75,1114.5313 2415.5313,1114.6094 2415.3281,1114.8125 C2414.8906,1115.25 2414.8906,1115.25 2414.7188,1115.3438 C2414.2656,1115.5781 2413.625,1115.7188 2412.8594,1115.7188 C2410.8594,1115.7188 2409.5781,1114.7031 2409.5781,1113.125 L2409.5781,1112.0781 C2409.5781,1110.375 2410.7969,1109.1719 2412.5,1109.1719 C2413.0781,1109.1719 2413.6563,1109.3125 2414.125,1109.5625 C2414.5938,1109.8281 2414.7656,1110.0156 2414.8281,1110.375 C2414.9531,1111.0469 2415.2031,1111.2969 2415.7344,1111.2969 C2416.0156,1111.2969 2416.2969,1111.1563 2416.4844,1110.9375 C2416.6094,1110.7656 2416.6563,1110.5938 2416.6563,1110.1563 L2416.6563,1108.7969 C2416.6563,1108.375 2416.6406,1108.2344 2416.5156,1108.0625 C2416.3438,1107.8125 2416.0625,1107.6563 2415.7344,1107.6563 C2415.4219,1107.6563 2415.2188,1107.7656 2415,1108.0313 C2413.8281,1107.5313 2413.3906,1107.4219 2412.4375,1107.4219 C2409.7656,1107.4219 2407.75,1109.4375 2407.75,1112.0625 L2407.75,1113.1563 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="96" x="2433.25" y="1115.948">QLevelSymmetric</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2369" x2="2561" y1="1128" y2="1128"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2369" x2="2561" y1="1136" y2="1136"/><ellipse cx="2379" cy="1147" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2388" y="1150.2189">QLevelSymmetric(unsigned order)</text><ellipse cx="2379" cy="1160.1999" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2388" y="1163.4188">~QLevelSymmetric()</text><ellipse cx="2379" cy="1173.3998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2388" y="1176.6187">GetLookupTable() : std::string</text><ellipse cx="2379" cy="1186.5997" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="2388" y="1189.8186">SetAvailOrders() : void</text><ellipse cx="2379" cy="1199.7996" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="2388" y="1203.0185">SetConnectivity() : void</text><ellipse cx="2379" cy="1212.9995" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="2388" y="1216.2184">SetName() : void</text><!--MD5=[da3a73dd60c7a6cd3bfc963f796656da]
class QLookupQuadrature--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="193.1989" id="QLookupQuadrature" style="stroke: #A80036; stroke-width: 1.5;" width="263" x="2115.5" y="664.5"/><ellipse cx="2186.75" cy="680.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2188.2813,682.4375 L2188.6094,683.2344 L2188.3281,683.2344 C2187.875,683.2344 2187.75,683.2656 2187.5781,683.375 C2187.2969,683.5156 2187.125,683.8125 2187.125,684.1094 C2187.125,684.4063 2187.2656,684.6563 2187.5,684.8281 C2187.6719,684.9531 2187.9063,685 2188.3281,685 L2190.6875,685 C2191.0469,685 2191.2969,684.9688 2191.4375,684.875 C2191.7031,684.7344 2191.875,684.4219 2191.875,684.1094 C2191.875,683.8438 2191.7344,683.5781 2191.5,683.4063 C2191.3125,683.2813 2191.1563,683.25 2190.7031,683.2344 L2187.3125,675.4063 L2183.5938,675.4063 C2183.1406,675.4063 2183,675.4219 2182.8281,675.5313 C2182.5625,675.7031 2182.3906,675.9844 2182.3906,676.2813 C2182.3906,676.5625 2182.5313,676.8281 2182.7813,677 C2182.9531,677.125 2183.1406,677.1563 2183.5938,677.1563 L2184.5625,677.1563 L2181.9844,683.2344 C2181.2344,683.2344 2180.8281,683.5313 2180.8281,684.1094 C2180.8281,684.7188 2181.2188,685 2182.0156,685 L2184.2813,685 C2184.6406,685 2184.8906,684.9688 2185.0313,684.875 C2185.2969,684.7188 2185.4688,684.4219 2185.4688,684.1094 C2185.4688,683.8438 2185.3281,683.5781 2185.0938,683.4063 C2184.9063,683.2656 2184.75,683.2344 2184.2813,683.2344 L2183.9844,683.2344 L2184.3281,682.4375 L2188.2813,682.4375 Z M2187.5156,680.6875 L2185.0625,680.6875 L2186.2969,677.8125 L2187.5156,680.6875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="112" x="2207.25" y="684.448">QLookupQuadrature</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2116.5" x2="2377.5" y1="696.5" y2="696.5"/><polygon fill="none" points="2126.5,702.5,2130.5,706.5,2126.5,710.5,2122.5,706.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="2135.5" y="710.7189">_availableOrders : std::vector&lt;unsigned&gt;</text><polygon fill="none" points="2126.5,715.6999,2130.5,719.6999,2126.5,723.6999,2122.5,719.6999" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="2135.5" y="723.9188">_nqByOrder : std::vector&lt;unsigned&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2116.5" x2="2377.5" y1="730.8998" y2="730.8998"/><ellipse cx="2126.5" cy="741.8998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2135.5" y="745.1187">QLookupQuadrature(unsigned order)</text><ellipse cx="2126.5" cy="755.0997" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="2135.5" y="758.3186">~QLookupQuadrature()</text><polygon fill="#FFFF44" points="2126.5,763.2996,2130.5,767.2996,2126.5,771.2996,2122.5,767.2996" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="2135.5" y="771.5185">CheckOrder() : bool</text><polygon fill="#FFFF44" points="2126.5,776.4995,2130.5,780.4995,2126.5,784.4995,2122.5,780.4995" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="146" x="2135.5" y="784.7184">GetLookupTable() : std::string</text><ellipse cx="2126.5" cy="794.6994" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="2135.5" y="797.9183">getAvailOrders() : std::vector&lt;unsigned&gt; {query}</text><polygon fill="#FFFF44" points="2126.5,802.8993,2130.5,806.8993,2126.5,810.8993,2122.5,806.8993" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="111" x="2135.5" y="811.1182">SetAvailOrders() : void</text><polygon fill="#FFFF44" points="2126.5,816.0992,2130.5,820.0992,2126.5,824.0992,2122.5,820.0992" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="2135.5" y="824.3181">SetNq() : void</text><polygon fill="#FFFF44" points="2126.5,829.2991,2130.5,833.2991,2126.5,837.2991,2122.5,833.2991" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2135.5" y="837.518">SetPointsAndWeights() : void</text><ellipse cx="2126.5" cy="847.499" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="2135.5" y="850.7179">printAvailOrders() : void {query}</text><!--MD5=[7cd9cfd355b807b7d67babb7c40cfbb5]
class QMonteCarlo--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="127.1994" id="QMonteCarlo" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="2414" y="697.5"/><ellipse cx="2459.25" cy="713.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2454.25,714.6563 C2454.25,717.1563 2456.3906,718.9688 2459.3125,718.9688 C2460.5469,718.9688 2461.7188,718.6719 2462.4688,718.1563 C2463.0781,717.7344 2463.4063,717.3125 2463.4063,716.9063 C2463.4063,716.4375 2462.9844,716.0313 2462.4844,716.0313 C2462.25,716.0313 2462.0313,716.1094 2461.8281,716.3125 C2461.3906,716.75 2461.3906,716.75 2461.2188,716.8438 C2460.7656,717.0781 2460.125,717.2188 2459.3594,717.2188 C2457.3594,717.2188 2456.0781,716.2031 2456.0781,714.625 L2456.0781,713.5781 C2456.0781,711.875 2457.2969,710.6719 2459,710.6719 C2459.5781,710.6719 2460.1563,710.8125 2460.625,711.0625 C2461.0938,711.3281 2461.2656,711.5156 2461.3281,711.875 C2461.4531,712.5469 2461.7031,712.7969 2462.2344,712.7969 C2462.5156,712.7969 2462.7969,712.6563 2462.9844,712.4375 C2463.1094,712.2656 2463.1563,712.0938 2463.1563,711.6563 L2463.1563,710.2969 C2463.1563,709.875 2463.1406,709.7344 2463.0156,709.5625 C2462.8438,709.3125 2462.5625,709.1563 2462.2344,709.1563 C2461.9219,709.1563 2461.7188,709.2656 2461.5,709.5313 C2460.3281,709.0313 2459.8906,708.9219 2458.9375,708.9219 C2456.2656,708.9219 2454.25,710.9375 2454.25,713.5625 L2454.25,714.6563 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="73" x="2479.75" y="717.448">QMonteCarlo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2415" x2="2585" y1="729.5" y2="729.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2415" x2="2585" y1="737.5" y2="737.5"/><ellipse cx="2425" cy="748.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="2434" y="751.7189">QMonteCarlo(unsigned order)</text><ellipse cx="2425" cy="761.6999" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="2434" y="764.9188">~QMonteCarlo()</text><ellipse cx="2425" cy="774.8998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="2434" y="778.1187">SetConnectivity() : void</text><ellipse cx="2425" cy="788.0997" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="2434" y="791.3186">SetName() : void</text><ellipse cx="2425" cy="801.2996" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="2434" y="804.5185">SetNq() : void</text><ellipse cx="2425" cy="814.4995" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2434" y="817.7184">SetPointsAndWeights() : void</text><!--MD5=[0703d2d8d2d3d1a8b8965fa3fe3c728c]
class QuadratureBase--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="377.9975" id="QuadratureBase" style="stroke: #A80036; stroke-width: 1.5;" width="395" x="1875.5" y="28"/><ellipse cx="2023.75" cy="44" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2025.2813,45.9375 L2025.6094,46.7344 L2025.3281,46.7344 C2024.875,46.7344 2024.75,46.7656 2024.5781,46.875 C2024.2969,47.0156 2024.125,47.3125 2024.125,47.6094 C2024.125,47.9063 2024.2656,48.1563 2024.5,48.3281 C2024.6719,48.4531 2024.9063,48.5 2025.3281,48.5 L2027.6875,48.5 C2028.0469,48.5 2028.2969,48.4688 2028.4375,48.375 C2028.7031,48.2344 2028.875,47.9219 2028.875,47.6094 C2028.875,47.3438 2028.7344,47.0781 2028.5,46.9063 C2028.3125,46.7813 2028.1563,46.75 2027.7031,46.7344 L2024.3125,38.9063 L2020.5938,38.9063 C2020.1406,38.9063 2020,38.9219 2019.8281,39.0313 C2019.5625,39.2031 2019.3906,39.4844 2019.3906,39.7813 C2019.3906,40.0625 2019.5313,40.3281 2019.7813,40.5 C2019.9531,40.625 2020.1406,40.6563 2020.5938,40.6563 L2021.5625,40.6563 L2018.9844,46.7344 C2018.2344,46.7344 2017.8281,47.0313 2017.8281,47.6094 C2017.8281,48.2188 2018.2188,48.5 2019.0156,48.5 L2021.2813,48.5 C2021.6406,48.5 2021.8906,48.4688 2022.0313,48.375 C2022.2969,48.2188 2022.4688,47.9219 2022.4688,47.6094 C2022.4688,47.3438 2022.3281,47.0781 2022.0938,46.9063 C2021.9063,46.7656 2021.75,46.7344 2021.2813,46.7344 L2020.9844,46.7344 L2021.3281,45.9375 L2025.2813,45.9375 Z M2024.5156,44.1875 L2022.0625,44.1875 L2023.2969,41.3125 L2024.5156,44.1875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="90" x="2044.25" y="47.948">QuadratureBase</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1876.5" x2="2269.5" y1="60" y2="60"/><polygon fill="none" points="1886.5,66,1890.5,70,1886.5,74,1882.5,70" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1895.5" y="74.2189">_weights : Vector</text><polygon fill="none" points="1886.5,79.1999,1890.5,83.1999,1886.5,87.1999,1882.5,83.1999" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="1895.5" y="87.4188">_points : VectorVector</text><polygon fill="none" points="1886.5,92.3998,1890.5,96.3998,1886.5,100.3998,1882.5,96.3998" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1895.5" y="100.6187">_connectivity : VectorVectorU</text><polygon fill="none" points="1886.5,105.5997,1890.5,109.5997,1886.5,113.5997,1882.5,109.5997" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="1895.5" y="113.8186">_name : std::string</text><polygon fill="none" points="1886.5,118.7996,1890.5,122.7996,1886.5,126.7996,1882.5,122.7996" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1895.5" y="127.0185">_nq : unsigned</text><polygon fill="none" points="1886.5,131.9995,1890.5,135.9995,1886.5,139.9995,1882.5,135.9995" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1895.5" y="140.2184">_order : unsigned</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1876.5" x2="2269.5" y1="147.1994" y2="147.1994"/><ellipse cx="1886.5" cy="158.1994" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="1895.5" y="161.4183">QuadratureBase(unsigned order)</text><ellipse cx="1886.5" cy="171.3993" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1895.5" y="174.6182">~QuadratureBase()</text><ellipse cx="1886.5" cy="184.5992" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="369" x="1895.5" y="187.8181">CreateQuadrature(QUAD_NAME name, unsigned order) : QuadratureBase*</text><ellipse cx="1886.5" cy="197.7991" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1895.5" y="201.018">GetWeights() : Vector {query}</text><ellipse cx="1886.5" cy="210.999" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1895.5" y="214.2179">GetPoints() : VectorVector {query}</text><ellipse cx="1886.5" cy="224.1989" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1895.5" y="227.4178">GetConnectivity() : VectorVectorU {query}</text><ellipse cx="1886.5" cy="237.3988" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="1895.5" y="240.6177">Integrate(double(f)(doublex0,doublex1,doublex2)) : double</text><ellipse cx="1886.5" cy="250.5987" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="1895.5" y="253.8176">SumUpWeights() : double</text><ellipse cx="1886.5" cy="263.7986" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1895.5" y="267.0175">GetName() : std::string {query}</text><ellipse cx="1886.5" cy="276.9985" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1895.5" y="280.2174">GetNq() : unsigned {query}</text><ellipse cx="1886.5" cy="290.1984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="1895.5" y="293.4173">GetOrder() : unsigned {query}</text><ellipse cx="1886.5" cy="303.3983" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="1895.5" y="306.6173">PrintPoints() : void</text><ellipse cx="1886.5" cy="316.5982" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="1895.5" y="319.8172">PrintPointsAndWeights() : void</text><ellipse cx="1886.5" cy="329.7981" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1895.5" y="333.0171">PrintWeights() : void</text><polygon fill="#FFFF44" points="1886.5,337.998,1890.5,341.998,1886.5,345.998,1882.5,341.998" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="113" x="1895.5" y="346.217">SetConnectivity() : void</text><polygon fill="#FFFF44" points="1886.5,351.1979,1890.5,355.1979,1886.5,359.1979,1882.5,355.1979" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="82" x="1895.5" y="359.4169">SetName() : void</text><polygon fill="#FFFF44" points="1886.5,364.3978,1890.5,368.3978,1886.5,372.3978,1882.5,368.3978" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="67" x="1895.5" y="372.6168">SetNq() : void</text><polygon fill="#FFFF44" points="1886.5,377.5977,1890.5,381.5977,1886.5,385.5977,1882.5,381.5977" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1895.5" y="385.8167">SetOrder(unsigned order) : void</text><polygon fill="#FFFF44" points="1886.5,390.7976,1890.5,394.7976,1886.5,398.7976,1882.5,394.7976" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="141" x="1895.5" y="399.0166">SetPointsAndWeights() : void</text><!--MD5=[168618c52cf8b01b81c881510cd68189]
class Reconstructor--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="87.5997" id="Reconstructor" style="stroke: #A80036; stroke-width: 1.5;" width="1073" x="2305.5" y="173"/><ellipse cx="2799.75" cy="189" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2794.75,190.1563 C2794.75,192.6563 2796.8906,194.4688 2799.8125,194.4688 C2801.0469,194.4688 2802.2188,194.1719 2802.9688,193.6563 C2803.5781,193.2344 2803.9063,192.8125 2803.9063,192.4063 C2803.9063,191.9375 2803.4844,191.5313 2802.9844,191.5313 C2802.75,191.5313 2802.5313,191.6094 2802.3281,191.8125 C2801.8906,192.25 2801.8906,192.25 2801.7188,192.3438 C2801.2656,192.5781 2800.625,192.7188 2799.8594,192.7188 C2797.8594,192.7188 2796.5781,191.7031 2796.5781,190.125 L2796.5781,189.0781 C2796.5781,187.375 2797.7969,186.1719 2799.5,186.1719 C2800.0781,186.1719 2800.6563,186.3125 2801.125,186.5625 C2801.5938,186.8281 2801.7656,187.0156 2801.8281,187.375 C2801.9531,188.0469 2802.2031,188.2969 2802.7344,188.2969 C2803.0156,188.2969 2803.2969,188.1563 2803.4844,187.9375 C2803.6094,187.7656 2803.6563,187.5938 2803.6563,187.1563 L2803.6563,185.7969 C2803.6563,185.375 2803.6406,185.2344 2803.5156,185.0625 C2803.3438,184.8125 2803.0625,184.6563 2802.7344,184.6563 C2802.4219,184.6563 2802.2188,184.7656 2802,185.0313 C2800.8281,184.5313 2800.3906,184.4219 2799.4375,184.4219 C2796.7656,184.4219 2794.75,186.4375 2794.75,189.0625 L2794.75,190.1563 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="76" x="2820.25" y="192.948">Reconstructor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2306.5" x2="3377.5" y1="205" y2="205"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2306.5" x2="3377.5" y1="213" y2="213"/><ellipse cx="2316.5" cy="224" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="2325.5" y="227.2189">Reconstructor(Config* settings)</text><ellipse cx="2316.5" cy="237.1999" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="566" x="2325.5" y="240.4188">ReconstructSlopeStruct(double uL, double uC, double uR, double dxL, double dxR, std::string limiter) : double {query}</text><ellipse cx="2316.5" cy="250.3998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1047" x="2325.5" y="253.6187">ReconstructSlopeUnstruct(unsigned nq, unsigned ncell, VectorVector&amp; psi, VectorVector&amp; psiDerX, VectorVector&amp; psiDerY, Vector&amp; area, VectorVector&amp; neighbor, VectorVector&amp; nx, VectorVector&amp; ny) : void {query}</text><!--MD5=[0b503fe5c24e14c3c70681465d2d6a28]
class SNSolver--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="100.7996" id="SNSolver" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="1318" y="710.5"/><ellipse cx="1365.75" cy="726.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1360.75,727.6563 C1360.75,730.1563 1362.8906,731.9688 1365.8125,731.9688 C1367.0469,731.9688 1368.2188,731.6719 1368.9688,731.1563 C1369.5781,730.7344 1369.9063,730.3125 1369.9063,729.9063 C1369.9063,729.4375 1369.4844,729.0313 1368.9844,729.0313 C1368.75,729.0313 1368.5313,729.1094 1368.3281,729.3125 C1367.8906,729.75 1367.8906,729.75 1367.7188,729.8438 C1367.2656,730.0781 1366.625,730.2188 1365.8594,730.2188 C1363.8594,730.2188 1362.5781,729.2031 1362.5781,727.625 L1362.5781,726.5781 C1362.5781,724.875 1363.7969,723.6719 1365.5,723.6719 C1366.0781,723.6719 1366.6563,723.8125 1367.125,724.0625 C1367.5938,724.3281 1367.7656,724.5156 1367.8281,724.875 C1367.9531,725.5469 1368.2031,725.7969 1368.7344,725.7969 C1369.0156,725.7969 1369.2969,725.6563 1369.4844,725.4375 C1369.6094,725.2656 1369.6563,725.0938 1369.6563,724.6563 L1369.6563,723.2969 C1369.6563,722.875 1369.6406,722.7344 1369.5156,722.5625 C1369.3438,722.3125 1369.0625,722.1563 1368.7344,722.1563 C1368.4219,722.1563 1368.2188,722.2656 1368,722.5313 C1366.8281,722.0313 1366.3906,721.9219 1365.4375,721.9219 C1362.7656,721.9219 1360.75,723.9375 1360.75,726.5625 L1360.75,727.6563 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52" x="1386.25" y="730.448">SNSolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1319" x2="1473" y1="742.5" y2="742.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1319" x2="1473" y1="750.5" y2="750.5"/><ellipse cx="1329" cy="761.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1338" y="764.7189">SNSolver(Config* settings)</text><ellipse cx="1329" cy="774.6999" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="1338" y="777.9188">Save() : void {query}</text><ellipse cx="1329" cy="787.8998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="1338" y="791.1187">Solve() : void</text><ellipse cx="1329" cy="801.0997" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="1338" y="804.3186">SolveMPI() : void</text><!--MD5=[7e0cc054e68485d8dbab588155cf841a]
class Solver--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="417.5972" id="Solver" style="stroke: #A80036; stroke-width: 1.5;" width="264" x="925" y="8"/><ellipse cx="1035.25" cy="24" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1036.7813,25.9375 L1037.1094,26.7344 L1036.8281,26.7344 C1036.375,26.7344 1036.25,26.7656 1036.0781,26.875 C1035.7969,27.0156 1035.625,27.3125 1035.625,27.6094 C1035.625,27.9063 1035.7656,28.1563 1036,28.3281 C1036.1719,28.4531 1036.4063,28.5 1036.8281,28.5 L1039.1875,28.5 C1039.5469,28.5 1039.7969,28.4688 1039.9375,28.375 C1040.2031,28.2344 1040.375,27.9219 1040.375,27.6094 C1040.375,27.3438 1040.2344,27.0781 1040,26.9063 C1039.8125,26.7813 1039.6563,26.75 1039.2031,26.7344 L1035.8125,18.9063 L1032.0938,18.9063 C1031.6406,18.9063 1031.5,18.9219 1031.3281,19.0313 C1031.0625,19.2031 1030.8906,19.4844 1030.8906,19.7813 C1030.8906,20.0625 1031.0313,20.3281 1031.2813,20.5 C1031.4531,20.625 1031.6406,20.6563 1032.0938,20.6563 L1033.0625,20.6563 L1030.4844,26.7344 C1029.7344,26.7344 1029.3281,27.0313 1029.3281,27.6094 C1029.3281,28.2188 1029.7188,28.5 1030.5156,28.5 L1032.7813,28.5 C1033.1406,28.5 1033.3906,28.4688 1033.5313,28.375 C1033.7969,28.2188 1033.9688,27.9219 1033.9688,27.6094 C1033.9688,27.3438 1033.8281,27.0781 1033.5938,26.9063 C1033.4063,26.7656 1033.25,26.7344 1032.7813,26.7344 L1032.4844,26.7344 L1032.8281,25.9375 L1036.7813,25.9375 Z M1036.0156,24.1875 L1033.5625,24.1875 L1034.7969,21.3125 L1036.0156,24.1875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="35" x="1055.75" y="27.948">Solver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="926" x2="1188" y1="40" y2="40"/><polygon fill="none" points="936,46,940,50,936,54,932,50" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="945" y="54.2189">_settings : Config*</text><polygon fill="none" points="936,59.1999,940,63.1999,936,67.1999,932,63.1999" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="945" y="67.4188">_mesh : Mesh*</text><polygon fill="none" points="936,72.3998,940,76.3998,936,80.3998,932,76.3998" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="945" y="80.6187">_g : NumericalFlux*</text><polygon fill="none" points="936,85.5997,940,89.5997,936,93.5997,932,89.5997" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="945" y="93.8186">_weights : Vector</text><polygon fill="none" points="936,98.7996,940,102.7996,936,106.7996,932,102.7996" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="945" y="107.0185">_psi : VectorVector</text><polygon fill="none" points="936,111.9995,940,115.9995,936,119.9995,932,115.9995" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="945" y="120.2184">_quadPoints : VectorVector</text><polygon fill="none" points="936,125.1994,940,129.1994,936,133.1994,932,129.1994" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="945" y="133.4183">_dt : double</text><polygon fill="none" points="936,138.3993,940,142.3993,936,146.3993,932,142.3993" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="945" y="146.6182">_sigmaSH20 : std::vector&lt;Matrix&gt;</text><polygon fill="none" points="936,151.5992,940,155.5992,936,159.5992,932,155.5992" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="945" y="159.8181">_boundaryCells : std::vector&lt;bool&gt;</text><polygon fill="none" points="936,164.7991,940,168.7991,936,172.7991,932,168.7991" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="945" y="173.018">_areas : std::vector&lt;double&gt;</text><polygon fill="none" points="936,177.999,940,181.999,936,185.999,932,181.999" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="945" y="186.2179">_density : std::vector&lt;double&gt;</text><polygon fill="none" points="936,191.1989,940,195.1989,936,199.1989,932,195.1989" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="945" y="199.4178">_sH20 : std::vector&lt;double&gt;</text><polygon fill="none" points="936,204.3988,940,208.3988,936,212.3988,932,208.3988" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="945" y="212.6177">_sigmaTH20 : std::vector&lt;double&gt;</text><polygon fill="none" points="936,217.5987,940,221.5987,936,225.5987,932,221.5987" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="945" y="225.8176">_normals : std::vector&lt;std::vector&lt;Vector&gt; &gt;</text><polygon fill="none" points="936,230.7986,940,234.7986,936,238.7986,932,234.7986" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="945" y="239.0175">_neighbors : std::vector&lt;std::vector&lt;unsigned&gt; &gt;</text><polygon fill="none" points="936,243.9985,940,247.9985,936,251.9985,932,247.9985" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="945" y="252.2174">_nCells : unsigned</text><polygon fill="none" points="936,257.1984,940,261.1984,936,265.1984,932,261.1984" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="945" y="265.4173">_nTimeSteps : unsigned</text><polygon fill="none" points="936,270.3983,940,274.3983,936,278.3983,932,274.3983" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="945" y="278.6173">_nq : unsigned</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="926" x2="1188" y1="285.5982" y2="285.5982"/><ellipse cx="936" cy="296.5982" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="945" y="299.8172">Solver(Config* settings)</text><ellipse cx="936" cy="309.7981" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="161" x="945" y="313.0171">Create(Config* settings) : Solver*</text><polygon fill="#FFFF44" points="936,317.998,940,321.998,936,325.998,932,321.998" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="945" y="326.217">ComputeTimeStep(double cfl) : double {query}</text><polygon fill="#FFFF44" points="936,331.1979,940,335.1979,936,339.1979,932,335.1979" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="945" y="339.4169">LoadPatientDensity(std::string fileName) : void</text><polygon fill="#FFFF44" points="936,344.3978,940,348.3978,936,352.3978,932,348.3978" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="945" y="352.6168">LoadSigmaS(std::string fileName) : void</text><polygon fill="#FFFF44" points="936,357.5977,940,361.5977,936,365.5977,932,361.5977" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="945" y="365.8167">LoadSigmaT(std::string fileName) : void</text><polygon fill="#FFFF44" points="936,370.7976,940,374.7976,936,378.7976,932,374.7976" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="945" y="379.0166">LoadStoppingPower(std::string fileName) : void</text><ellipse cx="936" cy="388.9975" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="945" y="392.2165">Save() : void {query}</text><polygon fill="#FFFF44" points="936,397.1974,940,401.1974,936,405.1974,932,401.1974" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="945" y="405.4164">SetupIC() : void</text><ellipse cx="936" cy="415.3973" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="945" y="418.6163">Solve() : void</text><!--MD5=[5c1f2380e58c36d5ea81108e4a7509d5]
class UpwindFlux--><rect fill="#FEFECE" filter="url(#f15j5t2yauxf8m)" height="74.3998" id="UpwindFlux" style="stroke: #A80036; stroke-width: 1.5;" width="451" x="1074.5" y="1122.5"/><ellipse cx="1263.25" cy="1138.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1258.25,1139.6563 C1258.25,1142.1563 1260.3906,1143.9688 1263.3125,1143.9688 C1264.5469,1143.9688 1265.7188,1143.6719 1266.4688,1143.1563 C1267.0781,1142.7344 1267.4063,1142.3125 1267.4063,1141.9063 C1267.4063,1141.4375 1266.9844,1141.0313 1266.4844,1141.0313 C1266.25,1141.0313 1266.0313,1141.1094 1265.8281,1141.3125 C1265.3906,1141.75 1265.3906,1141.75 1265.2188,1141.8438 C1264.7656,1142.0781 1264.125,1142.2188 1263.3594,1142.2188 C1261.3594,1142.2188 1260.0781,1141.2031 1260.0781,1139.625 L1260.0781,1138.5781 C1260.0781,1136.875 1261.2969,1135.6719 1263,1135.6719 C1263.5781,1135.6719 1264.1563,1135.8125 1264.625,1136.0625 C1265.0938,1136.3281 1265.2656,1136.5156 1265.3281,1136.875 C1265.4531,1137.5469 1265.7031,1137.7969 1266.2344,1137.7969 C1266.5156,1137.7969 1266.7969,1137.6563 1266.9844,1137.4375 C1267.1094,1137.2656 1267.1563,1137.0938 1267.1563,1136.6563 L1267.1563,1135.2969 C1267.1563,1134.875 1267.1406,1134.7344 1267.0156,1134.5625 C1266.8438,1134.3125 1266.5625,1134.1563 1266.2344,1134.1563 C1265.9219,1134.1563 1265.7188,1134.2656 1265.5,1134.5313 C1264.3281,1134.0313 1263.8906,1133.9219 1262.9375,1133.9219 C1260.2656,1133.9219 1258.25,1135.9375 1258.25,1138.5625 L1258.25,1139.6563 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="1283.75" y="1142.448">UpwindFlux</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1075.5" x2="1524.5" y1="1154.5" y2="1154.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1075.5" x2="1524.5" y1="1162.5" y2="1162.5"/><ellipse cx="1085.5" cy="1173.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1094.5" y="1176.7189">UpwindFlux(Config* settings)</text><ellipse cx="1085.5" cy="1186.6999" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="425" x="1094.5" y="1189.9188">Flux(const Vector&amp; Omega, double psiL, double psiR, const Vector&amp; n) : double {query}</text><!--MD5=[51a439b0c181719f1a10a280166c3aa3]
reverse link NumericalFlux to LaxFriedrichsFlux--><path d="M1019.97,822.43 C970.45,903.23 883.87,1044.49 840.44,1115.37 " fill="none" id="NumericalFlux&lt;-LaxFriedrichsFlux" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1014.11,818.58,1030.53,805.19,1026.05,825.9,1014.11,818.58" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c8ea5724d5b402e5c8d4ca42df5ffb9]
reverse link NumericalFlux to UpwindFlux--><path d="M1094.07,822.48 C1145.27,906.04 1236.06,1054.17 1277.84,1122.34 " fill="none" id="NumericalFlux&lt;-UpwindFlux" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1087.95,825.9,1083.47,805.19,1099.89,818.58,1087.95,825.9" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f29213e6409b0dbeddb5359456126346]
reverse link QLookupQuadrature to QLDFESA--><path d="M2187.74,875.5 C2150.39,947.06 2103.55,1036.77 2072.75,1095.77 " fill="none" id="QLookupQuadrature&lt;-QLDFESA" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2181.56,872.22,2197.02,857.73,2193.97,878.7,2181.56,872.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e6462bb42d962df88f12397729eebeae]
reverse link QLookupQuadrature to QLebedev--><path d="M2247,877.78 C2247,948.96 2247,1037.39 2247,1095.77 " fill="none" id="QLookupQuadrature&lt;-QLebedev" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2240,877.73,2247,857.73,2254,877.73,2240,877.73" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5c097905ed270dc8517366d8f0d54a26]
reverse link QLookupQuadrature to QLevelSymmetric--><path d="M2308.97,875.55 C2335.95,924.89 2367.97,983.34 2397,1036 C2407.74,1055.49 2419.5,1076.7 2430.16,1095.91 " fill="none" id="QLookupQuadrature&lt;-QLevelSymmetric" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2302.72,878.72,2299.27,857.81,2315.01,872.01,2302.72,878.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e1b6629996e78d6831d3c62b50670482]
reverse link QuadratureBase to QDummy--><path d="M1865.64,420.68 C1841.73,446.59 1822.24,469.7 1812,486 C1770.1,552.67 1742.21,639.44 1726.76,697.3 " fill="none" id="QuadratureBase&lt;-QDummy" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1860.57,415.85,1879.35,406.03,1870.8,425.41,1860.57,415.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a98013c9e348f9d44b08ef11aadf8b85]
reverse link QuadratureBase to QGaussLegendreTensorized--><path d="M2027.8,425.6 C2006.68,522.61 1983.06,631.1 1968.61,697.48 " fill="none" id="QuadratureBase&lt;-QGaussLegendreTensorized" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2020.97,424.1,2032.06,406.04,2034.65,427.08,2020.97,424.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7f3b490deb3fa0388444aa1c9301dfa9]
reverse link QuadratureBase to QLookupQuadrature--><path d="M2139.49,425.12 C2165.93,507.46 2195.04,598.14 2216.29,664.35 " fill="none" id="QuadratureBase&lt;-QLookupQuadrature" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2132.82,427.23,2133.37,406.04,2146.15,422.95,2132.82,427.23" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[835644a82503d26b2c146b2473052e94]
reverse link QuadratureBase to QMonteCarlo--><path d="M2278.38,418.74 C2281.58,421.2 2284.79,423.62 2288,426 C2332.11,458.7 2360.07,444.47 2396,486 C2448.68,546.89 2475.97,637.2 2489.13,697.3 " fill="none" id="QuadratureBase&lt;-QMonteCarlo" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2273.74,424,2262.37,406.11,2282.41,413,2273.74,424" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2865e895988d2514b2f754bd9f7b9c94]
reverse link Solver to SNSolver--><path d="M1203.62,423.73 C1204.41,424.49 1205.21,425.25 1206,426 C1241.97,460.1 1269.23,447.15 1300,486 C1353.12,553.07 1378,651.67 1388.74,710.49 " fill="none" id="Solver&lt;-SNSolver" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1198.42,428.43,1189.32,409.29,1208.37,418.57,1198.42,428.43" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1ddc86840206f8769827b49fc9d67fda]
reverse link Solver to Mesh--><path d="M914.35,335.86 C860.46,380.38 796.64,433.11 732.64,486 " fill="none" id="Solver&lt;-Mesh" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="924.64,327.36,917.4673,328.103,915.3944,335.0097,922.5671,334.2667,924.64,327.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[141236dffacf4bdc2074205320151f00]
reverse link Solver to NumericalFlux--><path d="M1057,439.24 C1057,542.84 1057,656.5 1057,716.8 " fill="none" id="Solver&lt;-NumericalFlux" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1057,426,1053,432,1057,438,1061,432,1057,426" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8772c58eb269b237af2b9eab72533c27]
@startuml






class LaxFriedrichsFlux {
	+LaxFriedrichsFlux(Config* settings)
	+Flux(const Vector& Omega, double psiL, double psiR, const Vector& n) : double {query}
	-_dt : double
}


class Mesh {
	+Mesh()
	+Mesh(std::vector<Vector> nodes, std::vector<std::vector<unsigned> > cells, std::vector<std::pair<BOUNDARY_TYPE, std::vector<unsigned> > > boundaries)
	+~Mesh()
	#ComputeOutwardFacingNormal(const Vector& nodeA, const Vector& nodeB, const Vector& cellCenter) : Vector
	#_nodeNeighbors : blaze::CompressedMatrix<bool>
	#_dim : const unsigned
	#_ghostCellID : const unsigned
	#_numBoundaries : const unsigned
	#_numCells : const unsigned
	#_numNodes : const unsigned
	#_numNodesPerCell : const unsigned
	#_log : std::shared_ptr<spdlog::logger>
	#_cellMidPoints : std::vector<Vector>
	#_nodes : std::vector<Vector>
	+GetCellMidPoints() : std::vector<Vector>& {query}
	+GetNodes() : std::vector<Vector>& {query}
	#_isBoundaryCell : std::vector<bool>
	+GetBoundaryCellArray() : std::vector<bool>& {query}
	#_cellAreas : std::vector<double>
	+GetCellAreas() : std::vector<double>& {query}
	#_boundaries : std::vector<std::pair<BOUNDARY_TYPE, std::vector<unsigned> > >
	#_cellNormals : std::vector<std::vector<Vector> >
	+GetNormals() : std::vector<std::vector<Vector> >& {query}
	#_cellNeighbors : std::vector<std::vector<unsigned> >
	#_cells : std::vector<std::vector<unsigned> >
	+GetCells() : std::vector<std::vector<unsigned> >& {query}
	+GetNeighbours() : std::vector<std::vector<unsigned> >& {query}
	#_colors : std::vector<unsigned>
	+GetPartitionIDs() : std::vector<unsigned>& {query}
	+GetDim() : unsigned {query}
	+GetNumCells() : unsigned {query}
	+GetNumNodes() : unsigned {query}
	+GetNumNodesPerCell() : unsigned {query}
	#ComputeCellAreas() : void
	#ComputeCellMidpoints() : void
	#ComputeConnectivity() : void
	#ComputePartitioning() : void
	+ComputeSlopes(unsigned nq, VectorVector& psiDerX, VectorVector& psiDerY, const VectorVector& psi) : void {query}
}


abstract class NumericalFlux {
	+NumericalFlux(Config* settings)
	+{static} Create(Config* settings) : NumericalFlux*
	+{abstract} Flux(const Vector& Omega, double psiL, double psiR, const Vector& n) : double {query}
}


class Physics {
	+Physics(Config* settings)
	-_totalxsH2O : Matrix
	-_xsH2O : Matrix
	+{static} Create(Config* settings) : Physics*
	+GetScatteringXS(std::vector<double> energies, std::vector<double> density, std::vector<double> Omegas) : VectorVector
	+GetStoppingPower(std::vector<double> energies, std::vector<double> sH2O) : VectorVector
	+GetTotalXS(std::vector<double> energies, std::vector<double> density) : VectorVector
	-LoadXSH2O(std::string fileName1, std::string fileName2) : void
}


class QDummy {
	+QDummy(unsigned order)
	+~QDummy()
	+SetConnectivity() : void
	+SetName() : void
	+SetNq() : void
	+SetPointsAndWeights() : void
}


class QGaussLegendreTensorized {
	+QGaussLegendreTensorized(unsigned order)
	+~QGaussLegendreTensorized()
	+SetConnectivity() : void
	+SetName() : void
	+SetNq() : void
	+SetPointsAndWeights() : void
}


class QLDFESA {
	+QLDFESA(unsigned order)
	+~QLDFESA()
	+GetLookupTable() : std::string
	+SetAvailOrders() : void
	+SetConnectivity() : void
	+SetName() : void
}


class QLebedev {
	+QLebedev(unsigned order)
	+~QLebedev()
	+GetLookupTable() : std::string
	+SetAvailOrders() : void
	+SetConnectivity() : void
	+SetName() : void
}


class QLevelSymmetric {
	+QLevelSymmetric(unsigned order)
	+~QLevelSymmetric()
	+GetLookupTable() : std::string
	+SetAvailOrders() : void
	+SetConnectivity() : void
	+SetName() : void
}


abstract class QLookupQuadrature {
	+QLookupQuadrature(unsigned order)
	+~QLookupQuadrature()
	#CheckOrder() : bool
	#{abstract} GetLookupTable() : std::string
	#_availableOrders : std::vector<unsigned>
	#_nqByOrder : std::vector<unsigned>
	+getAvailOrders() : std::vector<unsigned> {query}
	#{abstract} SetAvailOrders() : void
	#SetNq() : void
	#SetPointsAndWeights() : void
	+printAvailOrders() : void {query}
}


class QMonteCarlo {
	+QMonteCarlo(unsigned order)
	+~QMonteCarlo()
	+SetConnectivity() : void
	+SetName() : void
	+SetNq() : void
	+SetPointsAndWeights() : void
}


abstract class QuadratureBase {
	+QuadratureBase(unsigned order)
	+~QuadratureBase()
	+{static} CreateQuadrature(QUAD_NAME name, unsigned order) : QuadratureBase*
	+GetWeights() : Vector {query}
	#_weights : Vector
	+GetPoints() : VectorVector {query}
	#_points : VectorVector
	+GetConnectivity() : VectorVectorU {query}
	#_connectivity : VectorVectorU
	+Integrate(double(f)(doublex0,doublex1,doublex2)) : double
	+SumUpWeights() : double
	+GetName() : std::string {query}
	#_name : std::string
	+GetNq() : unsigned {query}
	+GetOrder() : unsigned {query}
	#_nq : unsigned
	#_order : unsigned
	+PrintPoints() : void
	+PrintPointsAndWeights() : void
	+PrintWeights() : void
	#{abstract} SetConnectivity() : void
	#{abstract} SetName() : void
	#{abstract} SetNq() : void
	#SetOrder(unsigned order) : void
	#{abstract} SetPointsAndWeights() : void
}


class Reconstructor {
	+Reconstructor(Config* settings)
	+ReconstructSlopeStruct(double uL, double uC, double uR, double dxL, double dxR, std::string limiter) : double {query}
	+ReconstructSlopeUnstruct(unsigned nq, unsigned ncell, VectorVector& psi, VectorVector& psiDerX, VectorVector& psiDerY, Vector& area, VectorVector& neighbor, VectorVector& nx, VectorVector& ny) : void {query}
}


class SNSolver {
	+SNSolver(Config* settings)
	+Save() : void {query}
	+Solve() : void
	+SolveMPI() : void
}


abstract class Solver {
	+Solver(Config* settings)
	#_settings : Config*
	#_mesh : Mesh*
	#_g : NumericalFlux*
	+{static} Create(Config* settings) : Solver*
	#_weights : Vector
	#_psi : VectorVector
	#_quadPoints : VectorVector
	#ComputeTimeStep(double cfl) : double {query}
	#_dt : double
	#_sigmaSH20 : std::vector<Matrix>
	#_boundaryCells : std::vector<bool>
	#_areas : std::vector<double>
	#_density : std::vector<double>
	#_sH20 : std::vector<double>
	#_sigmaTH20 : std::vector<double>
	#_normals : std::vector<std::vector<Vector> >
	#_neighbors : std::vector<std::vector<unsigned> >
	#_nCells : unsigned
	#_nTimeSteps : unsigned
	#_nq : unsigned
	#LoadPatientDensity(std::string fileName) : void
	#LoadSigmaS(std::string fileName) : void
	#LoadSigmaT(std::string fileName) : void
	#LoadStoppingPower(std::string fileName) : void
	+{abstract} Save() : void {query}
	#SetupIC() : void
	+{abstract} Solve() : void
}


class UpwindFlux {
	+UpwindFlux(Config* settings)
	+Flux(const Vector& Omega, double psiL, double psiR, const Vector& n) : double {query}
}






NumericalFlux <|- - LaxFriedrichsFlux


NumericalFlux <|- - UpwindFlux


QLookupQuadrature <|- - QLDFESA


QLookupQuadrature <|- - QLebedev


QLookupQuadrature <|- - QLevelSymmetric


QuadratureBase <|- - QDummy


QuadratureBase <|- - QGaussLegendreTensorized


QuadratureBase <|- - QLookupQuadrature


QuadratureBase <|- - QMonteCarlo


Solver <|- - SNSolver






Solver o- - Mesh


Solver o- - NumericalFlux





@enduml

PlantUML version 1.2020.07(Sun Apr 19 13:42:40 CEST 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 13.0.2+8
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>